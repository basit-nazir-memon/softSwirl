/*!
 * jQuery JavaScript Library v1.12.4-aem
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:17Z
 */
(function (b, a) {
    if (typeof module === "object" && typeof module.exports === "object") {
        module.exports = b.document ? a(b, true) : function (c) {
            if (!c.document) {
                throw new Error("jQuery requires a window with a document")
            } return a(c)
        }
    } else {
        a(b)
    }
}(typeof window !== "undefined" ? window : this, function (bc, aD) {
    var aW = [];
    var m = bc.document;
    var X = aW.slice;
    var aH = aW.concat;
    var w = aW.push;
    var b2 = aW.indexOf;
    var ak = {};
    var x = ak.toString;
    var R = ak.hasOwnProperty;
    var F = {};
    var ap = "1.12.4-aem", bP = function (cd, ce) {
        return new bP.fn.init(cd, ce)
    }, G = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, bZ = /^-ms-/, a3 = /-([\da-z])/gi, W = function (cd, ce) {
        return ce.toUpperCase()
    };
    bP.fn = bP.prototype = {
        jquery: ap, constructor: bP, selector: "", length: 0, toArray: function () {
            return X.call(this)
        }, get: function (cd) {
            return cd != null ? (cd < 0 ? this[cd + this.length] : this[cd]) : X.call(this)
        }, pushStack: function (cd) {
            var ce = bP.merge(this.constructor(), cd);
            ce.prevObject = this;
            ce.context = this.context;
            return ce
        }, each: function (cd) {
            return bP.each(this, cd)
        }, map: function (cd) {
            return this.pushStack(bP.map(this, function (cf, ce) {
                return cd.call(cf, ce, cf)
            }))
        }, slice: function () {
            return this.pushStack(X.apply(this, arguments))
        }, first: function () {
            return this.eq(0)
        }, last: function () {
            return this.eq(-1)
        }, eq: function (cf) {
            var cd = this.length, ce = +cf + (cf < 0 ? cd : 0);
            return this.pushStack(ce >= 0 && ce < cd ? [this[ce]] : [])
        }, end: function () {
            return this.prevObject || this.constructor()
        }, push: w, sort: aW.sort, splice: aW.splice
    };
    bP.extend = bP.fn.extend = function () {
        var cd, cj, ce, cf, cm, ck, ci = arguments[0] || {}, ch = 1, cg = arguments.length, cl = false;
        if (typeof ci === "boolean") {
            cl = ci;
            ci = arguments[ch] || {};
            ch++
        } if (typeof ci !== "object" && !bP.isFunction(ci)) {
            ci = {}
        } if (ch === cg) {
            ci = this;
            ch--
        } for (;
            ch < cg;
            ch++) {
                if ((cm = arguments[ch]) != null) {
                    for (cf in cm) {
                        cd = ci[cf];
                        ce = cm[cf];
                        if (ci === ce) {
                            continue
                        } if (cl && ce && (bP.isPlainObject(ce) || (cj = bP.isArray(ce)))) {
                            if (cj) {
                                cj = false;
                                ck = cd && bP.isArray(cd) ? cd : []
                            } else {
                                ck = cd && bP.isPlainObject(cd) ? cd : {}
                            } ci[cf] = bP.extend(cl, ck, ce)
                        } else {
                            if (ce !== undefined) {
                                ci[cf] = ce
                            }
                        }
                    }
                }
        } return ci
    };
    bP.extend({
        expando: "jQuery" + (ap + Math.random()).replace(/\D/g, ""), isReady: true, error: function (cd) {
            throw new Error(cd)
        }, noop: function () { }, isFunction: function (cd) {
            return bP.type(cd) === "function"
        }, isArray: Array.isArray || function (cd) {
            return bP.type(cd) === "array"
        }, isWindow: function (cd) {
            return cd != null && cd == cd.window
        }, isNumeric: function (ce) {
            var cd = ce && ce.toString();
            return !bP.isArray(ce) && (cd - parseFloat(cd) + 1) >= 0
        }, isEmptyObject: function (ce) {
            var cd;
            for (cd in ce) {
                return false
            } return true
        }, isPlainObject: function (cf) {
            var cd;
            if (!cf || bP.type(cf) !== "object" || cf.nodeType || bP.isWindow(cf)) {
                return false
            } try {
                if (cf.constructor && !R.call(cf, "constructor") && !R.call(cf.constructor.prototype, "isPrototypeOf")) {
                    return false
                }
            } catch (ce) {
                return false
            } if (!F.ownFirst) {
                for (cd in cf) {
                    return R.call(cf, cd)
                }
            } for (cd in cf) { } return cd === undefined || R.call(cf, cd)
        }, type: function (cd) {
            if (cd == null) {
                return cd + ""
            } return typeof cd === "object" || typeof cd === "function" ? ak[x.call(cd)] || "object" : typeof cd
        }, globalEval: function (cd) {
            if (cd && bP.trim(cd)) {
                (bc.execScript || function (ce) {
                    bc["eval"].call(bc, ce)
                })(cd)
            }
        }, camelCase: function (cd) {
            return cd.replace(bZ, "ms-").replace(a3, W)
        }, nodeName: function (ce, cd) {
            return ce.nodeName && ce.nodeName.toLowerCase() === cd.toLowerCase()
        }, each: function (cf, cg) {
            var ce, cd = 0;
            if (aB(cf)) {
                ce = cf.length;
                for (;
                    cd < ce;
                    cd++) {
                        if (cg.call(cf[cd], cd, cf[cd]) === false) {
                            break
                        }
                }
            } else {
                for (cd in cf) {
                    if (cg.call(cf[cd], cd, cf[cd]) === false) {
                        break
                    }
                }
            } return cf
        }, trim: function (cd) {
            return cd == null ? "" : (cd + "").replace(G, "")
        }, makeArray: function (cd, cf) {
            var ce = cf || [];
            if (cd != null) {
                if (aB(Object(cd))) {
                    bP.merge(ce, typeof cd === "string" ? [cd] : cd)
                } else {
                    w.call(ce, cd)
                }
            } return ce
        }, inArray: function (cg, ce, cf) {
            var cd;
            if (ce) {
                if (b2) {
                    return b2.call(ce, cg, cf)
                } cd = ce.length;
                cf = cf ? cf < 0 ? Math.max(0, cd + cf) : cf : 0;
                for (;
                    cf < cd;
                    cf++) {
                        if (cf in ce && ce[cf] === cg) {
                            return cf
                        }
                }
            } return -1
        }, merge: function (ch, cf) {
            var cd = +cf.length, ce = 0, cg = ch.length;
            while (ce < cd) {
                ch[cg++] = cf[ce++]
            } if (cd !== cd) {
                while (cf[ce] !== undefined) {
                    ch[cg++] = cf[ce++]
                }
            } ch.length = cg;
            return ch
        }, grep: function (cd, ck, ch) {
            var cj, cg = [], ce = 0, cf = cd.length, ci = !ch;
            for (;
                ce < cf;
                ce++) {
                    cj = !ck(cd[ce], ce);
                if (cj !== ci) {
                    cg.push(cd[ce])
                }
            } return cg
        }, map: function (ce, cj, cd) {
            var ch, ci, cg = 0, cf = [];
            if (aB(ce)) {
                ch = ce.length;
                for (;
                    cg < ch;
                    cg++) {
                        ci = cj(ce[cg], cg, cd);
                    if (ci != null) {
                        cf.push(ci)
                    }
                }
            } else {
                for (cg in ce) {
                    ci = cj(ce[cg], cg, cd);
                    if (ci != null) {
                        cf.push(ci)
                    }
                }
            } return aH.apply([], cf)
        }, guid: 1, proxy: function (ch, cg) {
            var cd, cf, ce;
            if (typeof cg === "string") {
                ce = ch[cg];
                cg = ch;
                ch = ce
            } if (!bP.isFunction(ch)) {
                return undefined
            } cd = X.call(arguments, 2);
            cf = function () {
                return ch.apply(cg || this, cd.concat(X.call(arguments)))
            };
            cf.guid = ch.guid = ch.guid || bP.guid++;
            return cf
        }, now: function () {
            return +(new Date())
        }, support: F
    });
    if (typeof Symbol === "function") {
        bP.fn[Symbol.iterator] = aW[Symbol.iterator]
    } bP.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (ce, cd) {
        ak["[object " + cd + "]"] = cd.toLowerCase()
    });
    function aB(cf) {
        var ce = !!cf && "length" in cf && cf.length, cd = bP.type(cf);
        if (cd === "function" || bP.isWindow(cf)) {
            return false
        } return cd === "array" || ce === 0 || typeof ce === "number" && ce > 0 && (ce - 1) in cf
    } var l =
        /*!
         * Sizzle CSS Selector Engine v2.2.1
         * http://sizzlejs.com/
         *
         * Copyright jQuery Foundation and other contributors
         * Released under the MIT license
         * http://jquery.org/license
         *
         * Date: 2015-10-17
         */
        (function (dk) {
            var cE, dn, ct, cN, cQ, cn, c2, dm, dt, cO, c3, c5, cI, cu, de, c9, dl, ck, cL, dg = "sizzle" + 1 * new Date(), cP = dk.document, dp = 0, da = 0, cf = cG(), df = cG(), cM = cG(), cK = function (dv, du) {
                if (dv === du) {
                    c3 = true
                } return 0
            }, cW = 1 << 31, cU = ({}).hasOwnProperty, di = [], dj = di.pop, cS = di.push, cd = di.push, cs = di.slice, cj = function (dx, dw) {
                var dv = 0, du = dx.length;
                for (;
                    dv < du;
                    dv++) {
                        if (dx[dv] === dw) {
                            return dv
                        }
                } return -1
            }, ce = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", cv = "[\\x20\\t\\r\\n\\f]", cR = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", dc = "\\[" + cv + "*(" + cR + ")(?:" + cv + "*([*^$|!~]?=)" + cv + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + cR + "))|)" + cv + "*\\]", cq = ":(" + cR + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + dc + ")*)|.*)\\)|)", cA = new RegExp(cv + "+", "g"), cx = new RegExp("^" + cv + "+|((?:^|[^\\\\])(?:\\\\.)*)" + cv + "+$", "g"), cB = new RegExp("^" + cv + "*," + cv + "*"), cH = new RegExp("^" + cv + "*([>+~]|" + cv + ")" + cv + "*"), cz = new RegExp("=" + cv + "*([^\\]'\"]*?)" + cv + "*\\]", "g"), cY = new RegExp(cq), c0 = new RegExp("^" + cR + "$"), c8 = { ID: new RegExp("^#(" + cR + ")"), CLASS: new RegExp("^\\.(" + cR + ")"), TAG: new RegExp("^(" + cR + "|[*])"), ATTR: new RegExp("^" + dc), PSEUDO: new RegExp("^" + cq), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + cv + "*(even|odd|(([+-]|)(\\d*)n|)" + cv + "*(?:([+-]|)" + cv + "*(\\d+)|))" + cv + "*\\)|)", "i"), bool: new RegExp("^(?:" + ce + ")$", "i"), needsContext: new RegExp("^" + cv + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + cv + "*((?:-\\d)?\\d*)" + cv + "*\\)|)(?=[^-]|$)", "i") }, ci = /^(?:input|select|textarea|button)$/i, cr = /^h\d$/i, cV = /^[^{]+\{\s*\[native \w/, cX = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, c7 = /[+~]/, cT = /'|\\/g, cy = new RegExp("\\\\([\\da-f]{1,6}" + cv + "?|(" + cv + ")|.)", "ig"), db = function (du, dx, dv) {
                var dw = "0x" + dx - 65536;
                return dw !== dw || dv ? dx : dw < 0 ? String.fromCharCode(dw + 65536) : String.fromCharCode(dw >> 10 | 55296, dw & 1023 | 56320)
            }, ds = function () {
                c5()
            };
            try {
                cd.apply((di = cs.call(cP.childNodes)), cP.childNodes);
                di[cP.childNodes.length].nodeType
            } catch (cJ) {
                cd = {
                    apply: di.length ? function (dv, du) {
                        cS.apply(dv, cs.call(du))
                    } : function (dx, dw) {
                        var du = dx.length, dv = 0;
                        while ((dx[du++] = dw[dv++])) { } dx.length = du - 1
                    }
                }
            } function cC(dB, dv, dE, dH) {
                var dz, dF, dy, du, dI, dG, dx, dC, dw = dv && dv.ownerDocument, dD = dv ? dv.nodeType : 9;
                dE = dE || [];
                if (typeof dB !== "string" || !dB || dD !== 1 && dD !== 9 && dD !== 11) {
                    return dE
                } if (!dH) {
                    if ((dv ? dv.ownerDocument || dv : cP) !== cI) {
                        c5(dv)
                    } dv = dv || cI;
                    if (de) {
                        if (dD !== 11 && (dG = cX.exec(dB))) {
                            if ((dz = dG[1])) {
                                if (dD === 9) {
                                    if ((dy = dv.getElementById(dz))) {
                                        if (dy.id === dz) {
                                            dE.push(dy);
                                            return dE
                                        }
                                    } else {
                                        return dE
                                    }
                                } else {
                                    if (dw && (dy = dw.getElementById(dz)) && cL(dv, dy) && dy.id === dz) {
                                        dE.push(dy);
                                        return dE
                                    }
                                }
                            } else {
                                if (dG[2]) {
                                    cd.apply(dE, dv.getElementsByTagName(dB));
                                    return dE
                                } else {
                                    if ((dz = dG[3]) && dn.getElementsByClassName && dv.getElementsByClassName) {
                                        cd.apply(dE, dv.getElementsByClassName(dz));
                                        return dE
                                    }
                                }
                            }
                        } if (dn.qsa && !cM[dB + " "] && (!c9 || !c9.test(dB))) {
                            if (dD !== 1) {
                                dw = dv;
                                dC = dB
                            } else {
                                if (dv.nodeName.toLowerCase() !== "object") {
                                    if ((du = dv.getAttribute("id"))) {
                                        du = du.replace(cT, "\\$&")
                                    } else {
                                        dv.setAttribute("id", (du = dg))
                                    } dx = cn(dB);
                                    dF = dx.length;
                                    dI = c0.test(du) ? "#" + du : "[id='" + du + "']";
                                    while (dF--) {
                                        dx[dF] = dI + " " + co(dx[dF])
                                    } dC = dx.join(",");
                                    dw = c7.test(dB) && cZ(dv.parentNode) || dv
                                }
                            } if (dC) {
                                try {
                                    cd.apply(dE, dw.querySelectorAll(dC));
                                    return dE
                                } catch (dA) { } finally {
                                    if (du === dg) {
                                        dv.removeAttribute("id")
                                    }
                                }
                            }
                        }
                    }
                } return dm(dB.replace(cx, "$1"), dv, dE, dH)
            } function cG() {
                var dv = [];
                function du(dw, dx) {
                    if (dv.push(dw + " ") > ct.cacheLength) {
                        delete du[dv.shift()]
                    } return (du[dw + " "] = dx)
                } return du
            } function cp(du) {
                du[dg] = true;
                return du
            } function cl(du) {
                var dw = cI.createElement("div");
                try {
                    return !!du(dw)
                } catch (dv) {
                    return false
                } finally {
                    if (dw.parentNode) {
                        dw.parentNode.removeChild(dw)
                    } dw = null
                }
            } function dq(dv, dx) {
                var du = dv.split("|"), dw = du.length;
                while (dw--) {
                    ct.attrHandle[du[dw]] = dx
                }
            } function cg(dv, du) {
                var dx = du && dv, dw = dx && dv.nodeType === 1 && du.nodeType === 1 && (~du.sourceIndex || cW) - (~dv.sourceIndex || cW);
                if (dw) {
                    return dw
                } if (dx) {
                    while ((dx = dx.nextSibling)) {
                        if (dx === du) {
                            return -1
                        }
                    }
                } return dv ? 1 : -1
            } function cD(du) {
                return function (dw) {
                    var dv = dw.nodeName.toLowerCase();
                    return dv === "input" && dw.type === du
                }
            } function ch(du) {
                return function (dw) {
                    var dv = dw.nodeName.toLowerCase();
                    return (dv === "input" || dv === "button") && dw.type === du
                }
            } function dd(du) {
                return cp(function (dv) {
                    dv = +dv;
                    return cp(function (dw, dA) {
                        var dy, dx = du([], dw.length, dv), dz = dx.length;
                        while (dz--) {
                            if (dw[(dy = dx[dz])]) {
                                dw[dy] = !(dA[dy] = dw[dy])
                            }
                        }
                    })
                })
            } function cZ(du) {
                return du && typeof du.getElementsByTagName !== "undefined" && du
            } dn = cC.support = {};
            cQ = cC.isXML = function (du) {
                var dv = du && (du.ownerDocument || du).documentElement;
                return dv ? dv.nodeName !== "HTML" : false
            };
            c5 = cC.setDocument = function (dw) {
                var du, dv, dx = dw ? dw.ownerDocument || dw : cP;
                if (dx === cI || dx.nodeType !== 9 || !dx.documentElement) {
                    return cI
                } cI = dx;
                cu = cI.documentElement;
                de = !cQ(cI);
                if ((dv = cI.defaultView) && dv.top !== dv) {
                    if (dv.addEventListener) {
                        dv.addEventListener("unload", ds, false)
                    } else {
                        if (dv.attachEvent) {
                            dv.attachEvent("onunload", ds)
                        }
                    }
                } dn.attributes = cl(function (dy) {
                    dy.className = "i";
                    return !dy.getAttribute("className")
                });
                dn.getElementsByTagName = cl(function (dy) {
                    dy.appendChild(cI.createComment(""));
                    return !dy.getElementsByTagName("*").length
                });
                dn.getElementsByClassName = cV.test(cI.getElementsByClassName);
                dn.getById = cl(function (dy) {
                    cu.appendChild(dy).id = dg;
                    return !cI.getElementsByName || !cI.getElementsByName(dg).length
                });
                if (dn.getById) {
                    ct.find.ID = function (dA, dz) {
                        if (typeof dz.getElementById !== "undefined" && de) {
                            var dy = dz.getElementById(dA);
                            return dy ? [dy] : []
                        }
                    };
                    ct.filter.ID = function (dz) {
                        var dy = dz.replace(cy, db);
                        return function (dA) {
                            return dA.getAttribute("id") === dy
                        }
                    }
                } else {
                    delete ct.find.ID;
                    ct.filter.ID = function (dz) {
                        var dy = dz.replace(cy, db);
                        return function (dB) {
                            var dA = typeof dB.getAttributeNode !== "undefined" && dB.getAttributeNode("id");
                            return dA && dA.value === dy
                        }
                    }
                } ct.find.TAG = dn.getElementsByTagName ? function (dy, dz) {
                    if (typeof dz.getElementsByTagName !== "undefined") {
                        return dz.getElementsByTagName(dy)
                    } else {
                        if (dn.qsa) {
                            return dz.querySelectorAll(dy)
                        }
                    }
                } : function (dy, dC) {
                    var dD, dB = [], dA = 0, dz = dC.getElementsByTagName(dy);
                    if (dy === "*") {
                        while ((dD = dz[dA++])) {
                            if (dD.nodeType === 1) {
                                dB.push(dD)
                            }
                        } return dB
                    } return dz
                };
                ct.find.CLASS = dn.getElementsByClassName && function (dz, dy) {
                    if (typeof dy.getElementsByClassName !== "undefined" && de) {
                        return dy.getElementsByClassName(dz)
                    }
                };
                dl = [];
                c9 = [];
                if ((dn.qsa = cV.test(cI.querySelectorAll))) {
                    cl(function (dy) {
                        cu.appendChild(dy).innerHTML = "<a id='" + dg + "'></a><select id='" + dg + "-\r\\' msallowcapture=''><option selected=''></option></select>";
                        if (dy.querySelectorAll("[msallowcapture^='']").length) {
                            c9.push("[*^$]=" + cv + "*(?:''|\"\")")
                        } if (!dy.querySelectorAll("[selected]").length) {
                            c9.push("\\[" + cv + "*(?:value|" + ce + ")")
                        } if (!dy.querySelectorAll("[id~=" + dg + "-]").length) {
                            c9.push("~=")
                        } if (!dy.querySelectorAll(":checked").length) {
                            c9.push(":checked")
                        } if (!dy.querySelectorAll("a#" + dg + "+*").length) {
                            c9.push(".#.+[+~]")
                        }
                    });
                    cl(function (dz) {
                        var dy = cI.createElement("input");
                        dy.setAttribute("type", "hidden");
                        dz.appendChild(dy).setAttribute("name", "D");
                        if (dz.querySelectorAll("[name=d]").length) {
                            c9.push("name" + cv + "*[*^$|!~]?=")
                        } if (!dz.querySelectorAll(":enabled").length) {
                            c9.push(":enabled", ":disabled")
                        } dz.querySelectorAll("*,:x");
                        c9.push(",.*:")
                    })
                } if ((dn.matchesSelector = cV.test((ck = cu.matches || cu.webkitMatchesSelector || cu.mozMatchesSelector || cu.oMatchesSelector || cu.msMatchesSelector)))) {
                    cl(function (dy) {
                        dn.disconnectedMatch = ck.call(dy, "div");
                        ck.call(dy, "[s!='']:x");
                        dl.push("!=", cq)
                    })
                } c9 = c9.length && new RegExp(c9.join("|"));
                dl = dl.length && new RegExp(dl.join("|"));
                du = cV.test(cu.compareDocumentPosition);
                cL = du || cV.test(cu.contains) ? function (dz, dy) {
                    var dB = dz.nodeType === 9 ? dz.documentElement : dz, dA = dy && dy.parentNode;
                    return dz === dA || !!(dA && dA.nodeType === 1 && (dB.contains ? dB.contains(dA) : dz.compareDocumentPosition && dz.compareDocumentPosition(dA) & 16))
                } : function (dz, dy) {
                    if (dy) {
                        while ((dy = dy.parentNode)) {
                            if (dy === dz) {
                                return true
                            }
                        }
                    } return false
                };
                cK = du ? function (dz, dy) {
                    if (dz === dy) {
                        c3 = true;
                        return 0
                    } var dA = !dz.compareDocumentPosition - !dy.compareDocumentPosition;
                    if (dA) {
                        return dA
                    } dA = (dz.ownerDocument || dz) === (dy.ownerDocument || dy) ? dz.compareDocumentPosition(dy) : 1;
                    if (dA & 1 || (!dn.sortDetached && dy.compareDocumentPosition(dz) === dA)) {
                        if (dz === cI || dz.ownerDocument === cP && cL(cP, dz)) {
                            return -1
                        } if (dy === cI || dy.ownerDocument === cP && cL(cP, dy)) {
                            return 1
                        } return cO ? (cj(cO, dz) - cj(cO, dy)) : 0
                    } return dA & 4 ? -1 : 1
                } : function (dz, dy) {
                    if (dz === dy) {
                        c3 = true;
                        return 0
                    } var dF, dC = 0, dE = dz.parentNode, dB = dy.parentNode, dA = [dz], dD = [dy];
                    if (!dE || !dB) {
                        return dz === cI ? -1 : dy === cI ? 1 : dE ? -1 : dB ? 1 : cO ? (cj(cO, dz) - cj(cO, dy)) : 0
                    } else {
                        if (dE === dB) {
                            return cg(dz, dy)
                        }
                    } dF = dz;
                    while ((dF = dF.parentNode)) {
                        dA.unshift(dF)
                    } dF = dy;
                    while ((dF = dF.parentNode)) {
                        dD.unshift(dF)
                    } while (dA[dC] === dD[dC]) {
                        dC++
                    } return dC ? cg(dA[dC], dD[dC]) : dA[dC] === cP ? -1 : dD[dC] === cP ? 1 : 0
                };
                return cI
            };
            cC.matches = function (dv, du) {
                return cC(dv, null, null, du)
            };
            cC.matchesSelector = function (dv, dx) {
                if ((dv.ownerDocument || dv) !== cI) {
                    c5(dv)
                } dx = dx.replace(cz, "='$1']");
                if (dn.matchesSelector && de && !cM[dx + " "] && (!dl || !dl.test(dx)) && (!c9 || !c9.test(dx))) {
                    try {
                        var du = ck.call(dv, dx);
                        if (du || dn.disconnectedMatch || dv.document && dv.document.nodeType !== 11) {
                            return du
                        }
                    } catch (dw) { }
                } return cC(dx, cI, null, [dv]).length > 0
            };
            cC.contains = function (du, dv) {
                if ((du.ownerDocument || du) !== cI) {
                    c5(du)
                } return cL(du, dv)
            };
            cC.attr = function (dw, du) {
                if ((dw.ownerDocument || dw) !== cI) {
                    c5(dw)
                } var dv = ct.attrHandle[du.toLowerCase()], dx = dv && cU.call(ct.attrHandle, du.toLowerCase()) ? dv(dw, du, !de) : undefined;
                return dx !== undefined ? dx : dn.attributes || !de ? dw.getAttribute(du) : (dx = dw.getAttributeNode(du)) && dx.specified ? dx.value : null
            };
            cC.error = function (du) {
                throw new Error("Syntax error, unrecognized expression: " + du)
            };
            cC.uniqueSort = function (dw) {
                var dx, dy = [], du = 0, dv = 0;
                c3 = !dn.detectDuplicates;
                cO = !dn.sortStable && dw.slice(0);
                dw.sort(cK);
                if (c3) {
                    while ((dx = dw[dv++])) {
                        if (dx === dw[dv]) {
                            du = dy.push(dv)
                        }
                    } while (du--) {
                        dw.splice(dy[du], 1)
                    }
                } cO = null;
                return dw
            };
            cN = cC.getText = function (dy) {
                var dx, dv = "", dw = 0, du = dy.nodeType;
                if (!du) {
                    while ((dx = dy[dw++])) {
                        dv += cN(dx)
                    }
                } else {
                    if (du === 1 || du === 9 || du === 11) {
                        if (typeof dy.textContent === "string") {
                            return dy.textContent
                        } else {
                            for (dy = dy.firstChild;
                                dy;
                                dy = dy.nextSibling) {
                                    dv += cN(dy)
                            }
                        }
                    } else {
                        if (du === 3 || du === 4) {
                            return dy.nodeValue
                        }
                    }
                } return dv
            };
            ct = cC.selectors = {
                cacheLength: 50, createPseudo: cp, match: c8, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: true }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: true }, "~": { dir: "previousSibling" } }, preFilter: {
                    ATTR: function (du) {
                        du[1] = du[1].replace(cy, db);
                        du[3] = (du[3] || du[4] || du[5] || "").replace(cy, db);
                        if (du[2] === "~=") {
                            du[3] = " " + du[3] + " "
                        } return du.slice(0, 4)
                    }, CHILD: function (du) {
                        du[1] = du[1].toLowerCase();
                        if (du[1].slice(0, 3) === "nth") {
                            if (!du[3]) {
                                cC.error(du[0])
                            } du[4] = +(du[4] ? du[5] + (du[6] || 1) : 2 * (du[3] === "even" || du[3] === "odd"));
                            du[5] = +((du[7] + du[8]) || du[3] === "odd")
                        } else {
                            if (du[3]) {
                                cC.error(du[0])
                            }
                        } return du
                    }, PSEUDO: function (dv) {
                        var du, dw = !dv[6] && dv[2];
                        if (c8.CHILD.test(dv[0])) {
                            return null
                        } if (dv[3]) {
                            dv[2] = dv[4] || dv[5] || ""
                        } else {
                            if (dw && cY.test(dw) && (du = cn(dw, true)) && (du = dw.indexOf(")", dw.length - du) - dw.length)) {
                                dv[0] = dv[0].slice(0, du);
                                dv[2] = dw.slice(0, du)
                            }
                        } return dv.slice(0, 3)
                    }
                }, filter: {
                    TAG: function (dv) {
                        var du = dv.replace(cy, db).toLowerCase();
                        return dv === "*" ? function () {
                            return true
                        } : function (dw) {
                            return dw.nodeName && dw.nodeName.toLowerCase() === du
                        }
                    }, CLASS: function (du) {
                        var dv = cf[du + " "];
                        return dv || (dv = new RegExp("(^|" + cv + ")" + du + "(" + cv + "|$)")) && cf(du, function (dw) {
                            return dv.test(typeof dw.className === "string" && dw.className || typeof dw.getAttribute !== "undefined" && dw.getAttribute("class") || "")
                        })
                    }, ATTR: function (dw, dv, du) {
                        return function (dy) {
                            var dx = cC.attr(dy, dw);
                            if (dx == null) {
                                return dv === "!="
                            } if (!dv) {
                                return true
                            } dx += "";
                            return dv === "=" ? dx === du : dv === "!=" ? dx !== du : dv === "^=" ? du && dx.indexOf(du) === 0 : dv === "*=" ? du && dx.indexOf(du) > -1 : dv === "$=" ? du && dx.slice(-du.length) === du : dv === "~=" ? (" " + dx.replace(cA, " ") + " ").indexOf(du) > -1 : dv === "|=" ? dx === du || dx.slice(0, du.length + 1) === du + "-" : false
                        }
                    }, CHILD: function (dv, dy, dx, dz, dw) {
                        var dB = dv.slice(0, 3) !== "nth", du = dv.slice(-4) !== "last", dA = dy === "of-type";
                        return dz === 1 && dw === 0 ? function (dC) {
                            return !!dC.parentNode
                        } : function (dJ, dH, dM) {
                            var dC, dF, dP, dK, dL, dG, dI = dB !== du ? "nextSibling" : "previousSibling", dO = dJ.parentNode, dE = dA && dJ.nodeName.toLowerCase(), dD = !dM && !dA, dN = false;
                            if (dO) {
                                if (dB) {
                                    while (dI) {
                                        dK = dJ;
                                        while ((dK = dK[dI])) {
                                            if (dA ? dK.nodeName.toLowerCase() === dE : dK.nodeType === 1) {
                                                return false
                                            }
                                        } dG = dI = dv === "only" && !dG && "nextSibling"
                                    } return true
                                } dG = [du ? dO.firstChild : dO.lastChild];
                                if (du && dD) {
                                    dK = dO;
                                    dP = dK[dg] || (dK[dg] = {});
                                    dF = dP[dK.uniqueID] || (dP[dK.uniqueID] = {});
                                    dC = dF[dv] || [];
                                    dL = dC[0] === dp && dC[1];
                                    dN = dL && dC[2];
                                    dK = dL && dO.childNodes[dL];
                                    while ((dK = ++dL && dK && dK[dI] || (dN = dL = 0) || dG.pop())) {
                                        if (dK.nodeType === 1 && ++dN && dK === dJ) {
                                            dF[dv] = [dp, dL, dN];
                                            break
                                        }
                                    }
                                } else {
                                    if (dD) {
                                        dK = dJ;
                                        dP = dK[dg] || (dK[dg] = {});
                                        dF = dP[dK.uniqueID] || (dP[dK.uniqueID] = {});
                                        dC = dF[dv] || [];
                                        dL = dC[0] === dp && dC[1];
                                        dN = dL
                                    } if (dN === false) {
                                        while ((dK = ++dL && dK && dK[dI] || (dN = dL = 0) || dG.pop())) {
                                            if ((dA ? dK.nodeName.toLowerCase() === dE : dK.nodeType === 1) && ++dN) {
                                                if (dD) {
                                                    dP = dK[dg] || (dK[dg] = {});
                                                    dF = dP[dK.uniqueID] || (dP[dK.uniqueID] = {});
                                                    dF[dv] = [dp, dN]
                                                } if (dK === dJ) {
                                                    break
                                                }
                                            }
                                        }
                                    }
                                } dN -= dw;
                                return dN === dz || (dN % dz === 0 && dN / dz >= 0)
                            }
                        }
                    }, PSEUDO: function (dx, dw) {
                        var du, dv = ct.pseudos[dx] || ct.setFilters[dx.toLowerCase()] || cC.error("unsupported pseudo: " + dx);
                        if (dv[dg]) {
                            return dv(dw)
                        } if (dv.length > 1) {
                            du = [dx, dx, "", dw];
                            return ct.setFilters.hasOwnProperty(dx.toLowerCase()) ? cp(function (dA, dC) {
                                var dz, dy = dv(dA, dw), dB = dy.length;
                                while (dB--) {
                                    dz = cj(dA, dy[dB]);
                                    dA[dz] = !(dC[dz] = dy[dB])
                                }
                            }) : function (dy) {
                                return dv(dy, 0, du)
                            }
                        } return dv
                    }
                }, pseudos: {
                    not: cp(function (du) {
                        var dv = [], dw = [], dx = c2(du.replace(cx, "$1"));
                        return dx[dg] ? cp(function (dz, dE, dC, dA) {
                            var dD, dy = dx(dz, null, dA, []), dB = dz.length;
                            while (dB--) {
                                if ((dD = dy[dB])) {
                                    dz[dB] = !(dE[dB] = dD)
                                }
                            }
                        }) : function (dA, dz, dy) {
                            dv[0] = dA;
                            dx(dv, null, dy, dw);
                            dv[0] = null;
                            return !dw.pop()
                        }
                    }), has: cp(function (du) {
                        return function (dv) {
                            return cC(du, dv).length > 0
                        }
                    }), contains: cp(function (du) {
                        du = du.replace(cy, db);
                        return function (dv) {
                            return (dv.textContent || dv.innerText || cN(dv)).indexOf(du) > -1
                        }
                    }), lang: cp(function (du) {
                        if (!c0.test(du || "")) {
                            cC.error("unsupported lang: " + du)
                        } du = du.replace(cy, db).toLowerCase();
                        return function (dw) {
                            var dv;
                            do {
                                if ((dv = de ? dw.lang : dw.getAttribute("xml:lang") || dw.getAttribute("lang"))) {
                                    dv = dv.toLowerCase();
                                    return dv === du || dv.indexOf(du + "-") === 0
                                }
                            } while ((dw = dw.parentNode) && dw.nodeType === 1);
                            return false
                        }
                    }), target: function (du) {
                        var dv = dk.location && dk.location.hash;
                        return dv && dv.slice(1) === du.id
                    }, root: function (du) {
                        return du === cu
                    }, focus: function (du) {
                        return du === cI.activeElement && (!cI.hasFocus || cI.hasFocus()) && !!(du.type || du.href || ~du.tabIndex)
                    }, enabled: function (du) {
                        return du.disabled === false
                    }, disabled: function (du) {
                        return du.disabled === true
                    }, checked: function (du) {
                        var dv = du.nodeName.toLowerCase();
                        return (dv === "input" && !!du.checked) || (dv === "option" && !!du.selected)
                    }, selected: function (du) {
                        if (du.parentNode) {
                            du.parentNode.selectedIndex
                        } return du.selected === true
                    }, empty: function (du) {
                        for (du = du.firstChild;
                            du;
                            du = du.nextSibling) {
                                if (du.nodeType < 6) {
                                    return false
                                }
                        } return true
                    }, parent: function (du) {
                        return !ct.pseudos.empty(du)
                    }, header: function (du) {
                        return cr.test(du.nodeName)
                    }, input: function (du) {
                        return ci.test(du.nodeName)
                    }, button: function (dv) {
                        var du = dv.nodeName.toLowerCase();
                        return du === "input" && dv.type === "button" || du === "button"
                    }, text: function (dv) {
                        var du;
                        return dv.nodeName.toLowerCase() === "input" && dv.type === "text" && ((du = dv.getAttribute("type")) == null || du.toLowerCase() === "text")
                    }, first: dd(function () {
                        return [0]
                    }), last: dd(function (du, dv) {
                        return [dv - 1]
                    }), eq: dd(function (du, dw, dv) {
                        return [dv < 0 ? dv + dw : dv]
                    }), even: dd(function (du, dw) {
                        var dv = 0;
                        for (;
                            dv < dw;
                            dv += 2) {
                                du.push(dv)
                        } return du
                    }), odd: dd(function (du, dw) {
                        var dv = 1;
                        for (;
                            dv < dw;
                            dv += 2) {
                                du.push(dv)
                        } return du
                    }), lt: dd(function (du, dx, dw) {
                        var dv = dw < 0 ? dw + dx : dw;
                        for (;
                            --dv >= 0;
                        ) {
                            du.push(dv)
                        } return du
                    }), gt: dd(function (du, dx, dw) {
                        var dv = dw < 0 ? dw + dx : dw;
                        for (;
                            ++dv < dx;
                        ) {
                            du.push(dv)
                        } return du
                    })
                }
            };
            ct.pseudos.nth = ct.pseudos.eq;
            for (cE in { radio: true, checkbox: true, file: true, password: true, image: true }) {
                ct.pseudos[cE] = cD(cE)
            } for (cE in { submit: true, reset: true }) {
                ct.pseudos[cE] = ch(cE)
            } function c1() { } c1.prototype = ct.filters = ct.pseudos;
            ct.setFilters = new c1();
            cn = cC.tokenize = function (dy, dD) {
                var dv, dz, dB, dC, dA, dw, du, dx = df[dy + " "];
                if (dx) {
                    return dD ? 0 : dx.slice(0)
                } dA = dy;
                dw = [];
                du = ct.preFilter;
                while (dA) {
                    if (!dv || (dz = cB.exec(dA))) {
                        if (dz) {
                            dA = dA.slice(dz[0].length) || dA
                        } dw.push((dB = []))
                    } dv = false;
                    if ((dz = cH.exec(dA))) {
                        dv = dz.shift();
                        dB.push({ value: dv, type: dz[0].replace(cx, " ") });
                        dA = dA.slice(dv.length)
                    } for (dC in ct.filter) {
                        if ((dz = c8[dC].exec(dA)) && (!du[dC] || (dz = du[dC](dz)))) {
                            dv = dz.shift();
                            dB.push({ value: dv, type: dC, matches: dz });
                            dA = dA.slice(dv.length)
                        }
                    } if (!dv) {
                        break
                    }
                } return dD ? dA.length : dA ? cC.error(dy) : df(dy, dw).slice(0)
            };
            function co(dx) {
                var dw = 0, dv = dx.length, du = "";
                for (;
                    dw < dv;
                    dw++) {
                        du += dx[dw].value
                } return du
            } function cw(dy, dw, dx) {
                var du = dw.dir, dz = dx && du === "parentNode", dv = da++;
                return dw.first ? function (dC, dB, dA) {
                    while ((dC = dC[du])) {
                        if (dC.nodeType === 1 || dz) {
                            return dy(dC, dB, dA)
                        }
                    }
                } : function (dF, dD, dC) {
                    var dG, dA, dE, dB = [dp, dv];
                    if (dC) {
                        while ((dF = dF[du])) {
                            if (dF.nodeType === 1 || dz) {
                                if (dy(dF, dD, dC)) {
                                    return true
                                }
                            }
                        }
                    } else {
                        while ((dF = dF[du])) {
                            if (dF.nodeType === 1 || dz) {
                                dE = dF[dg] || (dF[dg] = {});
                                dA = dE[dF.uniqueID] || (dE[dF.uniqueID] = {});
                                if ((dG = dA[du]) && dG[0] === dp && dG[1] === dv) {
                                    return (dB[2] = dG[2])
                                } else {
                                    dA[du] = dB;
                                    if ((dB[2] = dy(dF, dD, dC))) {
                                        return true
                                    }
                                }
                            }
                        }
                    }
                }
            } function dr(du) {
                return du.length > 1 ? function (dy, dx, dv) {
                    var dw = du.length;
                    while (dw--) {
                        if (!du[dw](dy, dx, dv)) {
                            return false
                        }
                    } return true
                } : du[0]
            } function cF(dv, dy, dx) {
                var dw = 0, du = dy.length;
                for (;
                    dw < du;
                    dw++) {
                        cC(dv, dy[dw], dx)
                } return dx
            } function c6(du, dv, dw, dx, dA) {
                var dy, dD = [], dz = 0, dB = du.length, dC = dv != null;
                for (;
                    dz < dB;
                    dz++) {
                        if ((dy = du[dz])) {
                            if (!dw || dw(dy, dx, dA)) {
                                dD.push(dy);
                                if (dC) {
                                    dv.push(dz)
                                }
                            }
                        }
                } return dD
            } function cm(dw, dv, dy, dx, dz, du) {
                if (dx && !dx[dg]) {
                    dx = cm(dx)
                } if (dz && !dz[dg]) {
                    dz = cm(dz, du)
                } return cp(function (dK, dH, dC, dJ) {
                    var dM, dI, dE, dD = [], dL = [], dB = dH.length, dA = dK || cF(dv || "*", dC.nodeType ? [dC] : dC, []), dF = dw && (dK || !dv) ? c6(dA, dD, dw, dC, dJ) : dA, dG = dy ? dz || (dK ? dw : dB || dx) ? [] : dH : dF;
                    if (dy) {
                        dy(dF, dG, dC, dJ)
                    } if (dx) {
                        dM = c6(dG, dL);
                        dx(dM, [], dC, dJ);
                        dI = dM.length;
                        while (dI--) {
                            if ((dE = dM[dI])) {
                                dG[dL[dI]] = !(dF[dL[dI]] = dE)
                            }
                        }
                    } if (dK) {
                        if (dz || dw) {
                            if (dz) {
                                dM = [];
                                dI = dG.length;
                                while (dI--) {
                                    if ((dE = dG[dI])) {
                                        dM.push((dF[dI] = dE))
                                    }
                                } dz(null, (dG = []), dM, dJ)
                            } dI = dG.length;
                            while (dI--) {
                                if ((dE = dG[dI]) && (dM = dz ? cj(dK, dE) : dD[dI]) > -1) {
                                    dK[dM] = !(dH[dM] = dE)
                                }
                            }
                        }
                    } else {
                        dG = c6(dG === dH ? dG.splice(dB, dG.length) : dG);
                        if (dz) {
                            dz(null, dH, dG, dJ)
                        } else {
                            cd.apply(dH, dG)
                        }
                    }
                })
            } function dh(dA) {
                var dv, dy, dw, dz = dA.length, dD = ct.relative[dA[0].type], dE = dD || ct.relative[" "], dx = dD ? 1 : 0, dB = cw(function (dF) {
                    return dF === dv
                }, dE, true), dC = cw(function (dF) {
                    return cj(dv, dF) > -1
                }, dE, true), du = [function (dI, dH, dG) {
                    var dF = (!dD && (dG || dH !== dt)) || ((dv = dH).nodeType ? dB(dI, dH, dG) : dC(dI, dH, dG));
                    dv = null;
                    return dF
                }];
                for (;
                    dx < dz;
                    dx++) {
                        if ((dy = ct.relative[dA[dx].type])) {
                            du = [cw(dr(du), dy)]
                        } else {
                            dy = ct.filter[dA[dx].type].apply(null, dA[dx].matches);
                            if (dy[dg]) {
                                dw = ++dx;
                                for (;
                                    dw < dz;
                                    dw++) {
                                        if (ct.relative[dA[dw].type]) {
                                            break
                                        }
                                } return cm(dx > 1 && dr(du), dx > 1 && co(dA.slice(0, dx - 1).concat({ value: dA[dx - 2].type === " " ? "*" : "" })).replace(cx, "$1"), dy, dx < dw && dh(dA.slice(dx, dw)), dw < dz && dh((dA = dA.slice(dw))), dw < dz && co(dA))
                            } du.push(dy)
                        }
                } return dr(du)
            } function c4(dx, dw) {
                var du = dw.length > 0, dy = dx.length > 0, dv = function (dI, dC, dH, dG, dL) {
                    var dD, dE, dJ, dN = 0, dF = "0", dz = dI && [], dO = [], dM = dt, dB = dI || dy && ct.find.TAG("*", dL), dA = (dp += dM == null ? 1 : Math.random() || 0.1), dK = dB.length;
                    if (dL) {
                        dt = dC === cI || dC || dL
                    } for (;
                        dF !== dK && (dD = dB[dF]) != null;
                        dF++) {
                            if (dy && dD) {
                                dE = 0;
                                if (!dC && dD.ownerDocument !== cI) {
                                    c5(dD);
                                    dH = !de
                                } while ((dJ = dx[dE++])) {
                                    if (dJ(dD, dC || cI, dH)) {
                                        dG.push(dD);
                                        break
                                    }
                                } if (dL) {
                                    dp = dA
                                }
                            } if (du) {
                                if ((dD = !dJ && dD)) {
                                    dN--
                                } if (dI) {
                                    dz.push(dD)
                                }
                            }
                    } dN += dF;
                    if (du && dF !== dN) {
                        dE = 0;
                        while ((dJ = dw[dE++])) {
                            dJ(dz, dO, dC, dH)
                        } if (dI) {
                            if (dN > 0) {
                                while (dF--) {
                                    if (!(dz[dF] || dO[dF])) {
                                        dO[dF] = dj.call(dG)
                                    }
                                }
                            } dO = c6(dO)
                        } cd.apply(dG, dO);
                        if (dL && !dI && dO.length > 0 && (dN + dw.length) > 1) {
                            cC.uniqueSort(dG)
                        }
                    } if (dL) {
                        dp = dA;
                        dt = dM
                    } return dz
                };
                return du ? cp(dv) : dv
            } c2 = cC.compile = function (du, dw) {
                var dx, dv = [], dz = [], dy = cM[du + " "];
                if (!dy) {
                    if (!dw) {
                        dw = cn(du)
                    } dx = dw.length;
                    while (dx--) {
                        dy = dh(dw[dx]);
                        if (dy[dg]) {
                            dv.push(dy)
                        } else {
                            dz.push(dy)
                        }
                    } dy = cM(du, c4(dz, dv));
                    dy.selector = du
                } return dy
            };
            dm = cC.select = function (dw, du, dx, dA) {
                var dy, dD, dv, dE, dB, dC = typeof dw === "function" && dw, dz = !dA && cn((dw = dC.selector || dw));
                dx = dx || [];
                if (dz.length === 1) {
                    dD = dz[0] = dz[0].slice(0);
                    if (dD.length > 2 && (dv = dD[0]).type === "ID" && dn.getById && du.nodeType === 9 && de && ct.relative[dD[1].type]) {
                        du = (ct.find.ID(dv.matches[0].replace(cy, db), du) || [])[0];
                        if (!du) {
                            return dx
                        } else {
                            if (dC) {
                                du = du.parentNode
                            }
                        } dw = dw.slice(dD.shift().value.length)
                    } dy = c8.needsContext.test(dw) ? 0 : dD.length;
                    while (dy--) {
                        dv = dD[dy];
                        if (ct.relative[(dE = dv.type)]) {
                            break
                        } if ((dB = ct.find[dE])) {
                            if ((dA = dB(dv.matches[0].replace(cy, db), c7.test(dD[0].type) && cZ(du.parentNode) || du))) {
                                dD.splice(dy, 1);
                                dw = dA.length && co(dD);
                                if (!dw) {
                                    cd.apply(dx, dA);
                                    return dx
                                } break
                            }
                        }
                    }
                } (dC || c2(dw, dz))(dA, du, !de, dx, !du || c7.test(dw) && cZ(du.parentNode) || du);
                return dx
            };
            dn.sortStable = dg.split("").sort(cK).join("") === dg;
            dn.detectDuplicates = !!c3;
            c5();
            dn.sortDetached = cl(function (du) {
                return du.compareDocumentPosition(cI.createElement("div")) & 1
            });
            if (!cl(function (du) {
                du.innerHTML = "<a href='#'></a>";
                return du.firstChild.getAttribute("href") === "#"
            })) {
                dq("type|href|height|width", function (dv, du, dw) {
                    if (!dw) {
                        return dv.getAttribute(du, du.toLowerCase() === "type" ? 1 : 2)
                    }
                })
            } if (!dn.attributes || !cl(function (du) {
                du.innerHTML = "<input/>";
                du.firstChild.setAttribute("value", "");
                return du.firstChild.getAttribute("value") === ""
            })) {
                dq("value", function (dv, du, dw) {
                    if (!dw && dv.nodeName.toLowerCase() === "input") {
                        return dv.defaultValue
                    }
                })
            } if (!cl(function (du) {
                return du.getAttribute("disabled") == null
            })) {
                dq(ce, function (dv, du, dx) {
                    var dw;
                    if (!dx) {
                        return dv[du] === true ? du.toLowerCase() : (dw = dv.getAttributeNode(du)) && dw.specified ? dw.value : null
                    }
                })
            } return cC
        })(bc);
    bP.find = l;
    bP.expr = l.selectors;
    bP.expr[":"] = bP.expr.pseudos;
    bP.uniqueSort = bP.unique = l.uniqueSort;
    bP.text = l.getText;
    bP.isXMLDoc = l.isXML;
    bP.contains = l.contains;
    var af = function (cg, ce, ch) {
        var cd = [], cf = ch !== undefined;
        while ((cg = cg[ce]) && cg.nodeType !== 9) {
            if (cg.nodeType === 1) {
                if (cf && bP(cg).is(ch)) {
                    break
                } cd.push(cg)
            }
        } return cd
    };
    var o = function (cf, ce) {
        var cd = [];
        for (;
            cf;
            cf = cf.nextSibling) {
                if (cf.nodeType === 1 && cf !== ce) {
                    cd.push(cf)
                }
        } return cd
    };
    var z = bP.expr.match.needsContext;
    var a = (/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/);
    var aR = /^.[^:#\[\.,]*$/;
    function aY(cf, cd, ce) {
        if (bP.isFunction(cd)) {
            return bP.grep(cf, function (ch, cg) {
                return !!cd.call(ch, cg, ch) !== ce
            })
        } if (cd.nodeType) {
            return bP.grep(cf, function (cg) {
                return (cg === cd) !== ce
            })
        } if (typeof cd === "string") {
            if (aR.test(cd)) {
                return bP.filter(cd, cf, ce)
            } cd = bP.filter(cd, cf)
        } return bP.grep(cf, function (cg) {
            return (bP.inArray(cg, cd) > -1) !== ce
        })
    } bP.filter = function (cg, cd, cf) {
        var ce = cd[0];
        if (cf) {
            cg = ":not(" + cg + ")"
        } return cd.length === 1 && ce.nodeType === 1 ? bP.find.matchesSelector(ce, cg) ? [ce] : [] : bP.find.matches(cg, bP.grep(cd, function (ch) {
            return ch.nodeType === 1
        }))
    };
    bP.fn.extend({
        find: function (ce) {
            var ch, cg = [], cf = this, cd = cf.length;
            if (typeof ce !== "string") {
                return this.pushStack(bP(ce).filter(function () {
                    for (ch = 0;
                        ch < cd;
                        ch++) {
                            if (bP.contains(cf[ch], this)) {
                                return true
                            }
                    }
                }))
            } for (ch = 0;
                ch < cd;
                ch++) {
                    bP.find(ce, cf[ch], cg)
            } cg = this.pushStack(cd > 1 ? bP.unique(cg) : cg);
            cg.selector = this.selector ? this.selector + " " + ce : ce;
            return cg
        }, filter: function (cd) {
            return this.pushStack(aY(this, cd || [], false))
        }, not: function (cd) {
            return this.pushStack(aY(this, cd || [], true))
        }, is: function (cd) {
            return !!aY(this, typeof cd === "string" && z.test(cd) ? bP(cd) : cd || [], false).length
        }
    });
    var y, bA = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, b3 = bP.fn.init = function (cd, cg, ce) {
        var cf, ch;
        if (!cd) {
            return this
        } ce = ce || y;
        if (typeof cd === "string") {
            if (cd.charAt(0) === "<" && cd.charAt(cd.length - 1) === ">" && cd.length >= 3) {
                cf = [null, cd, null]
            } else {
                cf = bA.exec(cd)
            } if (cf && (cf[1] || !cg)) {
                if (cf[1]) {
                    cg = cg instanceof bP ? cg[0] : cg;
                    bP.merge(this, bP.parseHTML(cf[1], cg && cg.nodeType ? cg.ownerDocument || cg : m, true));
                    if (a.test(cf[1]) && bP.isPlainObject(cg)) {
                        for (cf in cg) {
                            if (bP.isFunction(this[cf])) {
                                this[cf](cg[cf])
                            } else {
                                this.attr(cf, cg[cf])
                            }
                        }
                    } return this
                } else {
                    ch = m.getElementById(cf[2]);
                    if (ch && ch.parentNode) {
                        if (ch.id !== cf[2]) {
                            return y.find(cd)
                        } this.length = 1;
                        this[0] = ch
                    } this.context = m;
                    this.selector = cd;
                    return this
                }
            } else {
                if (!cg || cg.jquery) {
                    return (cg || ce).find(cd)
                } else {
                    return this.constructor(cg).find(cd)
                }
            }
        } else {
            if (cd.nodeType) {
                this.context = this[0] = cd;
                this.length = 1;
                return this
            } else {
                if (bP.isFunction(cd)) {
                    return typeof ce.ready !== "undefined" ? ce.ready(cd) : cd(bP)
                }
            }
        } if (cd.selector !== undefined) {
            this.selector = cd.selector;
            this.context = cd.context
        } return bP.makeArray(cd, this)
    };
    b3.prototype = bP.fn;
    y = bP(m);
    var bC = /^(?:parents|prev(?:Until|All))/, bG = { children: true, contents: true, next: true, prev: true };
    bP.fn.extend({
        has: function (cg) {
            var cf, ce = bP(cg, this), cd = ce.length;
            return this.filter(function () {
                for (cf = 0;
                    cf < cd;
                    cf++) {
                        if (bP.contains(this, ce[cf])) {
                            return true
                        }
                }
            })
        }, closest: function (ch, cg) {
            var ci, cf = 0, ce = this.length, cd = [], cj = z.test(ch) || typeof ch !== "string" ? bP(ch, cg || this.context) : 0;
            for (;
                cf < ce;
                cf++) {
                    for (ci = this[cf];
                        ci && ci !== cg;
                        ci = ci.parentNode) {
                            if (ci.nodeType < 11 && (cj ? cj.index(ci) > -1 : ci.nodeType === 1 && bP.find.matchesSelector(ci, ch))) {
                                cd.push(ci);
                                break
                            }
                    }
            } return this.pushStack(cd.length > 1 ? bP.uniqueSort(cd) : cd)
        }, index: function (cd) {
            if (!cd) {
                return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1
            } if (typeof cd === "string") {
                return bP.inArray(this[0], bP(cd))
            } return bP.inArray(cd.jquery ? cd[0] : cd, this)
        }, add: function (cd, ce) {
            return this.pushStack(bP.uniqueSort(bP.merge(this.get(), bP(cd, ce))))
        }, addBack: function (cd) {
            return this.add(cd == null ? this.prevObject : this.prevObject.filter(cd))
        }
    });
    function a6(ce, cd) {
        do {
            ce = ce[cd]
        } while (ce && ce.nodeType !== 1);
        return ce
    } bP.each({
        parent: function (ce) {
            var cd = ce.parentNode;
            return cd && cd.nodeType !== 11 ? cd : null
        }, parents: function (cd) {
            return af(cd, "parentNode")
        }, parentsUntil: function (ce, cd, cf) {
            return af(ce, "parentNode", cf)
        }, next: function (cd) {
            return a6(cd, "nextSibling")
        }, prev: function (cd) {
            return a6(cd, "previousSibling")
        }, nextAll: function (cd) {
            return af(cd, "nextSibling")
        }, prevAll: function (cd) {
            return af(cd, "previousSibling")
        }, nextUntil: function (ce, cd, cf) {
            return af(ce, "nextSibling", cf)
        }, prevUntil: function (ce, cd, cf) {
            return af(ce, "previousSibling", cf)
        }, siblings: function (cd) {
            return o((cd.parentNode || {}).firstChild, cd)
        }, children: function (cd) {
            return o(cd.firstChild)
        }, contents: function (cd) {
            return bP.nodeName(cd, "iframe") ? cd.contentDocument || cd.contentWindow.document : bP.merge([], cd.childNodes)
        }
    }, function (cd, ce) {
        bP.fn[cd] = function (ch, cf) {
            var cg = bP.map(this, ce, ch);
            if (cd.slice(-5) !== "Until") {
                cf = ch
            } if (cf && typeof cf === "string") {
                cg = bP.filter(cf, cg)
            } if (this.length > 1) {
                if (!bG[cd]) {
                    cg = bP.uniqueSort(cg)
                } if (bC.test(cd)) {
                    cg = cg.reverse()
                }
            } return this.pushStack(cg)
        }
    });
    var aM = (/\S+/g);
    function am(ce) {
        var cd = {};
        bP.each(ce.match(aM) || [], function (cg, cf) {
            cd[cf] = true
        });
        return cd
    } bP.Callbacks = function (cm) {
        cm = typeof cm === "string" ? am(cm) : bP.extend({}, cm);
        var ch, cf, cd, cg, ck = [], ci = [], cj = -1, ce = function () {
            cg = cm.once;
            cd = ch = true;
            for (;
                ci.length;
                cj = -1) {
                    cf = ci.shift();
                while (++cj < ck.length) {
                    if (ck[cj].apply(cf[0], cf[1]) === false && cm.stopOnFalse) {
                        cj = ck.length;
                        cf = false
                    }
                }
            } if (!cm.memory) {
                cf = false
            } ch = false;
            if (cg) {
                if (cf) {
                    ck = []
                } else {
                    ck = ""
                }
            }
        }, cl = {
            add: function () {
                if (ck) {
                    if (cf && !ch) {
                        cj = ck.length - 1;
                        ci.push(cf)
                    } (function cn(co) {
                        bP.each(co, function (cq, cp) {
                            if (bP.isFunction(cp)) {
                                if (!cm.unique || !cl.has(cp)) {
                                    ck.push(cp)
                                }
                            } else {
                                if (cp && cp.length && bP.type(cp) !== "string") {
                                    cn(cp)
                                }
                            }
                        })
                    })(arguments);
                    if (cf && !ch) {
                        ce()
                    }
                } return this
            }, remove: function () {
                bP.each(arguments, function (cp, cn) {
                    var co;
                    while ((co = bP.inArray(cn, ck, co)) > -1) {
                        ck.splice(co, 1);
                        if (co <= cj) {
                            cj--
                        }
                    }
                });
                return this
            }, has: function (cn) {
                return cn ? bP.inArray(cn, ck) > -1 : ck.length > 0
            }, empty: function () {
                if (ck) {
                    ck = []
                } return this
            }, disable: function () {
                cg = ci = [];
                ck = cf = "";
                return this
            }, disabled: function () {
                return !ck
            }, lock: function () {
                cg = true;
                if (!cf) {
                    cl.disable()
                } return this
            }, locked: function () {
                return !!cg
            }, fireWith: function (co, cn) {
                if (!cg) {
                    cn = cn || [];
                    cn = [co, cn.slice ? cn.slice() : cn];
                    ci.push(cn);
                    if (!ch) {
                        ce()
                    }
                } return this
            }, fire: function () {
                cl.fireWith(this, arguments);
                return this
            }, fired: function () {
                return !!cd
            }
        };
        return cl
    };
    bP.extend({
        Deferred: function (cf) {
            var ce = [["resolve", "done", bP.Callbacks("once memory"), "resolved"], ["reject", "fail", bP.Callbacks("once memory"), "rejected"], ["notify", "progress", bP.Callbacks("memory")]], cg = "pending", ch = {
                state: function () {
                    return cg
                }, always: function () {
                    cd.done(arguments).fail(arguments);
                    return this
                }, then: function () {
                    var ci = arguments;
                    return bP.Deferred(function (cj) {
                        bP.each(ce, function (cl, ck) {
                            var cm = bP.isFunction(ci[cl]) && ci[cl];
                            cd[ck[1]](function () {
                                var cn = cm && cm.apply(this, arguments);
                                if (cn && bP.isFunction(cn.promise)) {
                                    cn.promise().progress(cj.notify).done(cj.resolve).fail(cj.reject)
                                } else {
                                    cj[ck[0] + "With"](this === ch ? cj.promise() : this, cm ? [cn] : arguments)
                                }
                            })
                        });
                        ci = null
                    }).promise()
                }, promise: function (ci) {
                    return ci != null ? bP.extend(ci, ch) : ch
                }
            }, cd = {};
            ch.pipe = ch.then;
            bP.each(ce, function (cj, ci) {
                var cl = ci[2], ck = ci[3];
                ch[ci[1]] = cl.add;
                if (ck) {
                    cl.add(function () {
                        cg = ck
                    }, ce[cj ^ 1][2].disable, ce[2][2].lock)
                } cd[ci[0]] = function () {
                    cd[ci[0] + "With"](this === cd ? ch : this, arguments);
                    return this
                };
                cd[ci[0] + "With"] = cl.fireWith
            });
            ch.promise(cd);
            if (cf) {
                cf.call(cd, cd)
            } return cd
        }, when: function (ch) {
            var cf = 0, cj = X.call(arguments), cd = cj.length, ce = cd !== 1 || (ch && bP.isFunction(ch.promise)) ? cd : 0, cm = ce === 1 ? ch : bP.Deferred(), cg = function (co, cp, cn) {
                return function (cq) {
                    cp[co] = this;
                    cn[co] = arguments.length > 1 ? X.call(arguments) : cq;
                    if (cn === cl) {
                        cm.notifyWith(cp, cn)
                    } else {
                        if (!(--ce)) {
                            cm.resolveWith(cp, cn)
                        }
                    }
                }
            }, cl, ci, ck;
            if (cd > 1) {
                cl = new Array(cd);
                ci = new Array(cd);
                ck = new Array(cd);
                for (;
                    cf < cd;
                    cf++) {
                        if (cj[cf] && bP.isFunction(cj[cf].promise)) {
                            cj[cf].promise().progress(cg(cf, ci, cl)).done(cg(cf, ck, cj)).fail(cm.reject)
                        } else {
                            --ce
                        }
                }
            } if (!ce) {
                cm.resolveWith(ck, cj)
            } return cm.promise()
        }
    });
    var ar;
    bP.fn.ready = function (cd) {
        bP.ready.promise().done(cd);
        return this
    };
    bP.extend({
        isReady: false, readyWait: 1, holdReady: function (cd) {
            if (cd) {
                bP.readyWait++
            } else {
                bP.ready(true)
            }
        }, ready: function (cd) {
            if (cd === true ? --bP.readyWait : bP.isReady) {
                return
            } bP.isReady = true;
            if (cd !== true && --bP.readyWait > 0) {
                return
            } ar.resolveWith(m, [bP]);
            if (bP.fn.triggerHandler) {
                bP(m).triggerHandler("ready");
                bP(m).off("ready")
            }
        }
    });
    function bt() {
        if (m.addEventListener) {
            m.removeEventListener("DOMContentLoaded", b7);
            bc.removeEventListener("load", b7)
        } else {
            m.detachEvent("onreadystatechange", b7);
            bc.detachEvent("onload", b7)
        }
    } function b7() {
        if (m.addEventListener || bc.event.type === "load" || m.readyState === "complete") {
            bt();
            bP.ready()
        }
    } bP.ready.promise = function (cg) {
        if (!ar) {
            ar = bP.Deferred();
            if (m.readyState === "complete" || (m.readyState !== "loading" && !m.documentElement.doScroll)) {
                bc.setTimeout(bP.ready)
            } else {
                if (m.addEventListener) {
                    m.addEventListener("DOMContentLoaded", b7);
                    bc.addEventListener("load", b7)
                } else {
                    m.attachEvent("onreadystatechange", b7);
                    bc.attachEvent("onload", b7);
                    var cf = false;
                    try {
                        cf = bc.frameElement == null && m.documentElement
                    } catch (ce) { } if (cf && cf.doScroll) {
                        (function cd() {
                            if (!bP.isReady) {
                                try {
                                    cf.doScroll("left")
                                } catch (ch) {
                                    return bc.setTimeout(cd, 50)
                                } bt();
                                bP.ready()
                            }
                        })()
                    }
                }
            }
        } return ar.promise(cg)
    };
    bP.ready.promise();
    var bo;
    for (bo in bP(F)) {
        break
    } F.ownFirst = bo === "0";
    F.inlineBlockNeedsLayout = false;
    bP(function () {
        var cf, cg, cd, ce;
        cd = m.getElementsByTagName("body")[0];
        if (!cd || !cd.style) {
            return
        } cg = m.createElement("div");
        ce = m.createElement("div");
        ce.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
        cd.appendChild(ce).appendChild(cg);
        if (typeof cg.style.zoom !== "undefined") {
            cg.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";
            F.inlineBlockNeedsLayout = cf = cg.offsetWidth === 3;
            if (cf) {
                cd.style.zoom = 1
            }
        } cd.removeChild(ce)
    });
    (function () {
        var ce = m.createElement("div");
        F.deleteExpando = true;
        try {
            delete ce.test
        } catch (cd) {
            F.deleteExpando = false
        } ce = null
    })();
    var V = function (cf) {
        var ce = bP.noData[(cf.nodeName + " ").toLowerCase()], cd = +cf.nodeType || 1;
        return cd !== 1 && cd !== 9 ? false : !ce || ce !== true && cf.getAttribute("classid") === ce
    };
    var bF = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, aX = /([A-Z])/g;
    function bH(cf, ce, cg) {
        if (cg === undefined && cf.nodeType === 1) {
            var cd = "data-" + ce.replace(aX, "-$1").toLowerCase();
            cg = cf.getAttribute(cd);
            if (typeof cg === "string") {
                try {
                    cg = cg === "true" ? true : cg === "false" ? false : cg === "null" ? null : +cg + "" === cg ? +cg : bF.test(cg) ? bP.parseJSON(cg) : cg
                } catch (ch) { } bP.data(cf, ce, cg)
            } else {
                cg = undefined
            }
        } return cg
    } function Y(ce) {
        var cd;
        for (cd in ce) {
            if (cd === "data" && bP.isEmptyObject(ce[cd])) {
                continue
            } if (cd !== "toJSON") {
                return false
            }
        } return true
    } function bj(cg, ce, ci, ch) {
        if (!V(cg)) {
            return
        } var ck, cj, cl = bP.expando, cm = cg.nodeType, cd = cm ? bP.cache : cg, cf = cm ? cg[cl] : cg[cl] && cl;
        if ((!cf || !cd[cf] || (!ch && !cd[cf].data)) && ci === undefined && typeof ce === "string") {
            return
        } if (!cf) {
            if (cm) {
                cf = cg[cl] = aW.pop() || bP.guid++
            } else {
                cf = cl
            }
        } if (!cd[cf]) {
            cd[cf] = cm ? {} : { toJSON: bP.noop }
        } if (typeof ce === "object" || typeof ce === "function") {
            if (ch) {
                cd[cf] = bP.extend(cd[cf], ce)
            } else {
                cd[cf].data = bP.extend(cd[cf].data, ce)
            }
        } cj = cd[cf];
        if (!ch) {
            if (!cj.data) {
                cj.data = {}
            } cj = cj.data
        } if (ci !== undefined) {
            cj[bP.camelCase(ce)] = ci
        } if (typeof ce === "string") {
            ck = cj[ce];
            if (ck == null) {
                ck = cj[bP.camelCase(ce)]
            }
        } else {
            ck = cj
        } return ck
    } function aj(ch, cf, cd) {
        if (!V(ch)) {
            return
        } var cj, cg, ci = ch.nodeType, ce = ci ? bP.cache : ch, ck = ci ? ch[bP.expando] : bP.expando;
        if (!ce[ck]) {
            return
        } if (cf) {
            cj = cd ? ce[ck] : ce[ck].data;
            if (cj) {
                if (!bP.isArray(cf)) {
                    if (cf in cj) {
                        cf = [cf]
                    } else {
                        cf = bP.camelCase(cf);
                        if (cf in cj) {
                            cf = [cf]
                        } else {
                            cf = cf.split(" ")
                        }
                    }
                } else {
                    cf = cf.concat(bP.map(cf, bP.camelCase))
                } cg = cf.length;
                while (cg--) {
                    delete cj[cf[cg]]
                } if (cd ? !Y(cj) : !bP.isEmptyObject(cj)) {
                    return
                }
            }
        } if (!cd) {
            delete ce[ck].data;
            if (!Y(ce[ck])) {
                return
            }
        } if (ci) {
            bP.cleanData([ch], true)
        } else {
            if (F.deleteExpando || ce != ce.window) {
                delete ce[ck]
            } else {
                ce[ck] = undefined
            }
        }
    } bP.extend({
        cache: {}, noData: { "applet ": true, "embed ": true, "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" }, hasData: function (cd) {
            cd = cd.nodeType ? bP.cache[cd[bP.expando]] : cd[bP.expando];
            return !!cd && !Y(cd)
        }, data: function (ce, cd, cf) {
            return bj(ce, cd, cf)
        }, removeData: function (ce, cd) {
            return aj(ce, cd)
        }, _data: function (ce, cd, cf) {
            return bj(ce, cd, cf, true)
        }, _removeData: function (ce, cd) {
            return aj(ce, cd, true)
        }
    });
    bP.fn.extend({
        data: function (cg, cj) {
            var cf, ce, ci, ch = this[0], cd = ch && ch.attributes;
            if (cg === undefined) {
                if (this.length) {
                    ci = bP.data(ch);
                    if (ch.nodeType === 1 && !bP._data(ch, "parsedAttrs")) {
                        cf = cd.length;
                        while (cf--) {
                            if (cd[cf]) {
                                ce = cd[cf].name;
                                if (ce.indexOf("data-") === 0) {
                                    ce = bP.camelCase(ce.slice(5));
                                    bH(ch, ce, ci[ce])
                                }
                            }
                        } bP._data(ch, "parsedAttrs", true)
                    }
                } return ci
            } if (typeof cg === "object") {
                return this.each(function () {
                    bP.data(this, cg)
                })
            } return arguments.length > 1 ? this.each(function () {
                bP.data(this, cg, cj)
            }) : ch ? bH(ch, cg, bP.data(ch, cg)) : undefined
        }, removeData: function (cd) {
            return this.each(function () {
                bP.removeData(this, cd)
            })
        }
    });
    bP.extend({
        queue: function (cf, ce, cg) {
            var cd;
            if (cf) {
                ce = (ce || "fx") + "queue";
                cd = bP._data(cf, ce);
                if (cg) {
                    if (!cd || bP.isArray(cg)) {
                        cd = bP._data(cf, ce, bP.makeArray(cg))
                    } else {
                        cd.push(cg)
                    }
                } return cd || []
            }
        }, dequeue: function (ci, ch) {
            ch = ch || "fx";
            var ce = bP.queue(ci, ch), cj = ce.length, cg = ce.shift(), cd = bP._queueHooks(ci, ch), cf = function () {
                bP.dequeue(ci, ch)
            };
            if (cg === "inprogress") {
                cg = ce.shift();
                cj--
            } if (cg) {
                if (ch === "fx") {
                    ce.unshift("inprogress")
                } delete cd.stop;
                cg.call(ci, cf, cd)
            } if (!cj && cd) {
                cd.empty.fire()
            }
        }, _queueHooks: function (cf, ce) {
            var cd = ce + "queueHooks";
            return bP._data(cf, cd) || bP._data(cf, cd, {
                empty: bP.Callbacks("once memory").add(function () {
                    bP._removeData(cf, ce + "queue");
                    bP._removeData(cf, cd)
                })
            })
        }
    });
    bP.fn.extend({
        queue: function (cd, ce) {
            var cf = 2;
            if (typeof cd !== "string") {
                ce = cd;
                cd = "fx";
                cf--
            } if (arguments.length < cf) {
                return bP.queue(this[0], cd)
            } return ce === undefined ? this : this.each(function () {
                var cg = bP.queue(this, cd, ce);
                bP._queueHooks(this, cd);
                if (cd === "fx" && cg[0] !== "inprogress") {
                    bP.dequeue(this, cd)
                }
            })
        }, dequeue: function (cd) {
            return this.each(function () {
                bP.dequeue(this, cd)
            })
        }, clearQueue: function (cd) {
            return this.queue(cd || "fx", [])
        }, promise: function (cf, cj) {
            var ce, cg = 1, ck = bP.Deferred(), ci = this, cd = this.length, ch = function () {
                if (!(--cg)) {
                    ck.resolveWith(ci, [ci])
                }
            };
            if (typeof cf !== "string") {
                cj = cf;
                cf = undefined
            } cf = cf || "fx";
            while (cd--) {
                ce = bP._data(ci[cd], cf + "queueHooks");
                if (ce && ce.empty) {
                    cg++;
                    ce.empty.add(ch)
                }
            } ch();
            return ck.promise(cj)
        }
    });
    (function () {
        var cd;
        F.shrinkWrapBlocks = function () {
            if (cd != null) {
                return cd
            } cd = false;
            var cg, ce, cf;
            ce = m.getElementsByTagName("body")[0];
            if (!ce || !ce.style) {
                return
            } cg = m.createElement("div");
            cf = m.createElement("div");
            cf.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
            ce.appendChild(cf).appendChild(cg);
            if (typeof cg.style.zoom !== "undefined") {
                cg.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1";
                cg.appendChild(m.createElement("div")).style.width = "5px";
                cd = cg.offsetWidth !== 3
            } ce.removeChild(cf);
            return cd
        }
    })();
    var aL = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;
    var b6 = new RegExp("^(?:([+-])=|)(" + aL + ")([a-z%]*)$", "i");
    var b0 = ["Top", "Right", "Bottom", "Left"];
    var aa = function (ce, cd) {
        ce = cd || ce;
        return bP.css(ce, "display") === "none" || !bP.contains(ce.ownerDocument, ce)
    };
    function A(ce, cd, ch, cm) {
        var cn, cf = 1, cj = 20, cl = cm ? function () {
            return cm.cur()
        } : function () {
            return bP.css(ce, cd, "")
        }, ci = cl(), ck = ch && ch[3] || (bP.cssNumber[cd] ? "" : "px"), cg = (bP.cssNumber[cd] || ck !== "px" && +ci) && b6.exec(bP.css(ce, cd));
        if (cg && cg[3] !== ck) {
            ck = ck || cg[3];
            ch = ch || [];
            cg = +ci || 1;
            do {
                cf = cf || ".5";
                cg = cg / cf;
                bP.style(ce, cd, cg + ck)
            } while (cf !== (cf = cl() / ci) && cf !== 1 && --cj)
        } if (ch) {
            cg = +cg || +ci || 0;
            cn = ch[1] ? cg + (ch[1] + 1) * ch[2] : +ch[2];
            if (cm) {
                cm.unit = ck;
                cm.start = cg;
                cm.end = cn
            }
        } return cn
    } var aJ = function (cd, ci, ck, cj, cg, cm, cl) {
        var cf = 0, ce = cd.length, ch = ck == null;
        if (bP.type(ck) === "object") {
            cg = true;
            for (cf in ck) {
                aJ(cd, ci, cf, ck[cf], true, cm, cl)
            }
        } else {
            if (cj !== undefined) {
                cg = true;
                if (!bP.isFunction(cj)) {
                    cl = true
                } if (ch) {
                    if (cl) {
                        ci.call(cd, cj);
                        ci = null
                    } else {
                        ch = ci;
                        ci = function (co, cn, cp) {
                            return ch.call(bP(co), cp)
                        }
                    }
                } if (ci) {
                    for (;
                        cf < ce;
                        cf++) {
                            ci(cd[cf], ck, cl ? cj : cj.call(cd[cf], cf, ci(cd[cf], ck)))
                    }
                }
            }
        } return cg ? cd : ch ? ci.call(cd) : ce ? ci(cd[0], ck) : cm
    };
    var aS = (/^(?:checkbox|radio)$/i);
    var n = (/<([\w:-]+)/);
    var bI = (/^$|\/(?:java|ecma)script/i);
    var cc = (/^\s+/);
    var d = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";
    function C(cd) {
        var cf = d.split("|"), ce = cd.createDocumentFragment();
        if (ce.createElement) {
            while (cf.length) {
                ce.createElement(cf.pop())
            }
        } return ce
    } (function () {
        var cf = m.createElement("div"), ce = m.createDocumentFragment(), cd = m.createElement("input");
        cf.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
        F.leadingWhitespace = cf.firstChild.nodeType === 3;
        F.tbody = !cf.getElementsByTagName("tbody").length;
        F.htmlSerialize = !!cf.getElementsByTagName("link").length;
        F.html5Clone = m.createElement("nav").cloneNode(true).outerHTML !== "<:nav></:nav>";
        cd.type = "checkbox";
        cd.checked = true;
        ce.appendChild(cd);
        F.appendChecked = cd.checked;
        cf.innerHTML = "<textarea>x</textarea>";
        F.noCloneChecked = !!cf.cloneNode(true).lastChild.defaultValue;
        ce.appendChild(cf);
        cd = m.createElement("input");
        cd.setAttribute("type", "radio");
        cd.setAttribute("checked", "checked");
        cd.setAttribute("name", "t");
        cf.appendChild(cd);
        F.checkClone = cf.cloneNode(true).cloneNode(true).lastChild.checked;
        F.noCloneEvent = !!cf.addEventListener;
        cf[bP.expando] = 1;
        F.attributes = !cf.getAttribute(bP.expando)
    })();
    var ad = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], area: [1, "<map>", "</map>"], param: [1, "<object>", "</object>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: F.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"] };
    ad.optgroup = ad.option;
    ad.tbody = ad.tfoot = ad.colgroup = ad.caption = ad.thead;
    ad.th = ad.td;
    function k(cg, cd) {
        var ce, ch, cf = 0, ci = typeof cg.getElementsByTagName !== "undefined" ? cg.getElementsByTagName(cd || "*") : typeof cg.querySelectorAll !== "undefined" ? cg.querySelectorAll(cd || "*") : undefined;
        if (!ci) {
            for (ci = [], ce = cg.childNodes || cg;
                (ch = ce[cf]) != null;
                cf++) {
                    if (!cd || bP.nodeName(ch, cd)) {
                        ci.push(ch)
                    } else {
                        bP.merge(ci, k(ch, cd))
                    }
            }
        } return cd === undefined || cd && bP.nodeName(cg, cd) ? bP.merge([cg], ci) : ci
    } function bB(cd, cf) {
        var cg, ce = 0;
        for (;
            (cg = cd[ce]) != null;
            ce++) {
                bP._data(cg, "globalEval", !cf || bP._data(cf[ce], "globalEval"))
        }
    } var S = /<|&#?\w+;/, b8 = /<tbody/i;
    function b5(cd) {
        if (aS.test(cd.type)) {
            cd.defaultChecked = cd.checked
        }
    } function B(ce, cg, cm, cr, cj) {
        var cn, ci, cl, cq, cs, cp, cf, ck = ce.length, ch = C(cg), cd = [], co = 0;
        for (;
            co < ck;
            co++) {
                ci = ce[co];
            if (ci || ci === 0) {
                if (bP.type(ci) === "object") {
                    bP.merge(cd, ci.nodeType ? [ci] : ci)
                } else {
                    if (!S.test(ci)) {
                        cd.push(cg.createTextNode(ci))
                    } else {
                        cq = cq || ch.appendChild(cg.createElement("div"));
                        cs = (n.exec(ci) || ["", ""])[1].toLowerCase();
                        cf = ad[cs] || ad._default;
                        cq.innerHTML = cf[1] + bP.htmlPrefilter(ci) + cf[2];
                        cn = cf[0];
                        while (cn--) {
                            cq = cq.lastChild
                        } if (!F.leadingWhitespace && cc.test(ci)) {
                            cd.push(cg.createTextNode(cc.exec(ci)[0]))
                        } if (!F.tbody) {
                            ci = cs === "table" && !b8.test(ci) ? cq.firstChild : cf[1] === "<table>" && !b8.test(ci) ? cq : 0;
                            cn = ci && ci.childNodes.length;
                            while (cn--) {
                                if (bP.nodeName((cp = ci.childNodes[cn]), "tbody") && !cp.childNodes.length) {
                                    ci.removeChild(cp)
                                }
                            }
                        } bP.merge(cd, cq.childNodes);
                        cq.textContent = "";
                        while (cq.firstChild) {
                            cq.removeChild(cq.firstChild)
                        } cq = ch.lastChild
                    }
                }
            }
        } if (cq) {
            ch.removeChild(cq)
        } if (!F.appendChecked) {
            bP.grep(k(cd, "input"), b5)
        } co = 0;
        while ((ci = cd[co++])) {
            if (cr && bP.inArray(ci, cr) > -1) {
                if (cj) {
                    cj.push(ci)
                } continue
            } cl = bP.contains(ci.ownerDocument, ci);
            cq = k(ch.appendChild(ci), "script");
            if (cl) {
                bB(cq)
            } if (cm) {
                cn = 0;
                while ((ci = cq[cn++])) {
                    if (bI.test(ci.type || "")) {
                        cm.push(ci)
                    }
                }
            }
        } cq = null;
        return ch
    } (function () {
        var ce, cd, cf = m.createElement("div");
        for (ce in { submit: true, change: true, focusin: true }) {
            cd = "on" + ce;
            if (!(F[ce] = cd in bc)) {
                cf.setAttribute(cd, "t");
                F[ce] = cf.attributes[cd].expando === false
            }
        } cf = null
    })();
    var bN = /^(?:input|select|textarea)$/i, bd = /^key/, bS = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, bJ = /^(?:focusinfocus|focusoutblur)$/, bE = /^([^.]*)(?:\.(.+)|)/;
    function ac() {
        return true
    } function ah() {
        return false
    } function au() {
        try {
            return m.activeElement
        } catch (cd) { }
    } function bp(ci, cf, cd, cj, ch, ce) {
        var ck, cg;
        if (typeof cf === "object") {
            if (typeof cd !== "string") {
                cj = cj || cd;
                cd = undefined
            } for (cg in cf) {
                bp(ci, cg, cd, cj, cf[cg], ce)
            } return ci
        } if (cj == null && ch == null) {
            ch = cd;
            cj = cd = undefined
        } else {
            if (ch == null) {
                if (typeof cd === "string") {
                    ch = cj;
                    cj = undefined
                } else {
                    ch = cj;
                    cj = cd;
                    cd = undefined
                }
            }
        } if (ch === false) {
            ch = ah
        } else {
            if (!ch) {
                return ci
            }
        } if (ce === 1) {
            ck = ch;
            ch = function (cl) {
                bP().off(cl);
                return ck.apply(this, arguments)
            };
            ch.guid = ck.guid || (ck.guid = bP.guid++)
        } return ci.each(function () {
            bP.event.add(this, cf, ch, cj, cd)
        })
    } bP.event = {
        global: {}, add: function (ch, cm, cr, cj, ci) {
            var ck, cs, ct, cf, co, cl, cq, cg, cp, cd, ce, cn = bP._data(ch);
            if (!cn) {
                return
            } if (cr.handler) {
                cf = cr;
                cr = cf.handler;
                ci = cf.selector
            } if (!cr.guid) {
                cr.guid = bP.guid++
            } if (!(cs = cn.events)) {
                cs = cn.events = {}
            } if (!(cl = cn.handle)) {
                cl = cn.handle = function (cu) {
                    return typeof bP !== "undefined" && (!cu || bP.event.triggered !== cu.type) ? bP.event.dispatch.apply(cl.elem, arguments) : undefined
                };
                cl.elem = ch
            } cm = (cm || "").match(aM) || [""];
            ct = cm.length;
            while (ct--) {
                ck = bE.exec(cm[ct]) || [];
                cp = ce = ck[1];
                cd = (ck[2] || "").split(".").sort();
                if (!cp) {
                    continue
                } co = bP.event.special[cp] || {};
                cp = (ci ? co.delegateType : co.bindType) || cp;
                co = bP.event.special[cp] || {};
                cq = bP.extend({ type: cp, origType: ce, data: cj, handler: cr, guid: cr.guid, selector: ci, needsContext: ci && bP.expr.match.needsContext.test(ci), namespace: cd.join(".") }, cf);
                if (!(cg = cs[cp])) {
                    cg = cs[cp] = [];
                    cg.delegateCount = 0;
                    if (!co.setup || co.setup.call(ch, cj, cd, cl) === false) {
                        if (ch.addEventListener) {
                            ch.addEventListener(cp, cl, false)
                        } else {
                            if (ch.attachEvent) {
                                ch.attachEvent("on" + cp, cl)
                            }
                        }
                    }
                } if (co.add) {
                    co.add.call(ch, cq);
                    if (!cq.handler.guid) {
                        cq.handler.guid = cr.guid
                    }
                } if (ci) {
                    cg.splice(cg.delegateCount++, 0, cq)
                } else {
                    cg.push(cq)
                } bP.event.global[cp] = true
            } ch = null
        }, remove: function (cg, cm, ct, ch, cl) {
            var cj, cq, ck, ci, cs, cr, co, cf, cp, cd, ce, cn = bP.hasData(cg) && bP._data(cg);
            if (!cn || !(cr = cn.events)) {
                return
            } cm = (cm || "").match(aM) || [""];
            cs = cm.length;
            while (cs--) {
                ck = bE.exec(cm[cs]) || [];
                cp = ce = ck[1];
                cd = (ck[2] || "").split(".").sort();
                if (!cp) {
                    for (cp in cr) {
                        bP.event.remove(cg, cp + cm[cs], ct, ch, true)
                    } continue
                } co = bP.event.special[cp] || {};
                cp = (ch ? co.delegateType : co.bindType) || cp;
                cf = cr[cp] || [];
                ck = ck[2] && new RegExp("(^|\\.)" + cd.join("\\.(?:.*\\.|)") + "(\\.|$)");
                ci = cj = cf.length;
                while (cj--) {
                    cq = cf[cj];
                    if ((cl || ce === cq.origType) && (!ct || ct.guid === cq.guid) && (!ck || ck.test(cq.namespace)) && (!ch || ch === cq.selector || ch === "**" && cq.selector)) {
                        cf.splice(cj, 1);
                        if (cq.selector) {
                            cf.delegateCount--
                        } if (co.remove) {
                            co.remove.call(cg, cq)
                        }
                    }
                } if (ci && !cf.length) {
                    if (!co.teardown || co.teardown.call(cg, cd, cn.handle) === false) {
                        bP.removeEvent(cg, cp, cn.handle)
                    } delete cr[cp]
                }
            } if (bP.isEmptyObject(cr)) {
                delete cn.handle;
                bP._removeData(cg, "events")
            }
        }, trigger: function (cd, ck, cg, cr) {
            var cl, cf, cp, cq, cn, cj, ci, ch = [cg || m], co = R.call(cd, "type") ? cd.type : cd, ce = R.call(cd, "namespace") ? cd.namespace.split(".") : [];
            cp = cj = cg = cg || m;
            if (cg.nodeType === 3 || cg.nodeType === 8) {
                return
            } if (bJ.test(co + bP.event.triggered)) {
                return
            } if (co.indexOf(".") > -1) {
                ce = co.split(".");
                co = ce.shift();
                ce.sort()
            } cf = co.indexOf(":") < 0 && "on" + co;
            cd = cd[bP.expando] ? cd : new bP.Event(co, typeof cd === "object" && cd);
            cd.isTrigger = cr ? 2 : 3;
            cd.namespace = ce.join(".");
            cd.rnamespace = cd.namespace ? new RegExp("(^|\\.)" + ce.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
            cd.result = undefined;
            if (!cd.target) {
                cd.target = cg
            } ck = ck == null ? [cd] : bP.makeArray(ck, [cd]);
            cn = bP.event.special[co] || {};
            if (!cr && cn.trigger && cn.trigger.apply(cg, ck) === false) {
                return
            } if (!cr && !cn.noBubble && !bP.isWindow(cg)) {
                cq = cn.delegateType || co;
                if (!bJ.test(cq + co)) {
                    cp = cp.parentNode
                } for (;
                    cp;
                    cp = cp.parentNode) {
                        ch.push(cp);
                    cj = cp
                } if (cj === (cg.ownerDocument || m)) {
                    ch.push(cj.defaultView || cj.parentWindow || bc)
                }
            } ci = 0;
            while ((cp = ch[ci++]) && !cd.isPropagationStopped()) {
                cd.type = ci > 1 ? cq : cn.bindType || co;
                cl = (bP._data(cp, "events") || {})[cd.type] && bP._data(cp, "handle");
                if (cl) {
                    cl.apply(cp, ck)
                } cl = cf && cp[cf];
                if (cl && cl.apply && V(cp)) {
                    cd.result = cl.apply(cp, ck);
                    if (cd.result === false) {
                        cd.preventDefault()
                    }
                }
            } cd.type = co;
            if (!cr && !cd.isDefaultPrevented()) {
                if ((!cn._default || cn._default.apply(ch.pop(), ck) === false) && V(cg)) {
                    if (cf && cg[co] && !bP.isWindow(cg)) {
                        cj = cg[cf];
                        if (cj) {
                            cg[cf] = null
                        } bP.event.triggered = co;
                        try {
                            cg[co]()
                        } catch (cm) { } bP.event.triggered = undefined;
                        if (cj) {
                            cg[cf] = cj
                        }
                    }
                }
            } return cd.result
        }, dispatch: function (cd) {
            cd = bP.event.fix(cd);
            var ch, cg, ci, ce, cm, cl = [], ck = X.call(arguments), cf = (bP._data(this, "events") || {})[cd.type] || [], cj = bP.event.special[cd.type] || {};
            ck[0] = cd;
            cd.delegateTarget = this;
            if (cj.preDispatch && cj.preDispatch.call(this, cd) === false) {
                return
            } cl = bP.event.handlers.call(this, cd, cf);
            ch = 0;
            while ((ce = cl[ch++]) && !cd.isPropagationStopped()) {
                cd.currentTarget = ce.elem;
                cg = 0;
                while ((cm = ce.handlers[cg++]) && !cd.isImmediatePropagationStopped()) {
                    if (!cd.rnamespace || cd.rnamespace.test(cm.namespace)) {
                        cd.handleObj = cm;
                        cd.data = cm.data;
                        ci = ((bP.event.special[cm.origType] || {}).handle || cm.handler).apply(ce.elem, ck);
                        if (ci !== undefined) {
                            if ((cd.result = ci) === false) {
                                cd.preventDefault();
                                cd.stopPropagation()
                            }
                        }
                    }
                }
            } if (cj.postDispatch) {
                cj.postDispatch.call(this, cd)
            } return cd.result
        }, handlers: function (cd, cf) {
            var ch, ci, ce, ck, cj = [], cg = cf.delegateCount, cl = cd.target;
            if (cg && cl.nodeType && (cd.type !== "click" || isNaN(cd.button) || cd.button < 1)) {
                for (;
                    cl != this;
                    cl = cl.parentNode || this) {
                        if (cl.nodeType === 1 && (cl.disabled !== true || cd.type !== "click")) {
                            ci = [];
                            for (ch = 0;
                                ch < cg;
                                ch++) {
                                    ck = cf[ch];
                                ce = ck.selector + " ";
                                if (ci[ce] === undefined) {
                                    ci[ce] = ck.needsContext ? bP(ce, this).index(cl) > -1 : bP.find(ce, this, null, [cl]).length
                                } if (ci[ce]) {
                                    ci.push(ck)
                                }
                            } if (ci.length) {
                                cj.push({ elem: cl, handlers: ci })
                            }
                        }
                }
            } if (cg < cf.length) {
                cj.push({ elem: this, handlers: cf.slice(cg) })
            } return cj
        }, fix: function (cg) {
            if (cg[bP.expando]) {
                return cg
            } var ce, cj, ci, cf = cg.type, cd = cg, ch = this.fixHooks[cf];
            if (!ch) {
                this.fixHooks[cf] = ch = bS.test(cf) ? this.mouseHooks : bd.test(cf) ? this.keyHooks : {}
            } ci = ch.props ? this.props.concat(ch.props) : this.props;
            cg = new bP.Event(cd);
            ce = ci.length;
            while (ce--) {
                cj = ci[ce];
                cg[cj] = cd[cj]
            } if (!cg.target) {
                cg.target = cd.srcElement || m
            } if (cg.target.nodeType === 3) {
                cg.target = cg.target.parentNode
            } cg.metaKey = !!cg.metaKey;
            return ch.filter ? ch.filter(cg, cd) : cg
        }, props: ("altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which").split(" "), fixHooks: {}, keyHooks: {
            props: "char charCode key keyCode".split(" "), filter: function (ce, cd) {
                if (ce.which == null) {
                    ce.which = cd.charCode != null ? cd.charCode : cd.keyCode
                } return ce
            }
        }, mouseHooks: {
            props: ("button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement").split(" "), filter: function (cg, cf) {
                var cd, ch, ci, ce = cf.button, cj = cf.fromElement;
                if (cg.pageX == null && cf.clientX != null) {
                    ch = cg.target.ownerDocument || m;
                    ci = ch.documentElement;
                    cd = ch.body;
                    cg.pageX = cf.clientX + (ci && ci.scrollLeft || cd && cd.scrollLeft || 0) - (ci && ci.clientLeft || cd && cd.clientLeft || 0);
                    cg.pageY = cf.clientY + (ci && ci.scrollTop || cd && cd.scrollTop || 0) - (ci && ci.clientTop || cd && cd.clientTop || 0)
                } if (!cg.relatedTarget && cj) {
                    cg.relatedTarget = cj === cg.target ? cf.toElement : cj
                } if (!cg.which && ce !== undefined) {
                    cg.which = (ce & 1 ? 1 : (ce & 2 ? 3 : (ce & 4 ? 2 : 0)))
                } return cg
            }
        }, special: {
            load: { noBubble: true }, focus: {
                trigger: function () {
                    if (this !== au() && this.focus) {
                        try {
                            this.focus();
                            return false
                        } catch (cd) { }
                    }
                }, delegateType: "focusin"
            }, blur: {
                trigger: function () {
                    if (this === au() && this.blur) {
                        this.blur();
                        return false
                    }
                }, delegateType: "focusout"
            }, click: {
                trigger: function () {
                    if (bP.nodeName(this, "input") && this.type === "checkbox" && this.click) {
                        this.click();
                        return false
                    }
                }, _default: function (cd) {
                    return bP.nodeName(cd.target, "a")
                }
            }, beforeunload: {
                postDispatch: function (cd) {
                    if (cd.result !== undefined && cd.originalEvent) {
                        cd.originalEvent.returnValue = cd.result
                    }
                }
            }
        }, simulate: function (cd, cf, ce) {
            var cg = bP.extend(new bP.Event(), ce, { type: cd, isSimulated: true });
            bP.event.trigger(cg, null, cf);
            if (cg.isDefaultPrevented()) {
                ce.preventDefault()
            }
        }
    };
    bP.removeEvent = m.removeEventListener ? function (ce, cd, cf) {
        if (ce.removeEventListener) {
            ce.removeEventListener(cd, cf)
        }
    } : function (cf, ce, cg) {
        var cd = "on" + ce;
        if (cf.detachEvent) {
            if (typeof cf[cd] === "undefined") {
                cf[cd] = null
            } cf.detachEvent(cd, cg)
        }
    };
    bP.Event = function (ce, cd) {
        if (!(this instanceof bP.Event)) {
            return new bP.Event(ce, cd)
        } if (ce && ce.type) {
            this.originalEvent = ce;
            this.type = ce.type;
            this.isDefaultPrevented = ce.defaultPrevented || ce.defaultPrevented === undefined && ce.returnValue === false ? ac : ah
        } else {
            this.type = ce
        } if (cd) {
            bP.extend(this, cd)
        } this.timeStamp = ce && ce.timeStamp || bP.now();
        this[bP.expando] = true
    };
    bP.Event.prototype = {
        constructor: bP.Event, isDefaultPrevented: ah, isPropagationStopped: ah, isImmediatePropagationStopped: ah, preventDefault: function () {
            var cd = this.originalEvent;
            this.isDefaultPrevented = ac;
            if (!cd) {
                return
            } if (cd.preventDefault) {
                cd.preventDefault()
            } else {
                cd.returnValue = false
            }
        }, stopPropagation: function () {
            var cd = this.originalEvent;
            this.isPropagationStopped = ac;
            if (!cd || this.isSimulated) {
                return
            } if (cd.stopPropagation) {
                cd.stopPropagation()
            } cd.cancelBubble = true
        }, stopImmediatePropagation: function () {
            var cd = this.originalEvent;
            this.isImmediatePropagationStopped = ac;
            if (cd && cd.stopImmediatePropagation) {
                cd.stopImmediatePropagation()
            } this.stopPropagation()
        }
    };
    bP.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (ce, cd) {
        bP.event.special[ce] = {
            delegateType: cd, bindType: cd, handle: function (ch) {
                var cf, cj = this, ci = ch.relatedTarget, cg = ch.handleObj;
                if (!ci || (ci !== cj && !bP.contains(cj, ci))) {
                    ch.type = cg.origType;
                    cf = cg.handler.apply(this, arguments);
                    ch.type = cd
                } return cf
            }
        }
    });
    if (!F.submit) {
        bP.event.special.submit = {
            setup: function () {
                if (bP.nodeName(this, "form")) {
                    return false
                } bP.event.add(this, "click._submit keypress._submit", function (cf) {
                    var ce = cf.target, cd = bP.nodeName(ce, "input") || bP.nodeName(ce, "button") ? bP.prop(ce, "form") : undefined;
                    if (cd && !bP._data(cd, "submit")) {
                        bP.event.add(cd, "submit._submit", function (cg) {
                            cg._submitBubble = true
                        });
                        bP._data(cd, "submit", true)
                    }
                })
            }, postDispatch: function (cd) {
                if (cd._submitBubble) {
                    delete cd._submitBubble;
                    if (this.parentNode && !cd.isTrigger) {
                        bP.event.simulate("submit", this.parentNode, cd)
                    }
                }
            }, teardown: function () {
                if (bP.nodeName(this, "form")) {
                    return false
                } bP.event.remove(this, "._submit")
            }
        }
    } if (!F.change) {
        bP.event.special.change = {
            setup: function () {
                if (bN.test(this.nodeName)) {
                    if (this.type === "checkbox" || this.type === "radio") {
                        bP.event.add(this, "propertychange._change", function (cd) {
                            if (cd.originalEvent.propertyName === "checked") {
                                this._justChanged = true
                            }
                        });
                        bP.event.add(this, "click._change", function (cd) {
                            if (this._justChanged && !cd.isTrigger) {
                                this._justChanged = false
                            } bP.event.simulate("change", this, cd)
                        })
                    } return false
                } bP.event.add(this, "beforeactivate._change", function (ce) {
                    var cd = ce.target;
                    if (bN.test(cd.nodeName) && !bP._data(cd, "change")) {
                        bP.event.add(cd, "change._change", function (cf) {
                            if (this.parentNode && !cf.isSimulated && !cf.isTrigger) {
                                bP.event.simulate("change", this.parentNode, cf)
                            }
                        });
                        bP._data(cd, "change", true)
                    }
                })
            }, handle: function (ce) {
                var cd = ce.target;
                if (this !== cd || ce.isSimulated || ce.isTrigger || (cd.type !== "radio" && cd.type !== "checkbox")) {
                    return ce.handleObj.handler.apply(this, arguments)
                }
            }, teardown: function () {
                bP.event.remove(this, "._change");
                return !bN.test(this.nodeName)
            }
        }
    } if (!F.focusin) {
        bP.each({ focus: "focusin", blur: "focusout" }, function (cf, cd) {
            var ce = function (cg) {
                bP.event.simulate(cd, cg.target, bP.event.fix(cg))
            };
            bP.event.special[cd] = {
                setup: function () {
                    var ch = this.ownerDocument || this, cg = bP._data(ch, cd);
                    if (!cg) {
                        ch.addEventListener(cf, ce, true)
                    } bP._data(ch, cd, (cg || 0) + 1)
                }, teardown: function () {
                    var ch = this.ownerDocument || this, cg = bP._data(ch, cd) - 1;
                    if (!cg) {
                        ch.removeEventListener(cf, ce, true);
                        bP._removeData(ch, cd)
                    } else {
                        bP._data(ch, cd, cg)
                    }
                }
            }
        })
    } bP.fn.extend({
        on: function (ce, cd, cg, cf) {
            return bp(this, ce, cd, cg, cf)
        }, one: function (ce, cd, cg, cf) {
            return bp(this, ce, cd, cg, cf, 1)
        }, off: function (cf, cd, ch) {
            var ce, cg;
            if (cf && cf.preventDefault && cf.handleObj) {
                ce = cf.handleObj;
                bP(cf.delegateTarget).off(ce.namespace ? ce.origType + "." + ce.namespace : ce.origType, ce.selector, ce.handler);
                return this
            } if (typeof cf === "object") {
                for (cg in cf) {
                    this.off(cg, cd, cf[cg])
                } return this
            } if (cd === false || typeof cd === "function") {
                ch = cd;
                cd = undefined
            } if (ch === false) {
                ch = ah
            } return this.each(function () {
                bP.event.remove(this, cf, ch, cd)
            })
        }, trigger: function (cd, ce) {
            return this.each(function () {
                bP.event.trigger(cd, ce, this)
            })
        }, triggerHandler: function (cd, cf) {
            var ce = this[0];
            if (ce) {
                return bP.event.trigger(cd, cf, ce, true)
            }
        }
    });
    var aK = / jQuery\d+="(?:null|\d+)"/g, T = new RegExp("<(?:" + d + ")[\\s/>]", "i"), aN = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi, av = /<script|<style|<link/i, b4 = /checked\s*(?:[^=]|=\s*.checked.)/i, az = /^true\/(.*)/, aU = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, a0 = C(m), j = a0.appendChild(m.createElement("div"));
    function ba(ce, cd) {
        return bP.nodeName(ce, "table") && bP.nodeName(cd.nodeType !== 11 ? cd : cd.firstChild, "tr") ? ce.getElementsByTagName("tbody")[0] || ce.appendChild(ce.ownerDocument.createElement("tbody")) : ce
    } function u(cd) {
        cd.type = (bP.find.attr(cd, "type") !== null) + "/" + cd.type;
        return cd
    } function bm(ce) {
        var cd = az.exec(ce.type);
        if (cd) {
            ce.type = cd[1]
        } else {
            ce.removeAttribute("type")
        } return ce
    } function aA(ck, ce) {
        if (ce.nodeType !== 1 || !bP.hasData(ck)) {
            return
        } var ch, cg, cd, cj = bP._data(ck), ci = bP._data(ce, cj), cf = cj.events;
        if (cf) {
            delete ci.handle;
            ci.events = {};
            for (ch in cf) {
                for (cg = 0, cd = cf[ch].length;
                    cg < cd;
                    cg++) {
                        bP.event.add(ce, ch, cf[ch][cg])
                }
            }
        } if (ci.data) {
            ci.data = bP.extend({}, ci.data)
        }
    } function ab(cg, cd) {
        var ch, cf, ce;
        if (cd.nodeType !== 1) {
            return
        } ch = cd.nodeName.toLowerCase();
        if (!F.noCloneEvent && cd[bP.expando]) {
            ce = bP._data(cd);
            for (cf in ce.events) {
                bP.removeEvent(cd, cf, ce.handle)
            } cd.removeAttribute(bP.expando)
        } if (ch === "script" && cd.text !== cg.text) {
            u(cd).text = cg.text;
            bm(cd)
        } else {
            if (ch === "object") {
                if (cd.parentNode) {
                    cd.outerHTML = cg.outerHTML
                } if (F.html5Clone && (cg.innerHTML && !bP.trim(cd.innerHTML))) {
                    cd.innerHTML = cg.innerHTML
                }
            } else {
                if (ch === "input" && aS.test(cg.type)) {
                    cd.defaultChecked = cd.checked = cg.checked;
                    if (cd.value !== cg.value) {
                        cd.value = cg.value
                    }
                } else {
                    if (ch === "option") {
                        cd.defaultSelected = cd.selected = cg.defaultSelected
                    } else {
                        if (ch === "input" || ch === "textarea") {
                            cd.defaultValue = cg.defaultValue
                        }
                    }
                }
            }
        }
    } function J(cl, cn, cr, cg) {
        cn = aH.apply([], cn);
        var ck, cf, cd, ci, cp, cm, cj = 0, ch = cl.length, cq = ch - 1, co = cn[0], ce = bP.isFunction(co);
        if (ce || (ch > 1 && typeof co === "string" && !F.checkClone && b4.test(co))) {
            return cl.each(function (ct) {
                var cs = cl.eq(ct);
                if (ce) {
                    cn[0] = co.call(this, ct, cs.html())
                } J(cs, cn, cr, cg)
            })
        } if (ch) {
            cm = B(cn, cl[0].ownerDocument, false, cl, cg);
            ck = cm.firstChild;
            if (cm.childNodes.length === 1) {
                cm = ck
            } if (ck || cg) {
                ci = bP.map(k(cm, "script"), u);
                cd = ci.length;
                for (;
                    cj < ch;
                    cj++) {
                        cf = cm;
                    if (cj !== cq) {
                        cf = bP.clone(cf, true, true);
                        if (cd) {
                            bP.merge(ci, k(cf, "script"))
                        }
                    } cr.call(cl[cj], cf, cj)
                } if (cd) {
                    cp = ci[ci.length - 1].ownerDocument;
                    bP.map(ci, bm);
                    for (cj = 0;
                        cj < cd;
                        cj++) {
                            cf = ci[cj];
                        if (bI.test(cf.type || "") && !bP._data(cf, "globalEval") && bP.contains(cp, cf)) {
                            if (cf.src) {
                                if (bP._evalUrl) {
                                    bP._evalUrl(cf.src)
                                }
                            } else {
                                bP.globalEval((cf.text || cf.textContent || cf.innerHTML || "").replace(aU, ""))
                            }
                        }
                    }
                } cm = ck = null
            }
        } return cl
    } function L(ch, cd, ci) {
        var cg, ce = cd ? bP.filter(cd, ch) : ch, cf = 0;
        for (;
            (cg = ce[cf]) != null;
            cf++) {
                if (!ci && cg.nodeType === 1) {
                    bP.cleanData(k(cg))
                } if (cg.parentNode) {
                    if (ci && bP.contains(cg.ownerDocument, cg)) {
                        bB(k(cg, "script"))
                    } cg.parentNode.removeChild(cg)
                }
        } return ch
    } bP.extend({
        htmlPrefilter: function (cd) {
            return cd.replace(aN, "<$1></$2>")
        }, clone: function (ce, cg, cd) {
            var ci, cf, cl, ch, cj, ck = bP.contains(ce.ownerDocument, ce);
            if (F.html5Clone || bP.isXMLDoc(ce) || !T.test("<" + ce.nodeName + ">")) {
                cl = ce.cloneNode(true)
            } else {
                j.innerHTML = ce.outerHTML;
                j.removeChild(cl = j.firstChild)
            } if ((!F.noCloneEvent || !F.noCloneChecked) && (ce.nodeType === 1 || ce.nodeType === 11) && !bP.isXMLDoc(ce)) {
                ci = k(cl);
                cj = k(ce);
                for (ch = 0;
                    (cf = cj[ch]) != null;
                    ++ch) {
                        if (ci[ch]) {
                            ab(cf, ci[ch])
                        }
                }
            } if (cg) {
                if (cd) {
                    cj = cj || k(ce);
                    ci = ci || k(cl);
                    for (ch = 0;
                        (cf = cj[ch]) != null;
                        ch++) {
                            aA(cf, ci[ch])
                    }
                } else {
                    aA(ce, cl)
                }
            } ci = k(cl, "script");
            if (ci.length > 0) {
                bB(ci, !ck && k(ce, "script"))
            } ci = cj = cf = null;
            return cl
        }, cleanData: function (ce, cm) {
            var cg, cl, cf, ci, cj = 0, cn = bP.expando, cd = bP.cache, ch = F.attributes, ck = bP.event.special;
            for (;
                (cg = ce[cj]) != null;
                cj++) {
                    if (cm || V(cg)) {
                        cf = cg[cn];
                        ci = cf && cd[cf];
                        if (ci) {
                            if (ci.events) {
                                for (cl in ci.events) {
                                    if (ck[cl]) {
                                        bP.event.remove(cg, cl)
                                    } else {
                                        bP.removeEvent(cg, cl, ci.handle)
                                    }
                                }
                            } if (cd[cf]) {
                                delete cd[cf];
                                if (!ch && typeof cg.removeAttribute !== "undefined") {
                                    cg.removeAttribute(cn)
                                } else {
                                    cg[cn] = undefined
                                } aW.push(cf)
                            }
                        }
                    }
            }
        }
    });
    bP.fn.extend({
        domManip: J, detach: function (cd) {
            return L(this, cd, true)
        }, remove: function (cd) {
            return L(this, cd)
        }, text: function (cd) {
            return aJ(this, function (ce) {
                return ce === undefined ? bP.text(this) : this.empty().append((this[0] && this[0].ownerDocument || m).createTextNode(ce))
            }, null, cd, arguments.length)
        }, append: function () {
            return J(this, arguments, function (cd) {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    var ce = ba(this, cd);
                    ce.appendChild(cd)
                }
            })
        }, prepend: function () {
            return J(this, arguments, function (cd) {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    var ce = ba(this, cd);
                    ce.insertBefore(cd, ce.firstChild)
                }
            })
        }, before: function () {
            return J(this, arguments, function (cd) {
                if (this.parentNode) {
                    this.parentNode.insertBefore(cd, this)
                }
            })
        }, after: function () {
            return J(this, arguments, function (cd) {
                if (this.parentNode) {
                    this.parentNode.insertBefore(cd, this.nextSibling)
                }
            })
        }, empty: function () {
            var ce, cd = 0;
            for (;
                (ce = this[cd]) != null;
                cd++) {
                    if (ce.nodeType === 1) {
                        bP.cleanData(k(ce, false))
                    } while (ce.firstChild) {
                        ce.removeChild(ce.firstChild)
                    } if (ce.options && bP.nodeName(ce, "select")) {
                        ce.options.length = 0
                    }
            } return this
        }, clone: function (ce, cd) {
            ce = ce == null ? false : ce;
            cd = cd == null ? ce : cd;
            return this.map(function () {
                return bP.clone(this, ce, cd)
            })
        }, html: function (cd) {
            return aJ(this, function (ch) {
                var cg = this[0] || {}, cf = 0, ce = this.length;
                if (ch === undefined) {
                    return cg.nodeType === 1 ? cg.innerHTML.replace(aK, "") : undefined
                } if (typeof ch === "string" && !av.test(ch) && (F.htmlSerialize || !T.test(ch)) && (F.leadingWhitespace || !cc.test(ch)) && !ad[(n.exec(ch) || ["", ""])[1].toLowerCase()]) {
                    ch = bP.htmlPrefilter(ch);
                    try {
                        for (;
                            cf < ce;
                            cf++) {
                                cg = this[cf] || {};
                            if (cg.nodeType === 1) {
                                bP.cleanData(k(cg, false));
                                cg.innerHTML = ch
                            }
                        } cg = 0
                    } catch (ci) { }
                } if (cg) {
                    this.empty().append(ch)
                }
            }, null, cd, arguments.length)
        }, replaceWith: function () {
            var cd = [];
            return J(this, arguments, function (cf) {
                var ce = this.parentNode;
                if (bP.inArray(this, cd) < 0) {
                    bP.cleanData(k(this));
                    if (ce) {
                        ce.replaceChild(cf, this)
                    }
                }
            }, cd)
        }
    });
    bP.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (cd, ce) {
        bP.fn[cd] = function (cf) {
            var cg, ci = 0, ch = [], ck = bP(cf), cj = ck.length - 1;
            for (;
                ci <= cj;
                ci++) {
                    cg = ci === cj ? this : this.clone(true);
                bP(ck[ci])[ce](cg);
                w.apply(ch, cg.get())
            } return this.pushStack(ch)
        }
    });
    var aO, bs = { HTML: "block", BODY: "block" };
    function bb(cd, cg) {
        var ce = bP(cg.createElement(cd)).appendTo(cg.body), cf = bP.css(ce[0], "display");
        ce.detach();
        return cf
    } function a8(cf) {
        var ce = m, cd = bs[cf];
        if (!cd) {
            cd = bb(cf, ce);
            if (cd === "none" || !cd) {
                aO = (aO || bP("<iframe frameborder='0' width='0' height='0'/>")).appendTo(ce.documentElement);
                ce = (aO[0].contentWindow || aO[0].contentDocument).document;
                ce.write();
                ce.close();
                cd = bb(cf, ce);
                aO.detach()
            } bs[cf] = cd
        } return cd
    } var a7 = (/^margin/);
    var ag = new RegExp("^(" + aL + ")(?!px)[a-z%]+$", "i");
    var K = function (ci, ch, cj, cg) {
        var cf, ce, cd = {};
        for (ce in ch) {
            cd[ce] = ci.style[ce];
            ci.style[ce] = ch[ce]
        } cf = cj.apply(ci, cg || []);
        for (ce in ch) {
            ci.style[ce] = cd[ce]
        } return cf
    };
    var b1 = m.documentElement;
    (function () {
        var ci, cf, cj, cl, ck, cg, ce = m.createElement("div"), cd = m.createElement("div");
        if (!cd.style) {
            return
        } cd.style.cssText = "float:left;opacity:.5";
        F.opacity = cd.style.opacity === "0.5";
        F.cssFloat = !!cd.style.cssFloat;
        cd.style.backgroundClip = "content-box";
        cd.cloneNode(true).style.backgroundClip = "";
        F.clearCloneStyle = cd.style.backgroundClip === "content-box";
        ce = m.createElement("div");
        ce.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute";
        cd.innerHTML = "";
        ce.appendChild(cd);
        F.boxSizing = cd.style.boxSizing === "" || cd.style.MozBoxSizing === "" || cd.style.WebkitBoxSizing === "";
        bP.extend(F, {
            reliableHiddenOffsets: function () {
                if (ci == null) {
                    ch()
                } return cl
            }, boxSizingReliable: function () {
                if (ci == null) {
                    ch()
                } return cj
            }, pixelMarginRight: function () {
                if (ci == null) {
                    ch()
                } return cf
            }, pixelPosition: function () {
                if (ci == null) {
                    ch()
                } return ci
            }, reliableMarginRight: function () {
                if (ci == null) {
                    ch()
                } return ck
            }, reliableMarginLeft: function () {
                if (ci == null) {
                    ch()
                } return cg
            }
        });
        function ch() {
            var cn, cm, co = m.documentElement;
            co.appendChild(ce);
            cd.style.cssText = "-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%";
            ci = cj = cg = false;
            cf = ck = true;
            if (bc.getComputedStyle) {
                cm = bc.getComputedStyle(cd);
                ci = (cm || {}).top !== "1%";
                cg = (cm || {}).marginLeft === "2px";
                cj = (cm || { width: "4px" }).width === "4px";
                cd.style.marginRight = "50%";
                cf = (cm || { marginRight: "4px" }).marginRight === "4px";
                cn = cd.appendChild(m.createElement("div"));
                cn.style.cssText = cd.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0";
                cn.style.marginRight = cn.style.width = "0";
                cd.style.width = "1px";
                ck = !parseFloat((bc.getComputedStyle(cn) || {}).marginRight);
                cd.removeChild(cn)
            } cd.style.display = "none";
            cl = cd.getClientRects().length === 0;
            if (cl) {
                cd.style.display = "";
                cd.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
                cd.childNodes[0].style.borderCollapse = "separate";
                cn = cd.getElementsByTagName("td");
                cn[0].style.cssText = "margin:0;border:0;padding:0;display:none";
                cl = cn[0].offsetHeight === 0;
                if (cl) {
                    cn[0].style.display = "";
                    cn[1].style.display = "none";
                    cl = cn[0].offsetHeight === 0
                }
            } co.removeChild(ce)
        }
    })();
    var bx, I, bv = /^(top|right|bottom|left)$/;
    if (bc.getComputedStyle) {
        bx = function (ce) {
            var cd = ce.ownerDocument.defaultView;
            if (!cd || !cd.opener) {
                cd = bc
            } return cd.getComputedStyle(ce)
        };
        I = function (ck, ce, cj) {
            var ch, cg, ci, cd, cf = ck.style;
            cj = cj || bx(ck);
            cd = cj ? cj.getPropertyValue(ce) || cj[ce] : undefined;
            if ((cd === "" || cd === undefined) && !bP.contains(ck.ownerDocument, ck)) {
                cd = bP.style(ck, ce)
            } if (cj) {
                if (!F.pixelMarginRight() && ag.test(cd) && a7.test(ce)) {
                    ch = cf.width;
                    cg = cf.minWidth;
                    ci = cf.maxWidth;
                    cf.minWidth = cf.maxWidth = cf.width = cd;
                    cd = cj.width;
                    cf.width = ch;
                    cf.minWidth = cg;
                    cf.maxWidth = ci
                }
            } return cd === undefined ? cd : cd + ""
        }
    } else {
        if (b1.currentStyle) {
            bx = function (cd) {
                return cd.currentStyle
            };
            I = function (cj, cg, ci) {
                var ck, ce, cd, cf, ch = cj.style;
                ci = ci || bx(cj);
                cf = ci ? ci[cg] : undefined;
                if (cf == null && ch && ch[cg]) {
                    cf = ch[cg]
                } if (ag.test(cf) && !bv.test(cg)) {
                    ck = ch.left;
                    ce = cj.runtimeStyle;
                    cd = ce && ce.left;
                    if (cd) {
                        ce.left = cj.currentStyle.left
                    } ch.left = cg === "fontSize" ? "1em" : cf;
                    cf = ch.pixelLeft + "px";
                    ch.left = ck;
                    if (cd) {
                        ce.left = cd
                    }
                } return cf === undefined ? cf : cf + "" || "auto"
            }
        }
    } function be(cd, ce) {
        return {
            get: function () {
                if (cd()) {
                    delete this.get;
                    return
                } return (this.get = ce).apply(this, arguments)
            }
        }
    } var bq = /alpha\([^)]*\)/i, a2 = /opacity\s*=\s*([^)]*)/i, M = /^(none|table(?!-c[ea]).+)/, bi = new RegExp("^(" + aL + ")(.*)$", "i"), bl = { position: "absolute", visibility: "hidden", display: "block" }, bK = { letterSpacing: "0", fontWeight: "400" }, aE = ["Webkit", "O", "Moz", "ms"], bY = m.createElement("div").style;
    function c(cd) {
        if (cd in bY) {
            return cd
        } var cf = cd.charAt(0).toUpperCase() + cd.slice(1), ce = aE.length;
        while (ce--) {
            cd = aE[ce] + cf;
            if (cd in bY) {
                return cd
            }
        }
    } function r(cj, cd) {
        var ck, ch, ci, ce = [], cf = 0, cg = cj.length;
        for (;
            cf < cg;
            cf++) {
                ch = cj[cf];
            if (!ch.style) {
                continue
            } ce[cf] = bP._data(ch, "olddisplay");
            ck = ch.style.display;
            if (cd) {
                if (!ce[cf] && ck === "none") {
                    ch.style.display = ""
                } if (ch.style.display === "" && aa(ch)) {
                    ce[cf] = bP._data(ch, "olddisplay", a8(ch.nodeName))
                }
            } else {
                ci = aa(ch);
                if (ck && ck !== "none" || !ci) {
                    bP._data(ch, "olddisplay", ci ? ck : bP.css(ch, "display"))
                }
            }
        } for (cf = 0;
            cf < cg;
            cf++) {
                ch = cj[cf];
            if (!ch.style) {
                continue
            } if (!cd || ch.style.display === "none" || ch.style.display === "") {
                ch.style.display = cd ? ce[cf] || "" : "none"
            }
        } return cj
    } function aT(cd, cf, cg) {
        var ce = bi.exec(cf);
        return ce ? Math.max(0, ce[1] - (cg || 0)) + (ce[2] || "px") : cf
    } function aF(ch, ce, cd, cj, cg) {
        var cf = cd === (cj ? "border" : "content") ? 4 : ce === "width" ? 1 : 0, ci = 0;
        for (;
            cf < 4;
            cf += 2) {
                if (cd === "margin") {
                    ci += bP.css(ch, cd + b0[cf], true, cg)
                } if (cj) {
                    if (cd === "content") {
                        ci -= bP.css(ch, "padding" + b0[cf], true, cg)
                    } if (cd !== "margin") {
                        ci -= bP.css(ch, "border" + b0[cf] + "Width", true, cg)
                    }
                } else {
                    ci += bP.css(ch, "padding" + b0[cf], true, cg);
                if (cd !== "padding") {
                    ci += bP.css(ch, "border" + b0[cf] + "Width", true, cg)
                }
            }
        } return ci
    } function v(ch, ce, cd) {
        var cg = true, ci = ce === "width" ? ch.offsetWidth : ch.offsetHeight, cf = bx(ch), cj = F.boxSizing && bP.css(ch, "boxSizing", false, cf) === "border-box";
        if (ci <= 0 || ci == null) {
            ci = I(ch, ce, cf);
            if (ci < 0 || ci == null) {
                ci = ch.style[ce]
            } if (ag.test(ci)) {
                return ci
            } cg = cj && (F.boxSizingReliable() || ci === ch.style[ce]);
            ci = parseFloat(ci) || 0
        } return (ci + aF(ch, ce, cd || (cj ? "border" : "content"), cg, cf)) + "px"
    } bP.extend({
        cssHooks: {
            opacity: {
                get: function (cf, ce) {
                    if (ce) {
                        var cd = I(cf, "opacity");
                        return cd === "" ? "1" : cd
                    }
                }
            }
        }, cssNumber: { animationIterationCount: true, columnCount: true, fillOpacity: true, flexGrow: true, flexShrink: true, fontWeight: true, lineHeight: true, opacity: true, order: true, orphans: true, widows: true, zIndex: true, zoom: true }, cssProps: { "float": F.cssFloat ? "cssFloat" : "styleFloat" }, style: function (cf, ce, cl, cg) {
            if (!cf || cf.nodeType === 3 || cf.nodeType === 8 || !cf.style) {
                return
            } var cj, ck, cm, ch = bP.camelCase(ce), cd = cf.style;
            ce = bP.cssProps[ch] || (bP.cssProps[ch] = c(ch) || ch);
            cm = bP.cssHooks[ce] || bP.cssHooks[ch];
            if (cl !== undefined) {
                ck = typeof cl;
                if (ck === "string" && (cj = b6.exec(cl)) && cj[1]) {
                    cl = A(cf, ce, cj);
                    ck = "number"
                } if (cl == null || cl !== cl) {
                    return
                } if (ck === "number") {
                    cl += cj && cj[3] || (bP.cssNumber[ch] ? "" : "px")
                } if (!F.clearCloneStyle && cl === "" && ce.indexOf("background") === 0) {
                    cd[ce] = "inherit"
                } if (!cm || !("set" in cm) || (cl = cm.set(cf, cl, cg)) !== undefined) {
                    try {
                        cd[ce] = cl
                    } catch (ci) { }
                }
            } else {
                if (cm && "get" in cm && (cj = cm.get(cf, false, cg)) !== undefined) {
                    return cj
                } return cd[ce]
            }
        }, css: function (cj, ch, ce, ci) {
            var cg, ck, cd, cf = bP.camelCase(ch);
            ch = bP.cssProps[cf] || (bP.cssProps[cf] = c(cf) || cf);
            cd = bP.cssHooks[ch] || bP.cssHooks[cf];
            if (cd && "get" in cd) {
                ck = cd.get(cj, true, ce)
            } if (ck === undefined) {
                ck = I(cj, ch, ci)
            } if (ck === "normal" && ch in bK) {
                ck = bK[ch]
            } if (ce === "" || ce) {
                cg = parseFloat(ck);
                return ce === true || isFinite(cg) ? cg || 0 : ck
            } return ck
        }
    });
    bP.each(["height", "width"], function (ce, cd) {
        bP.cssHooks[cd] = {
            get: function (ch, cg, cf) {
                if (cg) {
                    return M.test(bP.css(ch, "display")) && ch.offsetWidth === 0 ? K(ch, bl, function () {
                        return v(ch, cd, cf)
                    }) : v(ch, cd, cf)
                }
            }, set: function (ch, ci, cf) {
                var cg = cf && bx(ch);
                return aT(ch, ci, cf ? aF(ch, cd, cf, F.boxSizing && bP.css(ch, "boxSizing", false, cg) === "border-box", cg) : 0)
            }
        }
    });
    if (!F.opacity) {
        bP.cssHooks.opacity = {
            get: function (ce, cd) {
                return a2.test((cd && ce.currentStyle ? ce.currentStyle.filter : ce.style.filter) || "") ? (0.01 * parseFloat(RegExp.$1)) + "" : cd ? "1" : ""
            }, set: function (ch, ci) {
                var cg = ch.style, ce = ch.currentStyle, cd = bP.isNumeric(ci) ? "alpha(opacity=" + ci * 100 + ")" : "", cf = ce && ce.filter || cg.filter || "";
                cg.zoom = 1;
                if ((ci >= 1 || ci === "") && bP.trim(cf.replace(bq, "")) === "" && cg.removeAttribute) {
                    cg.removeAttribute("filter");
                    if (ci === "" || ce && !ce.filter) {
                        return
                    }
                } cg.filter = bq.test(cf) ? cf.replace(bq, cd) : cf + " " + cd
            }
        }
    } bP.cssHooks.marginRight = be(F.reliableMarginRight, function (ce, cd) {
        if (cd) {
            return K(ce, { display: "inline-block" }, I, [ce, "marginRight"])
        }
    });
    bP.cssHooks.marginLeft = be(F.reliableMarginLeft, function (ce, cd) {
        if (cd) {
            return (parseFloat(I(ce, "marginLeft")) || (bP.contains(ce.ownerDocument, ce) ? ce.getBoundingClientRect().left - K(ce, { marginLeft: 0 }, function () {
                return ce.getBoundingClientRect().left
            }) : 0)) + "px"
        }
    });
    bP.each({ margin: "", padding: "", border: "Width" }, function (cd, ce) {
        bP.cssHooks[cd + ce] = {
            expand: function (ch) {
                var cg = 0, cf = {}, ci = typeof ch === "string" ? ch.split(" ") : [ch];
                for (;
                    cg < 4;
                    cg++) {
                        cf[cd + b0[cg] + ce] = ci[cg] || ci[cg - 2] || ci[0]
                } return cf
            }
        };
        if (!a7.test(cd)) {
            bP.cssHooks[cd + ce].set = aT
        }
    });
    bP.fn.extend({
        css: function (cd, ce) {
            return aJ(this, function (cj, cg, ck) {
                var ci, cf, cl = {}, ch = 0;
                if (bP.isArray(cg)) {
                    ci = bx(cj);
                    cf = cg.length;
                    for (;
                        ch < cf;
                        ch++) {
                            cl[cg[ch]] = bP.css(cj, cg[ch], false, ci)
                    } return cl
                } return ck !== undefined ? bP.style(cj, cg, ck) : bP.css(cj, cg)
            }, cd, ce, arguments.length > 1)
        }, show: function () {
            return r(this, true)
        }, hide: function () {
            return r(this)
        }, toggle: function (cd) {
            if (typeof cd === "boolean") {
                return cd ? this.show() : this.hide()
            } return this.each(function () {
                if (aa(this)) {
                    bP(this).show()
                } else {
                    bP(this).hide()
                }
            })
        }
    });
    function P(cf, ce, ch, cd, cg) {
        return new P.prototype.init(cf, ce, ch, cd, cg)
    } bP.Tween = P;
    P.prototype = {
        constructor: P, init: function (cg, ce, ci, cd, ch, cf) {
            this.elem = cg;
            this.prop = ci;
            this.easing = ch || bP.easing._default;
            this.options = ce;
            this.start = this.now = this.cur();
            this.end = cd;
            this.unit = cf || (bP.cssNumber[ci] ? "" : "px")
        }, cur: function () {
            var cd = P.propHooks[this.prop];
            return cd && cd.get ? cd.get(this) : P.propHooks._default.get(this)
        }, run: function (cf) {
            var ce, cd = P.propHooks[this.prop];
            if (this.options.duration) {
                this.pos = ce = bP.easing[this.easing](cf, this.options.duration * cf, 0, 1, this.options.duration)
            } else {
                this.pos = ce = cf
            } this.now = (this.end - this.start) * ce + this.start;
            if (this.options.step) {
                this.options.step.call(this.elem, this.now, this)
            } if (cd && cd.set) {
                cd.set(this)
            } else {
                P.propHooks._default.set(this)
            } return this
        }
    };
    P.prototype.init.prototype = P.prototype;
    P.propHooks = {
        _default: {
            get: function (ce) {
                var cd;
                if (ce.elem.nodeType !== 1 || ce.elem[ce.prop] != null && ce.elem.style[ce.prop] == null) {
                    return ce.elem[ce.prop]
                } cd = bP.css(ce.elem, ce.prop, "");
                return !cd || cd === "auto" ? 0 : cd
            }, set: function (cd) {
                if (bP.fx.step[cd.prop]) {
                    bP.fx.step[cd.prop](cd)
                } else {
                    if (cd.elem.nodeType === 1 && (cd.elem.style[bP.cssProps[cd.prop]] != null || bP.cssHooks[cd.prop])) {
                        bP.style(cd.elem, cd.prop, cd.now + cd.unit)
                    } else {
                        cd.elem[cd.prop] = cd.now
                    }
                }
            }
        }
    };
    P.propHooks.scrollTop = P.propHooks.scrollLeft = {
        set: function (cd) {
            if (cd.elem.nodeType && cd.elem.parentNode) {
                cd.elem[cd.prop] = cd.now
            }
        }
    };
    bP.easing = {
        linear: function (cd) {
            return cd
        }, swing: function (cd) {
            return 0.5 - Math.cos(cd * Math.PI) / 2
        }, _default: "swing"
    };
    bP.fx = P.prototype.init;
    bP.fx.step = {};
    var U, al, bX = /^(?:toggle|show|hide)$/, bV = /queueHooks$/;
    function bu() {
        bc.setTimeout(function () {
            U = undefined
        });
        return (U = bP.now())
    } function bO(cf, ch) {
        var cg, cd = { height: cf }, ce = 0;
        ch = ch ? 1 : 0;
        for (;
            ce < 4;
            ce += 2 - ch) {
                cg = b0[ce];
            cd["margin" + cg] = cd["padding" + cg] = cf
        } if (ch) {
            cd.opacity = cd.width = cf
        } return cd
    } function bk(ch, cj, cg) {
        var ce, ci = (e.tweeners[cj] || []).concat(e.tweeners["*"]), cd = 0, cf = ci.length;
        for (;
            cd < cf;
            cd++) {
                if ((ce = ci[cd].call(cg, cj, ch))) {
                    return ce
                }
        }
    } function g(cg, cl, cd) {
        var cf, co, ci, cr, cs, cp, ck, cn, ch = this, cm = {}, ce = cg.style, cj = cg.nodeType && aa(cg), cq = bP._data(cg, "fxshow");
        if (!cd.queue) {
            cs = bP._queueHooks(cg, "fx");
            if (cs.unqueued == null) {
                cs.unqueued = 0;
                cp = cs.empty.fire;
                cs.empty.fire = function () {
                    if (!cs.unqueued) {
                        cp()
                    }
                }
            } cs.unqueued++;
            ch.always(function () {
                ch.always(function () {
                    cs.unqueued--;
                    if (!bP.queue(cg, "fx").length) {
                        cs.empty.fire()
                    }
                })
            })
        } if (cg.nodeType === 1 && ("height" in cl || "width" in cl)) {
            cd.overflow = [ce.overflow, ce.overflowX, ce.overflowY];
            ck = bP.css(cg, "display");
            cn = ck === "none" ? bP._data(cg, "olddisplay") || a8(cg.nodeName) : ck;
            if (cn === "inline" && bP.css(cg, "float") === "none") {
                if (!F.inlineBlockNeedsLayout || a8(cg.nodeName) === "inline") {
                    ce.display = "inline-block"
                } else {
                    ce.zoom = 1
                }
            }
        } if (cd.overflow) {
            ce.overflow = "hidden";
            if (!F.shrinkWrapBlocks()) {
                ch.always(function () {
                    ce.overflow = cd.overflow[0];
                    ce.overflowX = cd.overflow[1];
                    ce.overflowY = cd.overflow[2]
                })
            }
        } for (cf in cl) {
            co = cl[cf];
            if (bX.exec(co)) {
                delete cl[cf];
                ci = ci || co === "toggle";
                if (co === (cj ? "hide" : "show")) {
                    if (co === "show" && cq && cq[cf] !== undefined) {
                        cj = true
                    } else {
                        continue
                    }
                } cm[cf] = cq && cq[cf] || bP.style(cg, cf)
            } else {
                ck = undefined
            }
        } if (!bP.isEmptyObject(cm)) {
            if (cq) {
                if ("hidden" in cq) {
                    cj = cq.hidden
                }
            } else {
                cq = bP._data(cg, "fxshow", {})
            } if (ci) {
                cq.hidden = !cj
            } if (cj) {
                bP(cg).show()
            } else {
                ch.done(function () {
                    bP(cg).hide()
                })
            } ch.done(function () {
                var ct;
                bP._removeData(cg, "fxshow");
                for (ct in cm) {
                    bP.style(cg, ct, cm[ct])
                }
            });
            for (cf in cm) {
                cr = bk(cj ? cq[cf] : 0, cf, ch);
                if (!(cf in cq)) {
                    cq[cf] = cr.start;
                    if (cj) {
                        cr.end = cr.start;
                        cr.start = cf === "width" || cf === "height" ? 1 : 0
                    }
                }
            }
        } else {
            if ((ck === "none" ? a8(cg.nodeName) : ck) === "inline") {
                ce.display = ck
            }
        }
    } function aw(cg, ci) {
        var cf, ce, cj, ch, cd;
        for (cf in cg) {
            ce = bP.camelCase(cf);
            cj = ci[ce];
            ch = cg[cf];
            if (bP.isArray(ch)) {
                cj = ch[1];
                ch = cg[cf] = ch[0]
            } if (cf !== ce) {
                cg[ce] = ch;
                delete cg[cf]
            } cd = bP.cssHooks[ce];
            if (cd && "expand" in cd) {
                ch = cd.expand(ch);
                delete cg[ce];
                for (cf in ch) {
                    if (!(cf in cg)) {
                        cg[cf] = ch[cf];
                        ci[cf] = cj
                    }
                }
            } else {
                ci[ce] = cj
            }
        }
    } function e(cf, cj, cm) {
        var cn, cd, ci = 0, ce = e.prefilters.length, cl = bP.Deferred().always(function () {
            delete ch.elem
        }), ch = function () {
            if (cd) {
                return false
            } var ct = U || bu(), cq = Math.max(0, cg.startTime + cg.duration - ct), co = cq / cg.duration || 0, cs = 1 - co, cp = 0, cr = cg.tweens.length;
            for (;
                cp < cr;
                cp++) {
                    cg.tweens[cp].run(cs)
            } cl.notifyWith(cf, [cg, cs, cq]);
            if (cs < 1 && cr) {
                return cq
            } else {
                cl.resolveWith(cf, [cg]);
                return false
            }
        }, cg = cl.promise({
            elem: cf, props: bP.extend({}, cj), opts: bP.extend(true, { specialEasing: {}, easing: bP.easing._default }, cm), originalProperties: cj, originalOptions: cm, startTime: U || bu(), duration: cm.duration, tweens: [], createTween: function (cq, co) {
                var cp = bP.Tween(cf, cg.opts, cq, co, cg.opts.specialEasing[cq] || cg.opts.easing);
                cg.tweens.push(cp);
                return cp
            }, stop: function (cp) {
                var co = 0, cq = cp ? cg.tweens.length : 0;
                if (cd) {
                    return this
                } cd = true;
                for (;
                    co < cq;
                    co++) {
                        cg.tweens[co].run(1)
                } if (cp) {
                    cl.notifyWith(cf, [cg, 1, 0]);
                    cl.resolveWith(cf, [cg, cp])
                } else {
                    cl.rejectWith(cf, [cg, cp])
                } return this
            }
        }), ck = cg.props;
        aw(ck, cg.opts.specialEasing);
        for (;
            ci < ce;
            ci++) {
                cn = e.prefilters[ci].call(cg, cf, ck, cg.opts);
            if (cn) {
                if (bP.isFunction(cn.stop)) {
                    bP._queueHooks(cg.elem, cg.opts.queue).stop = bP.proxy(cn.stop, cn)
                } return cn
            }
        } bP.map(ck, bk, cg);
        if (bP.isFunction(cg.opts.start)) {
            cg.opts.start.call(cf, cg)
        } bP.fx.timer(bP.extend(ch, { elem: cf, anim: cg, queue: cg.opts.queue }));
        return cg.progress(cg.opts.progress).done(cg.opts.done, cg.opts.complete).fail(cg.opts.fail).always(cg.opts.always)
    } bP.Animation = bP.extend(e, {
        tweeners: {
            "*": [function (cf, ce) {
                var cd = this.createTween(cf, ce);
                A(cd.elem, cf, b6.exec(ce), cd);
                return cd
            }]
        }, tweener: function (ce, ch) {
            if (bP.isFunction(ce)) {
                ch = ce;
                ce = ["*"]
            } else {
                ce = ce.match(aM)
            } var cg, cd = 0, cf = ce.length;
            for (;
                cd < cf;
                cd++) {
                    cg = ce[cd];
                e.tweeners[cg] = e.tweeners[cg] || [];
                e.tweeners[cg].unshift(ch)
            }
        }, prefilters: [g], prefilter: function (ce, cd) {
            if (cd) {
                e.prefilters.unshift(ce)
            } else {
                e.prefilters.push(ce)
            }
        }
    });
    bP.speed = function (cf, cg, ce) {
        var cd = cf && typeof cf === "object" ? bP.extend({}, cf) : { complete: ce || !ce && cg || bP.isFunction(cf) && cf, duration: cf, easing: ce && cg || cg && !bP.isFunction(cg) && cg };
        cd.duration = bP.fx.off ? 0 : typeof cd.duration === "number" ? cd.duration : cd.duration in bP.fx.speeds ? bP.fx.speeds[cd.duration] : bP.fx.speeds._default;
        if (cd.queue == null || cd.queue === true) {
            cd.queue = "fx"
        } cd.old = cd.complete;
        cd.complete = function () {
            if (bP.isFunction(cd.old)) {
                cd.old.call(this)
            } if (cd.queue) {
                bP.dequeue(this, cd.queue)
            }
        };
        return cd
    };
    bP.fn.extend({
        fadeTo: function (cd, cg, cf, ce) {
            return this.filter(aa).css("opacity", 0).show().end().animate({ opacity: cg }, cd, cf, ce)
        }, animate: function (cj, cg, ci, ch) {
            var cf = bP.isEmptyObject(cj), cd = bP.speed(cg, ci, ch), ce = function () {
                var ck = e(this, bP.extend({}, cj), cd);
                if (cf || bP._data(this, "finish")) {
                    ck.stop(true)
                }
            };
            ce.finish = ce;
            return cf || cd.queue === false ? this.each(ce) : this.queue(cd.queue, ce)
        }, stop: function (cf, ce, cd) {
            var cg = function (ch) {
                var ci = ch.stop;
                delete ch.stop;
                ci(cd)
            };
            if (typeof cf !== "string") {
                cd = ce;
                ce = cf;
                cf = undefined
            } if (ce && cf !== false) {
                this.queue(cf || "fx", [])
            } return this.each(function () {
                var ck = true, ch = cf != null && cf + "queueHooks", cj = bP.timers, ci = bP._data(this);
                if (ch) {
                    if (ci[ch] && ci[ch].stop) {
                        cg(ci[ch])
                    }
                } else {
                    for (ch in ci) {
                        if (ci[ch] && ci[ch].stop && bV.test(ch)) {
                            cg(ci[ch])
                        }
                    }
                } for (ch = cj.length;
                    ch--;
                ) {
                    if (cj[ch].elem === this && (cf == null || cj[ch].queue === cf)) {
                        cj[ch].anim.stop(cd);
                        ck = false;
                        cj.splice(ch, 1)
                    }
                } if (ck || !cd) {
                    bP.dequeue(this, cf)
                }
            })
        }, finish: function (cd) {
            if (cd !== false) {
                cd = cd || "fx"
            } return this.each(function () {
                var cg, cj = bP._data(this), cf = cj[cd + "queue"], ce = cj[cd + "queueHooks"], ci = bP.timers, ch = cf ? cf.length : 0;
                cj.finish = true;
                bP.queue(this, cd, []);
                if (ce && ce.stop) {
                    ce.stop.call(this, true)
                } for (cg = ci.length;
                    cg--;
                ) {
                    if (ci[cg].elem === this && ci[cg].queue === cd) {
                        ci[cg].anim.stop(true);
                        ci.splice(cg, 1)
                    }
                } for (cg = 0;
                    cg < ch;
                    cg++) {
                        if (cf[cg] && cf[cg].finish) {
                            cf[cg].finish.call(this)
                        }
                } delete cj.finish
            })
        }
    });
    bP.each(["toggle", "show", "hide"], function (ce, cd) {
        var cf = bP.fn[cd];
        bP.fn[cd] = function (cg, ci, ch) {
            return cg == null || typeof cg === "boolean" ? cf.apply(this, arguments) : this.animate(bO(cd, true), cg, ci, ch)
        }
    });
    bP.each({ slideDown: bO("show"), slideUp: bO("hide"), slideToggle: bO("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (cd, ce) {
        bP.fn[cd] = function (cf, ch, cg) {
            return this.animate(ce, cf, ch, cg)
        }
    });
    bP.timers = [];
    bP.fx.tick = function () {
        var cf, ce = bP.timers, cd = 0;
        U = bP.now();
        for (;
            cd < ce.length;
            cd++) {
                cf = ce[cd];
            if (!cf() && ce[cd] === cf) {
                ce.splice(cd--, 1)
            }
        } if (!ce.length) {
            bP.fx.stop()
        } U = undefined
    };
    bP.fx.timer = function (cd) {
        bP.timers.push(cd);
        if (cd()) {
            bP.fx.start()
        } else {
            bP.timers.pop()
        }
    };
    bP.fx.interval = 13;
    bP.fx.start = function () {
        if (!al) {
            al = bc.setInterval(bP.fx.tick, bP.fx.interval)
        }
    };
    bP.fx.stop = function () {
        bc.clearInterval(al);
        al = null
    };
    bP.fx.speeds = { slow: 600, fast: 200, _default: 400 };
    bP.fn.delay = function (ce, cd) {
        ce = bP.fx ? bP.fx.speeds[ce] || ce : ce;
        cd = cd || "fx";
        return this.queue(cd, function (cg, cf) {
            var ch = bc.setTimeout(cg, ce);
            cf.stop = function () {
                bc.clearTimeout(ch)
            }
        })
    };
    (function () {
        var ce, cf = m.createElement("input"), ch = m.createElement("div"), cd = m.createElement("select"), cg = cd.appendChild(m.createElement("option"));
        ch = m.createElement("div");
        ch.setAttribute("className", "t");
        ch.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
        ce = ch.getElementsByTagName("a")[0];
        cf.setAttribute("type", "checkbox");
        ch.appendChild(cf);
        ce = ch.getElementsByTagName("a")[0];
        ce.style.cssText = "top:1px";
        F.getSetAttribute = ch.className !== "t";
        F.style = /top/.test(ce.getAttribute("style"));
        F.hrefNormalized = ce.getAttribute("href") === "/a";
        F.checkOn = !!cf.value;
        F.optSelected = cg.selected;
        F.enctype = !!m.createElement("form").enctype;
        cd.disabled = true;
        F.optDisabled = !cg.disabled;
        cf = m.createElement("input");
        cf.setAttribute("value", "");
        F.input = cf.getAttribute("value") === "";
        cf.value = "t";
        cf.setAttribute("type", "radio");
        F.radioValue = cf.value === "t"
    })();
    var at = /\r/g, a4 = /[\x20\t\r\n\f]+/g;
    bP.fn.extend({
        val: function (cg) {
            var cd, ce, ch, cf = this[0];
            if (!arguments.length) {
                if (cf) {
                    cd = bP.valHooks[cf.type] || bP.valHooks[cf.nodeName.toLowerCase()];
                    if (cd && "get" in cd && (ce = cd.get(cf, "value")) !== undefined) {
                        return ce
                    } ce = cf.value;
                    return typeof ce === "string" ? ce.replace(at, "") : ce == null ? "" : ce
                } return
            } ch = bP.isFunction(cg);
            return this.each(function (ci) {
                var cj;
                if (this.nodeType !== 1) {
                    return
                } if (ch) {
                    cj = cg.call(this, ci, bP(this).val())
                } else {
                    cj = cg
                } if (cj == null) {
                    cj = ""
                } else {
                    if (typeof cj === "number") {
                        cj += ""
                    } else {
                        if (bP.isArray(cj)) {
                            cj = bP.map(cj, function (ck) {
                                return ck == null ? "" : ck + ""
                            })
                        }
                    }
                } cd = bP.valHooks[this.type] || bP.valHooks[this.nodeName.toLowerCase()];
                if (!cd || !("set" in cd) || cd.set(this, cj, "value") === undefined) {
                    this.value = cj
                }
            })
        }
    });
    bP.extend({
        valHooks: {
            option: {
                get: function (cd) {
                    var ce = bP.find.attr(cd, "value");
                    return ce != null ? ce : bP.trim(bP.text(cd)).replace(a4, " ")
                }
            }, select: {
                get: function (cd) {
                    var cj, cf, cl = cd.options, ch = cd.selectedIndex, cg = cd.type === "select-one" || ch < 0, ck = cg ? null : [], ci = cg ? ch + 1 : cl.length, ce = ch < 0 ? ci : cg ? ch : 0;
                    for (;
                        ce < ci;
                        ce++) {
                            cf = cl[ce];
                        if ((cf.selected || ce === ch) && (F.optDisabled ? !cf.disabled : cf.getAttribute("disabled") === null) && (!cf.parentNode.disabled || !bP.nodeName(cf.parentNode, "optgroup"))) {
                            cj = bP(cf).val();
                            if (cg) {
                                return cj
                            } ck.push(cj)
                        }
                    } return ck
                }, set: function (ci, cj) {
                    var ck, ch, cf = ci.options, cd = bP.makeArray(cj), cg = cf.length;
                    while (cg--) {
                        ch = cf[cg];
                        if (bP.inArray(bP.valHooks.option.get(ch), cd) > -1) {
                            try {
                                ch.selected = ck = true
                            } catch (ce) {
                                ch.scrollHeight
                            }
                        } else {
                            ch.selected = false
                        }
                    } if (!ck) {
                        ci.selectedIndex = -1
                    } return cf
                }
            }
        }
    });
    bP.each(["radio", "checkbox"], function () {
        bP.valHooks[this] = {
            set: function (cd, ce) {
                if (bP.isArray(ce)) {
                    return (cd.checked = bP.inArray(bP(cd).val(), ce) > -1)
                }
            }
        };
        if (!F.checkOn) {
            bP.valHooks[this].get = function (cd) {
                return cd.getAttribute("value") === null ? "on" : cd.value
            }
        }
    });
    var bh, ca, bU = bP.expr.attrHandle, ay = /^(?:checked|selected)$/i, bT = F.getSetAttribute, bM = F.input;
    bP.fn.extend({
        attr: function (cd, ce) {
            return aJ(this, bP.attr, cd, ce, arguments.length > 1)
        }, removeAttr: function (cd) {
            return this.each(function () {
                bP.removeAttr(this, cd)
            })
        }
    });
    bP.extend({
        attr: function (ch, cg, ci) {
            var cf, cd, ce = ch.nodeType;
            if (ce === 3 || ce === 8 || ce === 2) {
                return
            } if (typeof ch.getAttribute === "undefined") {
                return bP.prop(ch, cg, ci)
            } if (ce !== 1 || !bP.isXMLDoc(ch)) {
                cg = cg.toLowerCase();
                cd = bP.attrHooks[cg] || (bP.expr.match.bool.test(cg) ? ca : bh)
            } if (ci !== undefined) {
                if (ci === null) {
                    bP.removeAttr(ch, cg);
                    return
                } if (cd && "set" in cd && (cf = cd.set(ch, ci, cg)) !== undefined) {
                    return cf
                } ch.setAttribute(cg, ci + "");
                return ci
            } if (cd && "get" in cd && (cf = cd.get(ch, cg)) !== null) {
                return cf
            } cf = bP.find.attr(ch, cg);
            return cf == null ? undefined : cf
        }, attrHooks: {
            type: {
                set: function (cd, ce) {
                    if (!F.radioValue && ce === "radio" && bP.nodeName(cd, "input")) {
                        var cf = cd.value;
                        cd.setAttribute("type", ce);
                        if (cf) {
                            cd.value = cf
                        } return ce
                    }
                }
            }
        }, removeAttr: function (cf, ch) {
            var cd, cg, ce = 0, ci = ch && ch.match(aM);
            if (ci && cf.nodeType === 1) {
                while ((cd = ci[ce++])) {
                    cg = bP.propFix[cd] || cd;
                    if (bP.expr.match.bool.test(cd)) {
                        if (bM && bT || !ay.test(cd)) {
                            cf[cg] = false
                        } else {
                            cf[bP.camelCase("default-" + cd)] = cf[cg] = false
                        }
                    } else {
                        bP.attr(cf, cd, "")
                    } cf.removeAttribute(bT ? cd : cg)
                }
            }
        }
    });
    ca = {
        set: function (ce, cf, cd) {
            if (cf === false) {
                bP.removeAttr(ce, cd)
            } else {
                if (bM && bT || !ay.test(cd)) {
                    ce.setAttribute(!bT && bP.propFix[cd] || cd, cd)
                } else {
                    ce[bP.camelCase("default-" + cd)] = ce[cd] = true
                }
            } return cd
        }
    };
    bP.each(bP.expr.match.bool.source.match(/\w+/g), function (cf, ce) {
        var cd = bU[ce] || bP.find.attr;
        if (bM && bT || !ay.test(ce)) {
            bU[ce] = function (ci, ch, ck) {
                var cg, cj;
                if (!ck) {
                    cj = bU[ch];
                    bU[ch] = cg;
                    cg = cd(ci, ch, ck) != null ? ch.toLowerCase() : null;
                    bU[ch] = cj
                } return cg
            }
        } else {
            bU[ce] = function (ch, cg, ci) {
                if (!ci) {
                    return ch[bP.camelCase("default-" + cg)] ? cg.toLowerCase() : null
                }
            }
        }
    });
    if (!bM || !bT) {
        bP.attrHooks.value = {
            set: function (ce, cf, cd) {
                if (bP.nodeName(ce, "input")) {
                    ce.defaultValue = cf
                } else {
                    return bh && bh.set(ce, cf, cd)
                }
            }
        }
    } if (!bT) {
        bh = {
            set: function (cf, cg, ce) {
                var cd = cf.getAttributeNode(ce);
                if (!cd) {
                    cf.setAttributeNode((cd = cf.ownerDocument.createAttribute(ce)))
                } cd.value = cg += "";
                if (ce === "value" || cg === cf.getAttribute(ce)) {
                    return cg
                }
            }
        };
        bU.id = bU.name = bU.coords = function (cf, ce, cg) {
            var cd;
            if (!cg) {
                return (cd = cf.getAttributeNode(ce)) && cd.value !== "" ? cd.value : null
            }
        };
        bP.valHooks.button = {
            get: function (cf, ce) {
                var cd = cf.getAttributeNode(ce);
                if (cd && cd.specified) {
                    return cd.value
                }
            }, set: bh.set
        };
        bP.attrHooks.contenteditable = {
            set: function (ce, cf, cd) {
                bh.set(ce, cf === "" ? false : cf, cd)
            }
        };
        bP.each(["width", "height"], function (ce, cd) {
            bP.attrHooks[cd] = {
                set: function (cf, cg) {
                    if (cg === "") {
                        cf.setAttribute(cd, "auto");
                        return cg
                    }
                }
            }
        })
    } if (!F.style) {
        bP.attrHooks.style = {
            get: function (cd) {
                return cd.style.cssText || undefined
            }, set: function (cd, ce) {
                return (cd.style.cssText = ce + "")
            }
        }
    } var aP = /^(?:input|select|textarea|button|object)$/i, H = /^(?:a|area)$/i;
    bP.fn.extend({
        prop: function (cd, ce) {
            return aJ(this, bP.prop, cd, ce, arguments.length > 1)
        }, removeProp: function (cd) {
            cd = bP.propFix[cd] || cd;
            return this.each(function () {
                try {
                    this[cd] = undefined;
                    delete this[cd]
                } catch (ce) { }
            })
        }
    });
    bP.extend({
        prop: function (ch, cg, ci) {
            var cf, cd, ce = ch.nodeType;
            if (ce === 3 || ce === 8 || ce === 2) {
                return
            } if (ce !== 1 || !bP.isXMLDoc(ch)) {
                cg = bP.propFix[cg] || cg;
                cd = bP.propHooks[cg]
            } if (ci !== undefined) {
                if (cd && "set" in cd && (cf = cd.set(ch, ci, cg)) !== undefined) {
                    return cf
                } return (ch[cg] = ci)
            } if (cd && "get" in cd && (cf = cd.get(ch, cg)) !== null) {
                return cf
            } return ch[cg]
        }, propHooks: {
            tabIndex: {
                get: function (ce) {
                    var cd = bP.find.attr(ce, "tabindex");
                    return cd ? parseInt(cd, 10) : aP.test(ce.nodeName) || H.test(ce.nodeName) && ce.href ? 0 : -1
                }
            }
        }, propFix: { "for": "htmlFor", "class": "className" }
    });
    if (!F.hrefNormalized) {
        bP.each(["href", "src"], function (ce, cd) {
            bP.propHooks[cd] = {
                get: function (cf) {
                    return cf.getAttribute(cd, 4)
                }
            }
        })
    } if (!F.optSelected) {
        bP.propHooks.selected = {
            get: function (ce) {
                var cd = ce.parentNode;
                if (cd) {
                    cd.selectedIndex;
                    if (cd.parentNode) {
                        cd.parentNode.selectedIndex
                    }
                } return null
            }, set: function (ce) {
                var cd = ce.parentNode;
                if (cd) {
                    cd.selectedIndex;
                    if (cd.parentNode) {
                        cd.parentNode.selectedIndex
                    }
                }
            }
        }
    } bP.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
        bP.propFix[this.toLowerCase()] = this
    });
    if (!F.enctype) {
        bP.propFix.enctype = "encoding"
    } var bR = /[\t\r\n\f]/g;
    function D(cd) {
        return bP.attr(cd, "class") || ""
    } bP.fn.extend({
        addClass: function (ck) {
            var cf, ce, cl, cg, cj, ch, cd, ci = 0;
            if (bP.isFunction(ck)) {
                return this.each(function (cm) {
                    bP(this).addClass(ck.call(this, cm, D(this)))
                })
            } if (typeof ck === "string" && ck) {
                cf = ck.match(aM) || [];
                while ((ce = this[ci++])) {
                    cg = D(ce);
                    cl = ce.nodeType === 1 && (" " + cg + " ").replace(bR, " ");
                    if (cl) {
                        ch = 0;
                        while ((cj = cf[ch++])) {
                            if (cl.indexOf(" " + cj + " ") < 0) {
                                cl += cj + " "
                            }
                        } cd = bP.trim(cl);
                        if (cg !== cd) {
                            bP.attr(ce, "class", cd)
                        }
                    }
                }
            } return this
        }, removeClass: function (ck) {
            var cf, ce, cl, cg, cj, ch, cd, ci = 0;
            if (bP.isFunction(ck)) {
                return this.each(function (cm) {
                    bP(this).removeClass(ck.call(this, cm, D(this)))
                })
            } if (!arguments.length) {
                return this.attr("class", "")
            } if (typeof ck === "string" && ck) {
                cf = ck.match(aM) || [];
                while ((ce = this[ci++])) {
                    cg = D(ce);
                    cl = ce.nodeType === 1 && (" " + cg + " ").replace(bR, " ");
                    if (cl) {
                        ch = 0;
                        while ((cj = cf[ch++])) {
                            while (cl.indexOf(" " + cj + " ") > -1) {
                                cl = cl.replace(" " + cj + " ", " ")
                            }
                        } cd = bP.trim(cl);
                        if (cg !== cd) {
                            bP.attr(ce, "class", cd)
                        }
                    }
                }
            } return this
        }, toggleClass: function (cf, cd) {
            var ce = typeof cf;
            if (typeof cd === "boolean" && ce === "string") {
                return cd ? this.addClass(cf) : this.removeClass(cf)
            } if (bP.isFunction(cf)) {
                return this.each(function (cg) {
                    bP(this).toggleClass(cf.call(this, cg, D(this), cd), cd)
                })
            } return this.each(function () {
                var ci, ch, cg, cj;
                if (ce === "string") {
                    ch = 0;
                    cg = bP(this);
                    cj = cf.match(aM) || [];
                    while ((ci = cj[ch++])) {
                        if (cg.hasClass(ci)) {
                            cg.removeClass(ci)
                        } else {
                            cg.addClass(ci)
                        }
                    }
                } else {
                    if (cf === undefined || ce === "boolean") {
                        ci = D(this);
                        if (ci) {
                            bP._data(this, "__className__", ci)
                        } bP.attr(this, "class", ci || cf === false ? "" : bP._data(this, "__className__") || "")
                    }
                }
            })
        }, hasClass: function (cd) {
            var cf, cg, ce = 0;
            cf = " " + cd + " ";
            while ((cg = this[ce++])) {
                if (cg.nodeType === 1 && (" " + D(cg) + " ").replace(bR, " ").indexOf(cf) > -1) {
                    return true
                }
            } return false
        }
    });
    bP.each(("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu").split(" "), function (ce, cd) {
        bP.fn[cd] = function (cg, cf) {
            return arguments.length > 0 ? this.on(cd, null, cg, cf) : this.trigger(cd)
        }
    });
    bP.fn.extend({
        hover: function (cd, ce) {
            return this.mouseenter(cd).mouseleave(ce || cd)
        }
    });
    var aV = bc.location;
    var bw = bP.now();
    var bW = (/\?/);
    var a9 = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
    bP.parseJSON = function (cd) {
        if (bc.JSON && bc.JSON.parse) {
            return bc.JSON.parse(cd + "")
        } var cg, cf = null, ce = bP.trim(cd + "");
        return ce && !bP.trim(ce.replace(a9, function (cj, ch, ci, ck) {
            if (cg && ch) {
                cf = 0
            } if (cf === 0) {
                return cj
            } cg = ci || ch;
            cf += !ck - !ci;
            return ""
        })) ? (Function("return " + ce))() : bP.error("Invalid JSON: " + cd)
    };
    bP.parseXML = function (cf) {
        var cd, ce;
        if (!cf || typeof cf !== "string") {
            return null
        } try {
            if (bc.DOMParser) {
                ce = new bc.DOMParser();
                cd = ce.parseFromString(cf, "text/xml")
            } else {
                cd = new bc.ActiveXObject("Microsoft.XMLDOM");
                cd.async = "false";
                cd.loadXML(cf)
            }
        } catch (cg) {
            cd = undefined
        } if (!cd || !cd.documentElement || cd.getElementsByTagName("parsererror").length) {
            bP.error("Invalid XML: " + cf)
        } return cd
    };
    var ax = /#.*$/, Z = /([?&])_=[^&]*/, ao = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, E = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, q = /^(?:GET|HEAD)$/, aQ = /^\/\//, a1 = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/, t = {}, bg = {}, a5 = "*/".concat("*"), ai = aV.href, cb = a1.exec(ai.toLowerCase()) || [];
    function bQ(cd) {
        return function (ch, ci) {
            if (typeof ch !== "string") {
                ci = ch;
                ch = "*"
            } var ce, cf = 0, cg = ch.toLowerCase().match(aM) || [];
            if (bP.isFunction(ci)) {
                while ((ce = cg[cf++])) {
                    if (ce.charAt(0) === "+") {
                        ce = ce.slice(1) || "*";
                        (cd[ce] = cd[ce] || []).unshift(ci)
                    } else {
                        (cd[ce] = cd[ce] || []).push(ci)
                    }
                }
            }
        }
    } function p(cd, cf, cj, cg) {
        var ce = {}, ch = (cd === bg);
        function ci(ck) {
            var cl;
            ce[ck] = true;
            bP.each(cd[ck] || [], function (cn, cm) {
                var co = cm(cf, cj, cg);
                if (typeof co === "string" && !ch && !ce[co]) {
                    cf.dataTypes.unshift(co);
                    ci(co);
                    return false
                } else {
                    if (ch) {
                        return !(cl = co)
                    }
                }
            });
            return cl
        } return ci(cf.dataTypes[0]) || !ce["*"] && ci("*")
    } function s(cf, cg) {
        var cd, ce, ch = bP.ajaxSettings.flatOptions || {};
        for (ce in cg) {
            if (cg[ce] !== undefined) {
                (ch[ce] ? cf : (cd || (cd = {})))[ce] = cg[ce]
            }
        } if (cd) {
            bP.extend(true, cf, cd)
        } return cf
    } function f(cl, ck, ch) {
        var cd, cg, cf, ci, ce = cl.contents, cj = cl.dataTypes;
        while (cj[0] === "*") {
            cj.shift();
            if (cg === undefined) {
                cg = cl.mimeType || ck.getResponseHeader("Content-Type")
            }
        } if (cg) {
            for (ci in ce) {
                if (ce[ci] && ce[ci].test(cg)) {
                    cj.unshift(ci);
                    break
                }
            }
        } if (cj[0] in ch) {
            cf = cj[0]
        } else {
            for (ci in ch) {
                if (!cj[0] || cl.converters[ci + " " + cj[0]]) {
                    cf = ci;
                    break
                } if (!cd) {
                    cd = ci
                }
            } cf = cf || cd
        } if (cf) {
            if (cf !== cj[0]) {
                cj.unshift(cf)
            } return ch[cf]
        }
    } function an(co, cg, cl, ce) {
        var cd, cj, cm, ch, cf, cn = {}, ck = co.dataTypes.slice();
        if (ck[1]) {
            for (cm in co.converters) {
                cn[cm.toLowerCase()] = co.converters[cm]
            }
        } cj = ck.shift();
        while (cj) {
            if (co.responseFields[cj]) {
                cl[co.responseFields[cj]] = cg
            } if (!cf && ce && co.dataFilter) {
                cg = co.dataFilter(cg, co.dataType)
            } cf = cj;
            cj = ck.shift();
            if (cj) {
                if (cj === "*") {
                    cj = cf
                } else {
                    if (cf !== "*" && cf !== cj) {
                        cm = cn[cf + " " + cj] || cn["* " + cj];
                        if (!cm) {
                            for (cd in cn) {
                                ch = cd.split(" ");
                                if (ch[1] === cj) {
                                    cm = cn[cf + " " + ch[0]] || cn["* " + ch[0]];
                                    if (cm) {
                                        if (cm === true) {
                                            cm = cn[cd]
                                        } else {
                                            if (cn[cd] !== true) {
                                                cj = ch[0];
                                                ck.unshift(ch[1])
                                            }
                                        } break
                                    }
                                }
                            }
                        } if (cm !== true) {
                            if (cm && co["throws"]) {
                                cg = cm(cg)
                            } else {
                                try {
                                    cg = cm(cg)
                                } catch (ci) {
                                    return { state: "parsererror", error: cm ? ci : "No conversion from " + cf + " to " + cj }
                                }
                            }
                        }
                    }
                }
            }
        } return { state: "success", data: cg }
    } bP.extend({
        active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: ai, type: "GET", isLocal: E.test(cb[1]), global: true, processData: true, async: true, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": a5, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": true, "text json": bP.parseJSON, "text xml": bP.parseXML }, flatOptions: { url: true, context: true } }, ajaxSetup: function (ce, cd) {
            return cd ? s(s(ce, bP.ajaxSettings), cd) : s(bP.ajaxSettings, ce)
        }, ajaxPrefilter: bQ(t), ajaxTransport: bQ(bg), ajax: function (ch, ce) {
            if (typeof ch === "object") {
                ce = ch;
                ch = undefined
            } ce = ce || {};
            var cq, cs, ci, cx, cm, cd, ct, cf, cl = bP.ajaxSetup({}, ce), cz = cl.context || cl, co = cl.context && (cz.nodeType || cz.jquery) ? bP(cz) : bP.event, cy = bP.Deferred(), cv = bP.Callbacks("once memory"), cj = cl.statusCode || {}, cp = {}, cw = {}, cg = 0, ck = "canceled", cr = {
                readyState: 0, getResponseHeader: function (cB) {
                    var cA;
                    if (cg === 2) {
                        if (!cf) {
                            cf = {};
                            while ((cA = ao.exec(cx))) {
                                cf[cA[1].toLowerCase()] = cA[2]
                            }
                        } cA = cf[cB.toLowerCase()]
                    } return cA == null ? null : cA
                }, getAllResponseHeaders: function () {
                    return cg === 2 ? cx : null
                }, setRequestHeader: function (cB, cC) {
                    var cA = cB.toLowerCase();
                    if (!cg) {
                        cB = cw[cA] = cw[cA] || cB;
                        cp[cB] = cC
                    } return this
                }, overrideMimeType: function (cA) {
                    if (!cg) {
                        cl.mimeType = cA
                    } return this
                }, statusCode: function (cB) {
                    var cA;
                    if (cB) {
                        if (cg < 2) {
                            for (cA in cB) {
                                cj[cA] = [cj[cA], cB[cA]]
                            }
                        } else {
                            cr.always(cB[cr.status])
                        }
                    } return this
                }, abort: function (cB) {
                    var cA = cB || ck;
                    if (ct) {
                        ct.abort(cA)
                    } cn(0, cA);
                    return this
                }
            };
            cy.promise(cr).complete = cv.add;
            cr.success = cr.done;
            cr.error = cr.fail;
            cl.url = ((ch || cl.url || ai) + "").replace(ax, "").replace(aQ, cb[1] + "//");
            cl.type = ce.method || ce.type || cl.method || cl.type;
            cl.dataTypes = bP.trim(cl.dataType || "*").toLowerCase().match(aM) || [""];
            if (cl.crossDomain == null) {
                cq = a1.exec(cl.url.toLowerCase());
                cl.crossDomain = !!(cq && (cq[1] !== cb[1] || cq[2] !== cb[2] || (cq[3] || (cq[1] === "http:" ? "80" : "443")) !== (cb[3] || (cb[1] === "http:" ? "80" : "443"))))
            } if (cl.data && cl.processData && typeof cl.data !== "string") {
                cl.data = bP.param(cl.data, cl.traditional)
            } p(t, cl, ce, cr);
            if (cg === 2) {
                return cr
            } cd = bP.event && cl.global;
            if (cd && bP.active++ === 0) {
                bP.event.trigger("ajaxStart")
            } cl.type = cl.type.toUpperCase();
            cl.hasContent = !q.test(cl.type);
            ci = cl.url;
            if (!cl.hasContent) {
                if (cl.data) {
                    ci = (cl.url += (bW.test(ci) ? "&" : "?") + cl.data);
                    delete cl.data
                } if (cl.cache === false) {
                    cl.url = Z.test(ci) ? ci.replace(Z, "$1_=" + bw++) : ci + (bW.test(ci) ? "&" : "?") + "_=" + bw++
                }
            } if (cl.ifModified) {
                if (bP.lastModified[ci]) {
                    cr.setRequestHeader("If-Modified-Since", bP.lastModified[ci])
                } if (bP.etag[ci]) {
                    cr.setRequestHeader("If-None-Match", bP.etag[ci])
                }
            } if (cl.data && cl.hasContent && cl.contentType !== false || ce.contentType) {
                cr.setRequestHeader("Content-Type", cl.contentType)
            } cr.setRequestHeader("Accept", cl.dataTypes[0] && cl.accepts[cl.dataTypes[0]] ? cl.accepts[cl.dataTypes[0]] + (cl.dataTypes[0] !== "*" ? ", " + a5 + "; q=0.01" : "") : cl.accepts["*"]);
            for (cs in cl.headers) {
                cr.setRequestHeader(cs, cl.headers[cs])
            } if (cl.beforeSend && (cl.beforeSend.call(cz, cr, cl) === false || cg === 2)) {
                return cr.abort()
            } ck = "abort";
            for (cs in { success: 1, error: 1, complete: 1 }) {
                cr[cs](cl[cs])
            } ct = p(bg, cl, ce, cr);
            if (!ct) {
                cn(-1, "No Transport")
            } else {
                cr.readyState = 1;
                if (cd) {
                    co.trigger("ajaxSend", [cr, cl])
                } if (cg === 2) {
                    return cr
                } if (cl.async && cl.timeout > 0) {
                    cm = bc.setTimeout(function () {
                        cr.abort("timeout")
                    }, cl.timeout)
                } try {
                    cg = 1;
                    ct.send(cp, cn)
                } catch (cu) {
                    if (cg < 2) {
                        cn(-1, cu)
                    } else {
                        throw cu
                    }
                }
            } function cn(cF, cB, cG, cD) {
                var cA, cJ, cH, cE, cI, cC = cB;
                if (cg === 2) {
                    return
                } cg = 2;
                if (cm) {
                    bc.clearTimeout(cm)
                } ct = undefined;
                cx = cD || "";
                cr.readyState = cF > 0 ? 4 : 0;
                cA = cF >= 200 && cF < 300 || cF === 304;
                if (cG) {
                    cE = f(cl, cr, cG)
                } cE = an(cl, cE, cr, cA);
                if (cA) {
                    if (cl.ifModified) {
                        cI = cr.getResponseHeader("Last-Modified");
                        if (cI) {
                            bP.lastModified[ci] = cI
                        } cI = cr.getResponseHeader("etag");
                        if (cI) {
                            bP.etag[ci] = cI
                        }
                    } if (cF === 204 || cl.type === "HEAD") {
                        cC = "nocontent"
                    } else {
                        if (cF === 304) {
                            cC = "notmodified"
                        } else {
                            cC = cE.state;
                            cJ = cE.data;
                            cH = cE.error;
                            cA = !cH
                        }
                    }
                } else {
                    cH = cC;
                    if (cF || !cC) {
                        cC = "error";
                        if (cF < 0) {
                            cF = 0
                        }
                    }
                } cr.status = cF;
                cr.statusText = (cB || cC) + "";
                if (cA) {
                    cy.resolveWith(cz, [cJ, cC, cr])
                } else {
                    cy.rejectWith(cz, [cr, cC, cH])
                } cr.statusCode(cj);
                cj = undefined;
                if (cd) {
                    co.trigger(cA ? "ajaxSuccess" : "ajaxError", [cr, cl, cA ? cJ : cH])
                } cv.fireWith(cz, [cr, cC]);
                if (cd) {
                    co.trigger("ajaxComplete", [cr, cl]);
                    if (!(--bP.active)) {
                        bP.event.trigger("ajaxStop")
                    }
                }
            } return cr
        }, getJSON: function (cd, ce, cf) {
            return bP.get(cd, ce, cf, "json")
        }, getScript: function (cd, ce) {
            return bP.get(cd, undefined, ce, "script")
        }
    });
    bP.each(["get", "post"], function (cd, ce) {
        bP[ce] = function (cf, ch, ci, cg) {
            if (bP.isFunction(ch)) {
                cg = cg || ci;
                ci = ch;
                ch = undefined
            } return bP.ajax(bP.extend({ url: cf, type: ce, dataType: cg, data: ch, success: ci }, bP.isPlainObject(cf) && cf))
        }
    });
    bP._evalUrl = function (cd) {
        return bP.ajax({ url: cd, type: "GET", dataType: "script", cache: true, async: false, global: false, "throws": true })
    };
    bP.fn.extend({
        wrapAll: function (cd) {
            if (bP.isFunction(cd)) {
                return this.each(function (cf) {
                    bP(this).wrapAll(cd.call(this, cf))
                })
            } if (this[0]) {
                var ce = bP(cd, this[0].ownerDocument).eq(0).clone(true);
                if (this[0].parentNode) {
                    ce.insertBefore(this[0])
                } ce.map(function () {
                    var cf = this;
                    while (cf.firstChild && cf.firstChild.nodeType === 1) {
                        cf = cf.firstChild
                    } return cf
                }).append(this)
            } return this
        }, wrapInner: function (cd) {
            if (bP.isFunction(cd)) {
                return this.each(function (ce) {
                    bP(this).wrapInner(cd.call(this, ce))
                })
            } return this.each(function () {
                var ce = bP(this), cf = ce.contents();
                if (cf.length) {
                    cf.wrapAll(cd)
                } else {
                    ce.append(cd)
                }
            })
        }, wrap: function (cd) {
            var ce = bP.isFunction(cd);
            return this.each(function (cf) {
                bP(this).wrapAll(ce ? cd.call(this, cf) : cd)
            })
        }, unwrap: function () {
            return this.parent().each(function () {
                if (!bP.nodeName(this, "body")) {
                    bP(this).replaceWith(this.childNodes)
                }
            }).end()
        }
    });
    function Q(cd) {
        return cd.style && cd.style.display || bP.css(cd, "display")
    } function N(cd) {
        if (!bP.contains(cd.ownerDocument || m, cd)) {
            return true
        } while (cd && cd.nodeType === 1) {
            if (Q(cd) === "none" || cd.type === "hidden") {
                return true
            } cd = cd.parentNode
        } return false
    } bP.expr.filters.hidden = function (cd) {
        return F.reliableHiddenOffsets() ? (cd.offsetWidth <= 0 && cd.offsetHeight <= 0 && !cd.getClientRects().length) : N(cd)
    };
    bP.expr.filters.visible = function (cd) {
        return !bP.expr.filters.hidden(cd)
    };
    var bD = /%20/g, aZ = /\[\]$/, ae = /\r?\n/g, b = /^(?:submit|button|image|reset|file)$/i, aC = /^(?:input|select|textarea|keygen)/i;
    function h(cf, ch, ce, cg) {
        var cd;
        if (bP.isArray(ch)) {
            bP.each(ch, function (cj, ci) {
                if (ce || aZ.test(cf)) {
                    cg(cf, ci)
                } else {
                    h(cf + "[" + (typeof ci === "object" && ci != null ? cj : "") + "]", ci, ce, cg)
                }
            })
        } else {
            if (!ce && bP.type(ch) === "object") {
                for (cd in ch) {
                    h(cf + "[" + cd + "]", ch[cd], ce, cg)
                }
            } else {
                cg(cf, ch)
            }
        }
    } bP.param = function (cd, cf) {
        var cg, ce = [], ch = function (ci, cj) {
            cj = bP.isFunction(cj) ? cj() : (cj == null ? "" : cj);
            ce[ce.length] = encodeURIComponent(ci) + "=" + encodeURIComponent(cj)
        };
        if (cf === undefined) {
            cf = bP.ajaxSettings && bP.ajaxSettings.traditional
        } if (bP.isArray(cd) || (cd.jquery && !bP.isPlainObject(cd))) {
            bP.each(cd, function () {
                ch(this.name, this.value)
            })
        } else {
            for (cg in cd) {
                h(cg, cd[cg], cf, ch)
            }
        } return ce.join("&").replace(bD, "+")
    };
    bP.fn.extend({
        serialize: function () {
            return bP.param(this.serializeArray())
        }, serializeArray: function () {
            return this.map(function () {
                var cd = bP.prop(this, "elements");
                return cd ? bP.makeArray(cd) : this
            }).filter(function () {
                var cd = this.type;
                return this.name && !bP(this).is(":disabled") && aC.test(this.nodeName) && !b.test(cd) && (this.checked || !aS.test(cd))
            }).map(function (cd, ce) {
                var cf = bP(this).val();
                return cf == null ? null : bP.isArray(cf) ? bP.map(cf, function (cg) {
                    return { name: ce.name, value: cg.replace(ae, "\r\n") }
                }) : { name: ce.name, value: cf.replace(ae, "\r\n") }
            }).get()
        }
    });
    bP.ajaxSettings.xhr = bc.ActiveXObject !== undefined ? function () {
        if (this.isLocal) {
            return bn()
        } if (m.documentMode > 8) {
            return bL()
        } return /^(get|post|head|put|delete|options)$/i.test(this.type) && bL() || bn()
    } : bL;
    var aI = 0, aq = {}, aG = bP.ajaxSettings.xhr();
    if (bc.attachEvent) {
        bc.attachEvent("onunload", function () {
            for (var cd in aq) {
                aq[cd](undefined, true)
            }
        })
    } F.cors = !!aG && ("withCredentials" in aG);
    aG = F.ajax = !!aG;
    if (aG) {
        bP.ajaxTransport(function (cd) {
            if (!cd.crossDomain || F.cors) {
                var ce;
                return {
                    send: function (ci, cf) {
                        var cg, ch = cd.xhr(), cj = ++aI;
                        ch.open(cd.type, cd.url, cd.async, cd.username, cd.password);
                        if (cd.xhrFields) {
                            for (cg in cd.xhrFields) {
                                ch[cg] = cd.xhrFields[cg]
                            }
                        } if (cd.mimeType && ch.overrideMimeType) {
                            ch.overrideMimeType(cd.mimeType)
                        } if (!cd.crossDomain && !ci["X-Requested-With"]) {
                            ci["X-Requested-With"] = "XMLHttpRequest"
                        } for (cg in ci) {
                            if (ci[cg] !== undefined) {
                                ch.setRequestHeader(cg, ci[cg] + "")
                            }
                        } ch.send((cd.hasContent && cd.data) || null);
                        ce = function (cm, cl) {
                            var ck, cp, cn;
                            if (ce && (cl || ch.readyState === 4)) {
                                delete aq[cj];
                                ce = undefined;
                                ch.onreadystatechange = bP.noop;
                                if (cl) {
                                    if (ch.readyState !== 4) {
                                        ch.abort()
                                    }
                                } else {
                                    cn = {};
                                    ck = ch.status;
                                    if (typeof ch.responseText === "string") {
                                        cn.text = ch.responseText
                                    } try {
                                        cp = ch.statusText
                                    } catch (co) {
                                        cp = ""
                                    } if (!ck && cd.isLocal && !cd.crossDomain) {
                                        ck = cn.text ? 200 : 404
                                    } else {
                                        if (ck === 1223) {
                                            ck = 204
                                        }
                                    }
                                }
                            } if (cn) {
                                cf(ck, cp, cn, ch.getAllResponseHeaders())
                            }
                        };
                        if (!cd.async) {
                            ce()
                        } else {
                            if (ch.readyState === 4) {
                                bc.setTimeout(ce)
                            } else {
                                ch.onreadystatechange = aq[cj] = ce
                            }
                        }
                    }, abort: function () {
                        if (ce) {
                            ce(undefined, true)
                        }
                    }
                }
            }
        })
    } function bL() {
        try {
            return new bc.XMLHttpRequest()
        } catch (cd) { }
    } function bn() {
        try {
            return new bc.ActiveXObject("Microsoft.XMLHTTP")
        } catch (cd) { }
    } bP.ajaxPrefilter(function (cd) {
        if (cd.crossDomain) {
            cd.contents.script = false
        }
    });
    bP.ajaxSetup({
        accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: {
            "text script": function (cd) {
                bP.globalEval(cd);
                return cd
            }
        }
    });
    bP.ajaxPrefilter("script", function (cd) {
        if (cd.cache === undefined) {
            cd.cache = false
        } if (cd.crossDomain) {
            cd.type = "GET";
            cd.global = false
        }
    });
    bP.ajaxTransport("script", function (cf) {
        if (cf.crossDomain) {
            var cd, ce = m.head || bP("head")[0] || m.documentElement;
            return {
                send: function (cg, ch) {
                    cd = m.createElement("script");
                    cd.async = true;
                    if (cf.scriptCharset) {
                        cd.charset = cf.scriptCharset
                    } cd.src = cf.url;
                    cd.onload = cd.onreadystatechange = function (cj, ci) {
                        if (ci || !cd.readyState || /loaded|complete/.test(cd.readyState)) {
                            cd.onload = cd.onreadystatechange = null;
                            if (cd.parentNode) {
                                cd.parentNode.removeChild(cd)
                            } cd = null;
                            if (!ci) {
                                ch(200, "success")
                            }
                        }
                    };
                    ce.insertBefore(cd, ce.firstChild)
                }, abort: function () {
                    if (cd) {
                        cd.onload(undefined, true)
                    }
                }
            }
        }
    });
    var bz = [], bf = /(=)\?(?=&|$)|\?\?/;
    bP.ajaxSetup({
        jsonp: "callback", jsonpCallback: function () {
            var cd = bz.pop() || (bP.expando + "_" + (bw++));
            this[cd] = true;
            return cd
        }
    });
    bP.ajaxPrefilter("json jsonp", function (cg, cd, ch) {
        var cj, ce, cf, ci = cg.jsonp !== false && (bf.test(cg.url) ? "url" : typeof cg.data === "string" && (cg.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && bf.test(cg.data) && "data");
        if (ci || cg.dataTypes[0] === "jsonp") {
            cj = cg.jsonpCallback = bP.isFunction(cg.jsonpCallback) ? cg.jsonpCallback() : cg.jsonpCallback;
            if (ci) {
                cg[ci] = cg[ci].replace(bf, "$1" + cj)
            } else {
                if (cg.jsonp !== false) {
                    cg.url += (bW.test(cg.url) ? "&" : "?") + cg.jsonp + "=" + cj
                }
            } cg.converters["script json"] = function () {
                if (!cf) {
                    bP.error(cj + " was not called")
                } return cf[0]
            };
            cg.dataTypes[0] = "json";
            ce = bc[cj];
            bc[cj] = function () {
                cf = arguments
            };
            ch.always(function () {
                if (ce === undefined) {
                    bP(bc).removeProp(cj)
                } else {
                    bc[cj] = ce
                } if (cg[cj]) {
                    cg.jsonpCallback = cd.jsonpCallback;
                    bz.push(cj)
                } if (cf && bP.isFunction(ce)) {
                    ce(cf[0])
                } cf = ce = undefined
            });
            return "script"
        }
    });
    bP.parseHTML = function (ch, cf, cg) {
        if (!ch || typeof ch !== "string") {
            return null
        } if (typeof cf === "boolean") {
            cg = cf;
            cf = false
        } cf = cf || m;
        var ce = a.exec(ch), cd = !cg && [];
        if (ce) {
            return [cf.createElement(ce[1])]
        } ce = B([ch], cf, cd);
        if (cd && cd.length) {
            bP(cd).remove()
        } return bP.merge([], ce.childNodes)
    };
    var b9 = bP.fn.load;
    bP.fn.load = function (cg, cj, ck) {
        if (typeof cg !== "string" && b9) {
            return b9.apply(this, arguments)
        } var cd, ch, cf, ce = this, ci = cg.indexOf(" ");
        if (ci > -1) {
            cd = bP.trim(cg.slice(ci, cg.length));
            cg = cg.slice(0, ci)
        } if (bP.isFunction(cj)) {
            ck = cj;
            cj = undefined
        } else {
            if (cj && typeof cj === "object") {
                ch = "POST"
            }
        } if (ce.length > 0) {
            bP.ajax({ url: cg, type: ch || "GET", dataType: "html", data: cj }).done(function (cl) {
                cf = arguments;
                ce.html(cd ? bP("<div>").append(bP.parseHTML(cl)).find(cd) : cl)
            }).always(ck && function (cm, cl) {
                ce.each(function () {
                    ck.apply(this, cf || [cm.responseText, cl, cm])
                })
            })
        } return this
    };
    bP.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (cd, ce) {
        bP.fn[ce] = function (cf) {
            return this.on(ce, cf)
        }
    });
    bP.expr.filters.animated = function (cd) {
        return bP.grep(bP.timers, function (ce) {
            return cd === ce.elem
        }).length
    };
    function by(cd) {
        return bP.isWindow(cd) ? cd : cd.nodeType === 9 ? cd.defaultView || cd.parentWindow : false
    } bP.offset = {
        setOffset: function (cf, cp, cj) {
            var cl, ci, cd, cg, ce, cn, co, ck = bP.css(cf, "position"), ch = bP(cf), cm = {};
            if (ck === "static") {
                cf.style.position = "relative"
            } ce = ch.offset();
            cd = bP.css(cf, "top");
            cn = bP.css(cf, "left");
            co = (ck === "absolute" || ck === "fixed") && bP.inArray("auto", [cd, cn]) > -1;
            if (co) {
                cl = ch.position();
                cg = cl.top;
                ci = cl.left
            } else {
                cg = parseFloat(cd) || 0;
                ci = parseFloat(cn) || 0
            } if (bP.isFunction(cp)) {
                cp = cp.call(cf, cj, bP.extend({}, ce))
            } if (cp.top != null) {
                cm.top = (cp.top - ce.top) + cg
            } if (cp.left != null) {
                cm.left = (cp.left - ce.left) + ci
            } if ("using" in cp) {
                cp.using.call(cf, cm)
            } else {
                ch.css(cm)
            }
        }
    };
    bP.fn.extend({
        offset: function (ce) {
            if (arguments.length) {
                return ce === undefined ? this : this.each(function (cj) {
                    bP.offset.setOffset(this, ce, cj)
                })
            } var cd, ci, cg = { top: 0, left: 0 }, cf = this[0], ch = cf && cf.ownerDocument;
            if (!ch) {
                return
            } cd = ch.documentElement;
            if (!bP.contains(cd, cf)) {
                return cg
            } if (typeof cf.getBoundingClientRect !== "undefined") {
                cg = cf.getBoundingClientRect()
            } ci = by(ch);
            return { top: cg.top + (ci.pageYOffset || cd.scrollTop) - (cd.clientTop || 0), left: cg.left + (ci.pageXOffset || cd.scrollLeft) - (cd.clientLeft || 0) }
        }, position: function () {
            if (!this[0]) {
                return
            } var cf, cg, cd = { top: 0, left: 0 }, ce = this[0];
            if (bP.css(ce, "position") === "fixed") {
                cg = ce.getBoundingClientRect()
            } else {
                cf = this.offsetParent();
                cg = this.offset();
                if (!bP.nodeName(cf[0], "html")) {
                    cd = cf.offset()
                } cd.top += bP.css(cf[0], "borderTopWidth", true);
                cd.left += bP.css(cf[0], "borderLeftWidth", true)
            } return { top: cg.top - cd.top - bP.css(ce, "marginTop", true), left: cg.left - cd.left - bP.css(ce, "marginLeft", true) }
        }, offsetParent: function () {
            return this.map(function () {
                var cd = this.offsetParent;
                while (cd && (!bP.nodeName(cd, "html") && bP.css(cd, "position") === "static")) {
                    cd = cd.offsetParent
                } return cd || b1
            })
        }
    });
    bP.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (cf, ce) {
        var cd = /Y/.test(ce);
        bP.fn[cf] = function (cg) {
            return aJ(this, function (ch, ck, cj) {
                var ci = by(ch);
                if (cj === undefined) {
                    return ci ? (ce in ci) ? ci[ce] : ci.document.documentElement[ck] : ch[ck]
                } if (ci) {
                    ci.scrollTo(!cd ? cj : bP(ci).scrollLeft(), cd ? cj : bP(ci).scrollTop())
                } else {
                    ch[ck] = cj
                }
            }, cf, cg, arguments.length, null)
        }
    });
    bP.each(["top", "left"], function (cd, ce) {
        bP.cssHooks[ce] = be(F.pixelPosition, function (cg, cf) {
            if (cf) {
                cf = I(cg, ce);
                return ag.test(cf) ? bP(cg).position()[ce] + "px" : cf
            }
        })
    });
    bP.each({ Height: "height", Width: "width" }, function (cd, ce) {
        bP.each({ padding: "inner" + cd, content: ce, "": "outer" + cd }, function (cf, cg) {
            bP.fn[cg] = function (ck, cj) {
                var ci = arguments.length && (cf || typeof ck !== "boolean"), ch = cf || (ck === true || cj === true ? "margin" : "border");
                return aJ(this, function (cm, cl, cn) {
                    var co;
                    if (bP.isWindow(cm)) {
                        return cm.document.documentElement["client" + cd]
                    } if (cm.nodeType === 9) {
                        co = cm.documentElement;
                        return Math.max(cm.body["scroll" + cd], co["scroll" + cd], cm.body["offset" + cd], co["offset" + cd], co["client" + cd])
                    } return cn === undefined ? bP.css(cm, cl, ch) : bP.style(cm, cl, cn, ch)
                }, ce, ci ? ck : undefined, ci, null)
            }
        })
    });
    bP.fn.extend({
        bind: function (cd, cf, ce) {
            return this.on(cd, null, cf, ce)
        }, unbind: function (cd, ce) {
            return this.off(cd, null, ce)
        }, delegate: function (cd, ce, cg, cf) {
            return this.on(ce, cd, cg, cf)
        }, undelegate: function (cd, ce, cf) {
            return arguments.length === 1 ? this.off(cd, "**") : this.off(ce, cd || "**", cf)
        }
    });
    bP.fn.size = function () {
        return this.length
    };
    bP.fn.andSelf = bP.fn.addBack;
    if (typeof define === "function" && define.amd) {
        define("jquery", [], function () {
            return bP
        })
    } var br = bc.jQuery, O = bc.$;
    bP.noConflict = function (cd) {
        if (bc.$ === bP) {
            bc.$ = O
        } if (cd && bc.jQuery === bP) {
            bc.jQuery = br
        } return bP
    };
    if (!aD) {
        bc.jQuery = bc.$ = bP
    } return bP
}));
jQuery.uaMatch = function (b) {
    b = b.toLowerCase();
    var a = /(chrome)[ \/]([\w.]+)/.exec(b) || /(webkit)[ \/]([\w.]+)/.exec(b) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(b) || /(msie) ([\w.]+)/.exec(b) || b.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(b) || [];
    return { browser: a[1] || "", version: a[2] || "0" }
};
if (!jQuery.browser) {
    matched = jQuery.uaMatch(navigator.userAgent);
    browser = {};
    if (matched.browser) {
        browser[matched.browser] = true;
        browser.version = matched.version
    } if (browser.chrome) {
        browser.webkit = true
    } else {
        if (browser.webkit) {
            browser.safari = true
        }
    } jQuery.browser = browser
} (function (a) {
    if (typeof module === "object" && module.exports) {
        module.exports = a()
    } else {
        var b = window.Granite = window.Granite || {};
        b.Sling = a()
    }
}(function () {
    return { SELECTOR_INFINITY: ".infinity", CHARSET: "_charset_", STATUS: ":status", STATUS_BROWSER: "browser", OPERATION: ":operation", OPERATION_DELETE: "delete", OPERATION_MOVE: "move", DELETE_SUFFIX: "@Delete", TYPEHINT_SUFFIX: "@TypeHint", COPY_SUFFIX: "@CopyFrom", MOVE_SUFFIX: "@MoveFrom", ORDER: ":order", REPLACE: ":replace", DESTINATION: ":dest", SAVE_PARAM_PREFIX: ":saveParamPrefix", IGNORE_PARAM: ":ignore", REQUEST_LOGIN_PARAM: "sling:authRequestLogin", LOGIN_URL: "/system/sling/login.html", LOGOUT_URL: "/system/sling/logout.html" }
}));
(function (a) {
    if (typeof module === "object" && module.exports) {
        module.exports = a()
    } else {
        var b = window.Granite = window.Granite || {};
        b.Util = a()
    }
}(function () {
    var a = function (b) {
        return Object.prototype.toString.call(b) === "[object Array]"
    };
    return {
        patchText: function (d, c) {
            if (c) {
                if (!a(c)) {
                    d = d.replace("{0}", c)
                } else {
                    for (var b = 0;
                        b < c.length;
                        b++) {
                            d = d.replace(("{" + b + "}"), c[b])
                    }
                }
            } return d
        }, getTopWindow: function () {
            var c = window;
            if (this.iFrameTopWindow) {
                return this.iFrameTopWindow
            } try {
                while (c.parent && c !== c.parent && c.parent.location.href) {
                    c = c.parent
                }
            } catch (b) { } return c
        }, setIFrameMode: function (b) {
            this.iFrameTopWindow = b || window
        }, applyDefaults: function () {
            var d;
            var f = arguments[0] || {};
            for (var c = 1;
                c < arguments.length;
                c++) {
                    d = arguments[c];
                for (var b in d) {
                    var e = d[b];
                    if (d.hasOwnProperty(b) && e !== undefined) {
                        if (e !== null && typeof e === "object" && !(e instanceof Array)) {
                            f[b] = this.applyDefaults(f[b], e)
                        } else {
                            if (e instanceof Array) {
                                f[b] = e.slice(0)
                            } else {
                                f[b] = e
                            }
                        }
                    }
                }
            } return f
        }, getKeyCode: function (b) {
            return b.keyCode ? b.keyCode : b.which
        }
    }
}));
(function (a) {
    if (typeof module === "object" && module.exports) {
        module.exports = a(require("@granite/util"), require("jquery"))
    } else {
        window.Granite.HTTP = a(Granite.Util, jQuery)
    }
}(function (util, $) {
    return (function () {
        var contextPath = null;
        var SCRIPT_URL_REGEXP = /^(?:http|https):\/\/[^/]+(\/.*)\/(?:etc\.clientlibs|etc(\/.*)*\/clientlibs|libs(\/.*)*\/clientlibs|apps(\/.*)*\/clientlibs|etc\/designs).*\.js(\?.*)?$/;
        var ENCODE_PATH_REGEXP = /[^\w-.~%:/?[\]@!$&'()*+,;=]/;
        var URI_REGEXP = /^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
        var loginRedirected = false;
        var self = {};
        self.getSchemeAndAuthority = function (uri) {
            if (!uri) {
                return ""
            } var result = URI_REGEXP.exec(uri);
            if (result === null) {
                return ""
            } return [result[1], result[3]].join("")
        };
        self.getContextPath = function () {
            if (contextPath === null) {
                contextPath = self.detectContextPath()
            } return contextPath
        };
        self.detectContextPath = function () {
            try {
                if (window.CQURLInfo) {
                    contextPath = CQURLInfo.contextPath || ""
                } else {
                    var scripts = document.getElementsByTagName("script");
                    for (var i = 0;
                        i < scripts.length;
                        i++) {
                            var result = SCRIPT_URL_REGEXP.exec(scripts[i].src);
                        if (result) {
                            contextPath = result[1];
                            return contextPath
                        }
                    } contextPath = ""
                }
            } catch (e) { } return contextPath
        };
        self.externalize = function (url) {
            try {
                if (url.indexOf("/") === 0 && self.getContextPath() && url.indexOf(self.getContextPath() + "/") !== 0) {
                    url = self.getContextPath() + url
                }
            } catch (e) { } return url
        };
        self.internalize = function (url, doc) {
            if (url.charAt(0) === "/") {
                if (contextPath === url) {
                    return ""
                } else {
                    if (contextPath && url.indexOf(contextPath + "/") === 0) {
                        return url.substring(contextPath.length)
                    } else {
                        return url
                    }
                }
            } if (!doc) {
                doc = document
            } var docHost = self.getSchemeAndAuthority(doc.location.href);
            var urlHost = self.getSchemeAndAuthority(url);
            if (docHost === urlHost) {
                return url.substring(urlHost.length + (contextPath ? contextPath.length : 0))
            } else {
                return url
            }
        };
        self.getPath = function (url) {
            if (!url) {
                if (window.CQURLInfo && CQURLInfo.requestPath) {
                    return CQURLInfo.requestPath
                } else {
                    url = window.location.pathname
                }
            } else {
                url = self.removeParameters(url);
                url = self.removeAnchor(url)
            } url = self.internalize(url);
            var i = url.indexOf(".", url.lastIndexOf("/"));
            if (i !== -1) {
                url = url.substring(0, i)
            } return url
        };
        self.removeAnchor = function (uri) {
            var fragmentIndex = uri.indexOf("#");
            if (fragmentIndex >= 0) {
                return uri.substring(0, fragmentIndex)
            } else {
                return uri
            }
        };
        self.removeParameters = function (uri) {
            var queryIndex = uri.indexOf("?");
            if (queryIndex >= 0) {
                return uri.substring(0, queryIndex)
            } else {
                return uri
            }
        };
        self.encodePathOfURI = function (uri) {
            var DELIMS = ["?", "#"];
            var parts = [uri];
            var delim;
            for (var i = 0, ln = DELIMS.length;
                i < ln;
                i++) {
                    delim = DELIMS[i];
                if (uri.indexOf(delim) >= 0) {
                    parts = uri.split(delim);
                    break
                }
            } if (ENCODE_PATH_REGEXP.test(parts[0])) {
                parts[0] = self.encodePath(parts[0])
            } return parts.join(delim)
        };
        self.encodePath = function (uri) {
            uri = encodeURI(uri);
            uri = uri.replace(/%5B/g, "[").replace(/%5D/g, "]");
            uri = uri.replace(/\?/g, "%3F");
            uri = uri.replace(/#/g, "%23");
            return uri
        };
        self.handleLoginRedirect = function () {
            if (!loginRedirected) {
                loginRedirected = true;
                alert(Granite.I18n.get("Your request could not be completed because you have been signed out."));
                var l = util.getTopWindow().document.location;
                l.href = self.externalize("/") + "?resource=" + encodeURIComponent(l.pathname + l.search + l.hash)
            }
        };
        self.getXhrHook = function (url, method, params) {
            method = method || "GET";
            if (window.G_XHR_HOOK && typeof G_XHR_HOOK === "function") {
                var p = { url: url, method: method };
                if (params) {
                    p.params = params
                } return G_XHR_HOOK(p)
            } return null
        };
        self.eval = function (response) {
            if (typeof response !== "object") {
                response = $.ajax({ url: response, type: "get", async: false })
            } try {
                var text = response.body ? response.body : response.responseText;
                return JSON.parse(text)
            } catch (e) { } return null
        };
        return self
    }())
}));
(function (a) {
    if (typeof module === "object" && module.exports) {
        module.exports = a(require("@granite/http"))
    } else {
        window.Granite.I18n = a(window.Granite.HTTP)
    }
}(function (a) {
    return (function () {
        var b = {};
        var g = "/libs/cq/i18n/dict.";
        var k = ".json";
        var c = undefined;
        var j = false;
        var f = null;
        var l = {};
        var e = false;
        var d = function (m) {
            if (e) {
                return g + m + k
            } var o;
            var n = document.querySelector("html");
            if (n) {
                o = n.getAttribute("data-i18n-dictionary-src")
            } if (!o) {
                return g + m + k
            } return o.replace("{locale}", encodeURIComponent(m)).replace("{+locale}", m)
        };
        var h = function (o, n) {
            if (n) {
                if (Array.isArray(n)) {
                    for (var m = 0;
                        m < n.length;
                        m++) {
                            o = o.replace("{" + m + "}", n[m])
                    }
                } else {
                    o = o.replace("{0}", n)
                }
            } return o
        };
        l.LOCALE_DEFAULT = "en";
        l.PSEUDO_LANGUAGE = "zz";
        l.PSEUDO_PATTERN_KEY = "_pseudoPattern_";
        l.init = function (m) {
            m = m || {};
            this.setLocale(m.locale);
            this.setUrlPrefix(m.urlPrefix);
            this.setUrlSuffix(m.urlSuffix)
        };
        l.setLocale = function (m) {
            if (!m) {
                return
            } c = m
        };
        l.getLocale = function () {
            if (typeof c === "function") {
                c = c()
            } return c || document.documentElement.lang || l.LOCALE_DEFAULT
        };
        l.setUrlPrefix = function (m) {
            if (!m) {
                return
            } g = m;
            e = true
        };
        l.setUrlSuffix = function (m) {
            if (!m) {
                return
            } k = m;
            e = true
        };
        l.getDictionary = function (m) {
            m = m || l.getLocale();
            if (!b[m]) {
                j = m.indexOf(l.PSEUDO_LANGUAGE) === 0;
                try {
                    var o = new XMLHttpRequest();
                    o.open("GET", a.externalize(d(m)), false);
                    o.send();
                    b[m] = JSON.parse(o.responseText)
                } catch (n) { } if (!b[m]) {
                    b[m] = {}
                }
            } return b[m]
        };
        l.get = function (q, n, o) {
            var r;
            var p;
            var m;
            r = l.getDictionary();
            m = j ? l.PSEUDO_PATTERN_KEY : o ? q + " ((" + o + "))" : q;
            if (r) {
                p = r[m]
            } if (!p) {
                p = q
            } if (j) {
                p = p.replace("{string}", q).replace("{comment}", o ? o : "")
            } return h(p, n)
        };
        l.getVar = function (n, m) {
            if (!n) {
                return null
            } return l.get(n, null, m)
        };
        l.getLanguages = function () {
            if (!f) {
                try {
                    var m = a.externalize("/libs/wcm/core/resources/languages.overlay.infinity.json");
                    var p = new XMLHttpRequest();
                    p.open("GET", m, false);
                    p.send();
                    var n = JSON.parse(p.responseText);
                    Object.keys(n).forEach(function (r) {
                        var q = n[r];
                        if (q.language) {
                            q.title = l.getVar(q.language)
                        } if (q.title && q.country && q.country !== "*") {
                            q.title += " (" + l.getVar(q.country) + ")"
                        }
                    });
                    f = n
                } catch (o) {
                    f = {}
                }
            } return f
        };
        l.parseLocale = function (p) {
            if (!p) {
                return null
            } var o = p.indexOf("_");
            if (o < 0) {
                o = p.indexOf("-")
            } var n;
            var m;
            if (o < 0) {
                n = p;
                m = null
            } else {
                n = p.substring(0, o);
                m = p.substring(o + 1)
            } return { code: p, language: n, country: m }
        };
        return l
    }())
}));
(function (a) {
    if (typeof module === "object" && module.exports) {
        module.exports = a()
    } else {
        var b = window.Granite = window.Granite || {};
        b.TouchIndicator = a()
    }
}(function () {
    function c() {
        var d = document.createElement("div");
        d.style.visibility = "hidden";
        d.style.position = "absolute";
        d.style.width = "30px";
        d.style.height = "30px";
        d.style.borderRadius = "20px";
        d.style.border = "5px solid orange";
        d.style.userSelect = "none";
        d.style.opacity = "0.5";
        d.style.zIndex = "2000";
        d.style.pointerEvents = "none";
        return d
    } var b = {};
    var a = [];
    return {
        debugWithMouse: false, init: function () {
            var d = this;
            var e = function (f) {
                d.update(f.touches);
                return true
            };
            document.addEventListener("touchstart", e);
            document.addEventListener("touchmove", e);
            document.addEventListener("touchend", e);
            if (this.debugWithMouse) {
                document.addEventListener("mousemove", function (f) {
                    f.identifer = "fake";
                    d.update([f]);
                    return true
                })
            }
        }, update: function (g) {
            var e = {};
            for (var f = 0;
                f < g.length;
                f++) {
                    var j = g[f];
                var h = j.identifier;
                var d = b[h];
                if (!d) {
                    d = a.pop();
                    if (!d) {
                        d = c();
                        document.body.appendChild(d)
                    }
                } e[h] = d;
                d.style.left = (j.pageX - 20) + "px";
                d.style.top = (j.pageY - 20) + "px";
                d.style.visibility = "visible"
            } for (h in b) {
                if (b.hasOwnProperty(h) && !e[h]) {
                    d = b[h];
                    d.style.visibility = "hidden";
                    a.push(d)
                }
            } b = e
        }
    }
}));
(function (a) {
    if (typeof module === "object" && module.exports) {
        module.exports = a()
    } else {
        var b = window.Granite = window.Granite || {};
        b.OptOutUtil = a()
    }
}(function (b) {
    function a(c) {
        if (String.prototype.trim) {
            return c.trim()
        } return c.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
    } return (function () {
        var c = {};
        var d = [];
        var e = [];
        c.init = function (f) {
            if (f) {
                d = f.cookieNames || [];
                e = f.whitelistCookieNames || []
            } else {
                d = [];
                e = []
            }
        };
        c.getCookieNames = function () {
            return d
        };
        c.getWhitelistCookieNames = function () {
            return e
        };
        c.isOptedOut = function () {
            var h = document.cookie.split(";");
            for (var g = 0;
                g < h.length;
                g++) {
                    var f = h[g];
                var j = a(f.split("=")[0]);
                if (c.getCookieNames().indexOf(j) >= 0) {
                    return true
                }
            } return false
        };
        c.maySetCookie = function (f) {
            return !(c.isOptedOut() && c.getWhitelistCookieNames().indexOf(f) === -1)
        };
        return c
    }())
}));
Granite.OptOutUtil.init(window.GraniteOptOutConfig);
Granite.HTTP.detectContextPath();
(function (c, b) {
    var a;
    b.Granite = b.Granite || {};
    b.Granite.$ = b.Granite.$ || c;
    b._g = b._g || {};
    b._g.$ = b._g.$ || c;
    a = Granite.HTTP;
    c.ajaxSetup({
        externalize: true, encodePath: true, hook: true, beforeSend: function (e, d) {
            if (typeof G_IS_HOOKED === "undefined" || !G_IS_HOOKED(d.url)) {
                if (d.externalize) {
                    d.url = a.externalize(d.url)
                } if (d.encodePath) {
                    d.url = a.encodePathOfURI(d.url)
                }
            } if (d.hook) {
                var f = a.getXhrHook(d.url, d.type, d.data);
                if (f) {
                    d.url = f.url;
                    if (f.params) {
                        if (d.type.toUpperCase() === "GET") {
                            d.url += "?" + c.param(f.params)
                        } else {
                            d.data = c.param(f.params)
                        }
                    }
                }
            }
        }, statusCode: {
            403: function (d) {
                if (d.getResponseHeader("X-Reason") === "Authentication Failed") {
                    a.handleLoginRedirect()
                }
            }
        }
    });
    c.ajaxSettings.traditional = true
}(jQuery, this));
(function (a) {
    if (window.Granite.csrf) {
        return
    } window.Granite.csrf = a(window.Granite.HTTP)
}(function (n) {
    function b() {
        this._handler = []
    } b.prototype = {
        then: function (u, t) {
            this._handler.push({ resolve: u, reject: t })
        }, resolve: function () {
            this._execute("resolve", arguments)
        }, reject: function () {
            this._execute("reject", arguments)
        }, _execute: function (t, u) {
            if (this._handler === null) {
                throw new Error("Promise already completed.")
            } for (var v = 0, w = this._handler.length;
                v < w;
                v++) {
                    this._handler[v][t].apply(window, u)
            } this.then = function (y, x) {
                (t === "resolve" ? y : x).apply(window, u)
            };
            this._handler = null
        }
    };
    function e(u) {
        var v = document.location.host;
        var x = document.location.protocol;
        var w = "//" + v;
        var t = x + w;
        return (u === t || u.slice(0, t.length + 1) === t + "/") || (u === w || u.slice(0, w.length + 1) === w + "/") || !(/^(\/\/|http:|https:).*/.test(u))
    } var q = ":cq_csrf_token";
    var g = "CSRF-Token";
    var l = n.externalize("/libs/granite/csrf/token.json");
    var k;
    var s;
    function p(t) {
        if (window.console) {
            console.warn("CSRF data not available;The data may be unavailable by design, such as during non-authenticated requests: " + t)
        }
    } function o() {
        var t = new b();
        k = t;
        var u = new XMLHttpRequest();
        u.onreadystatechange = function () {
            if (u.readyState === 4) {
                try {
                    var w = JSON.parse(u.responseText);
                    s = w.token;
                    t.resolve(s)
                } catch (v) {
                    p(v);
                    t.reject(u.responseText)
                }
            }
        };
        u.open("GET", l, true);
        u.send();
        return t
    } function d() {
        var u = new XMLHttpRequest();
        u.open("GET", l, false);
        u.send();
        try {
            return s = JSON.parse(u.responseText).token
        } catch (t) {
            p(t)
        }
    } function m() {
        s = undefined;
        o()
    } function a(u) {
        var v = u.getAttribute("action");
        if (u.method.toUpperCase() === "GET" || (v && !e(v))) {
            return
        } if (!s) {
            d()
        } if (!s) {
            return
        } var t = u.querySelector('input[name="' + q + '"]');
        if (!t) {
            t = document.createElement("input");
            t.setAttribute("type", "hidden");
            t.setAttribute("name", q);
            u.appendChild(t)
        } t.setAttribute("value", s)
    } function j(t) {
        var u = function (w) {
            var v = w.target;
            if (v.nodeName === "FORM") {
                a(v)
            }
        };
        if (t.addEventListener) {
            t.addEventListener("submit", u, true)
        } else {
            if (t.attachEvent) {
                t.attachEvent("submit", u)
            }
        }
    } j(document);
    var h = XMLHttpRequest.prototype.open;
    XMLHttpRequest.prototype.open = function (v, t, u) {
        if (v.toLowerCase() !== "get" && e(t)) {
            this._csrf = true;
            this._async = u
        } return h.apply(this, arguments)
    };
    var c = XMLHttpRequest.prototype.send;
    XMLHttpRequest.prototype.send = function () {
        if (!this._csrf) {
            c.apply(this, arguments);
            return
        } if (s) {
            this.setRequestHeader(g, s);
            c.apply(this, arguments);
            return
        } if (this._async === false) {
            d();
            if (s) {
                this.setRequestHeader(g, s)
            } c.apply(this, arguments);
            return
        } var t = this;
        var u = Array.prototype.slice.call(arguments);
        k.then(function (v) {
            t.setRequestHeader(g, v);
            c.apply(t, u)
        }, function () {
            c.apply(t, u)
        })
    };
    var f = HTMLFormElement.prototype.submit;
    HTMLFormElement.prototype.submit = function () {
        a(this);
        return f.apply(this, arguments)
    };
    if (window.Node) {
        var r = Node.prototype.appendChild;
        Node.prototype.appendChild = function () {
            var t = r.apply(this, arguments);
            if (t.nodeName === "IFRAME") {
                try {
                    if (t.contentWindow && !t._csrf) {
                        t._csrf = true;
                        j(t.contentWindow.document)
                    }
                } catch (u) {
                    if (t.src && t.src.length && e(t.src)) {
                        if (window.console) {
                            console.error("Unable to attach CSRF token to an iframe element on the same origin")
                        }
                    }
                }
            } return t
        }
    } o();
    setInterval(function () {
        o()
    }, 300000);
    return { initialised: false, refreshToken: o, _clearToken: m }
}));
window._g = window._g || {};
_g.shared = {};
if (window.console === undefined) {
    window.console = { log: function (a) { } }
} _g.shared.HTTP = new function () {
    var createResponse = function () {
        var response = new Object();
        response.headers = new Object();
        response.body = new Object();
        return response
    };
    var getResponseFromXhr = function (request) {
        if (!request) {
            return null
        } var response = createResponse();
        response.body = request.responseText;
        response.headers[_g.HTTP.HEADER_STATUS] = request.status;
        response.responseText = request.responseText;
        response.status = request.status;
        return response
    };
    return {
        EXTENSION_HTML: ".html", EXTENSION_JSON: ".json", EXTENSION_RES: ".res", HEADER_STATUS: "Status", HEADER_MESSAGE: "Message", HEADER_LOCATION: "Location", HEADER_PATH: "Path", PARAM_NO_CACHE: "cq_ck", get: function (url, callback, scope, suppressForbiddenCheck) {
            url = _g.HTTP.getXhrHookedURL(_g.HTTP.externalize(url, true));
            if (callback != undefined) {
                return _g.$.ajax({
                    type: "GET", url: url, externalize: false, encodePath: false, hook: false, complete: function (request, textStatus) {
                        var response = getResponseFromXhr(request);
                        if (!suppressForbiddenCheck) {
                            _g.HTTP.handleForbidden(response)
                        } callback.call(scope || this, this, textStatus == "success", response)
                    }
                })
            } else {
                try {
                    var request = _g.$.ajax({ type: "GET", url: url, async: false, externalize: false, encodePath: false, hook: false });
                    var response = getResponseFromXhr(request);
                    if (!suppressForbiddenCheck) {
                        _g.HTTP.handleForbidden(response)
                    } return response
                } catch (e) {
                    return null
                }
            }
        }, post: function (url, callback, params, scope, suppressErrorMsg, suppressForbiddenCheck) {
            url = _g.HTTP.externalize(url, true);
            var hook = _g.HTTP.getXhrHook(url, "POST", params);
            if (hook) {
                url = hook.url;
                params = hook.params
            } if (callback != undefined) {
                return _g.$.ajax({
                    type: "POST", url: url, data: params, externalize: false, encodePath: false, hook: false, complete: function (request, textStatus) {
                        var response = _g.HTTP.buildPostResponseFromHTML(request.responseText);
                        if (!suppressForbiddenCheck) {
                            _g.HTTP.handleForbidden(request)
                        } callback.call(scope || this, this, textStatus == "success", response)
                    }
                })
            } else {
                try {
                    var request = _g.$.ajax({ type: "POST", url: url, data: params, async: false, externalize: false, encodePath: false, hook: false });
                    var response = _g.HTTP.buildPostResponseFromHTML(request.responseText);
                    if (!suppressForbiddenCheck) {
                        _g.HTTP.handleForbidden(request)
                    } return response
                } catch (e) {
                    return null
                }
            }
        }, getParameter: function (url, name) {
            var params = _g.HTTP.getParameters(url, name);
            return params != null ? params[0] : null
        }, getParameters: function (url, name) {
            var values = [];
            if (!name) {
                return null
            } name = encodeURIComponent(name);
            if (url.indexOf("?") == -1) {
                return null
            } if (url.indexOf("#") != -1) {
                url = url.substring(0, url.indexOf("#"))
            } var query = url.substring(url.indexOf("?") + 1);
            if (query.indexOf(name) == -1) {
                return null
            } var queryPts = query.split("&");
            for (var i = 0;
                i < queryPts.length;
                i++) {
                    var paramPts = queryPts[i].split("=");
                if (paramPts[0] == name) {
                    values.push(paramPts.length > 1 ? decodeURIComponent(paramPts[1]) : "")
                }
            } return values.length > 0 ? values : null
        }, addParameter: function (url, name, value) {
            if (value && value instanceof Array) {
                for (var i = 0;
                    i < value.length;
                    i++) {
                        url = _g.HTTP.addParameter(url, name, value[i])
                } return url
            } var separator = url.indexOf("?") == -1 ? "?" : "&";
            var hashIdx = url.indexOf("#");
            if (hashIdx < 0) {
                return url + separator + encodeURIComponent(name) + "=" + encodeURIComponent(value)
            } else {
                var hash = url.substring(hashIdx);
                url = url.substring(0, hashIdx);
                return url + separator + encodeURIComponent(name) + "=" + encodeURIComponent(value) + hash
            }
        }, setParameter: function (url, name, value) {
            url = _g.HTTP.removeParameter(url, name);
            return _g.HTTP.addParameter(url, name, value)
        }, removeParameter: function (url, name) {
            var pattern0 = "?" + encodeURIComponent(name) + "=";
            var pattern1 = "&" + encodeURIComponent(name) + "=";
            var pattern;
            if (url.indexOf(pattern0) != -1) {
                pattern = pattern0
            } else {
                if (url.indexOf(pattern1) != -1) {
                    pattern = pattern1
                } else {
                    return url
                }
            } var indexCutStart = url.indexOf(pattern);
            var begin = url.substring(0, indexCutStart);
            var indexCutEnd = url.indexOf("&", indexCutStart + 1);
            var end = "";
            if (indexCutEnd != -1) {
                end = url.substring(indexCutEnd);
                if (end.indexOf("&") == 0) {
                    end = end.replace("&", "?")
                }
            } return begin + end
        }, removeParameters: Granite.HTTP.removeParameters, addSelector: function (url, selector, index) {
            if (!index) {
                index = 0
            } var post = "";
            var pIndex = url.indexOf("?");
            if (pIndex == -1) {
                pIndex = url.indexOf("#")
            } if (pIndex != -1) {
                post = url.substring(pIndex);
                url = url.substring(0, pIndex)
            } var sIndex = url.lastIndexOf("/");
            var main = url.substring(sIndex);
            if (main.indexOf("." + selector + ".") == -1) {
                var path = url.substring(0, sIndex);
                var obj = main.split(".");
                var newMain = "";
                var delim = "";
                if (index > obj.length - 2 || index == -1) {
                    index = obj.length - 2
                } for (var i = 0;
                    i < obj.length;
                    i++) {
                        newMain += delim + obj[i];
                    delim = ".";
                    if (index == i) {
                        newMain += delim + selector
                    }
                } return path + newMain + post
            } else {
                return url
            }
        }, setSelector: function (url, selector, index) {
            var post = "";
            var pIndex = url.indexOf("?");
            if (pIndex == -1) {
                pIndex = url.indexOf("#")
            } if (pIndex != -1) {
                post = url.substring(pIndex);
                url = url.substring(0, pIndex)
            } var selectors = _g.HTTP.getSelectors(url);
            var ext = url.substring(url.lastIndexOf("."));
            url = url.substring(0, url.lastIndexOf("."));
            var fragment = (selectors.length > 0) ? url.replace("." + selectors.join("."), "") : url;
            if (selectors.length > 0) {
                for (var i = 0;
                    i < selectors.length;
                    i++) {
                        if (index == i) {
                            fragment += "." + selector
                        } else {
                            fragment += "." + selectors[i]
                        }
                }
            } else {
                fragment += "." + selector
            } return fragment + ext + post
        }, addSelectors: function (url, selectors) {
            var res = url;
            if (url && selectors && selectors.length) {
                for (var i = 0;
                    i < selectors.length;
                    i++) {
                        res = _g.HTTP.addSelector(res, selectors[i], i)
                }
            } return res
        }, getAnchor: function (url) {
            if (url.indexOf("#") != -1) {
                return url.substring(url.indexOf("#") + 1)
            } return ""
        }, setAnchor: function (url, anchor) {
            return _g.HTTP.removeAnchor(url) + "#" + anchor
        }, removeAnchor: Granite.HTTP.removeAnchor, noCaching: function (url) {
            return _g.HTTP.setParameter(url, _g.HTTP.PARAM_NO_CACHE, new Date().valueOf())
        }, buildPostResponseFromNode: function (node, response) {
            if (!node) {
                return null
            } if (response == undefined) {
                response = createResponse()
            } for (var i = 0;
                i < node.childNodes.length;
                i++) {
                    var child = node.childNodes[i];
                if (child.tagName) {
                    if (child.id) {
                        if (child.href) {
                            response.headers[child.id] = child.href
                        } else {
                            response.headers[child.id] = child.innerHTML
                        }
                    } response = _g.HTTP.buildPostResponseFromNode(child, response)
                }
            } return response
        }, buildPostResponseFromHTML: function (html) {
            var response = createResponse();
            try {
                if (html.responseText != undefined) {
                    html = html.responseText
                } else {
                    if (typeof html != "string") {
                        html = html.toString()
                    }
                } var div = document.createElement("div");
                div.innerHTML = html;
                response = _g.HTTP.buildPostResponseFromNode(div, response);
                div = null
            } catch (e) { } return response
        }, getCookie: function (name) {
            var cname = encodeURIComponent(name) + "=";
            var dc = document.cookie;
            if (dc.length > 0) {
                var begin = dc.indexOf(cname);
                if (begin != -1) {
                    begin += cname.length;
                    var end = dc.indexOf(";", begin);
                    if (end == -1) {
                        end = dc.length
                    } return decodeURIComponent(dc.substring(begin, end))
                }
            } return null
        }, setCookie: function (name, value, path, days, domain, secure) {
            if (typeof (days) != "number") {
                days = 7
            } var date;
            if (days > 0) {
                date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))
            } else {
                date = new Date(0)
            } document.cookie = encodeURIComponent(name) + "=" + encodeURIComponent(value) + "; " + (days != 0 ? "expires=" + date.toGMTString() + "; " : "") + (domain ? "domain=" + domain + "; " : "") + (path ? "path=" + path : "") + (secure ? "; secure" : "");
            return value
        }, clearCookie: function (name, path, domain, secure) {
            _g.HTTP.setCookie(name, "null", path || "", -1, domain || "", secure || "")
        }, getSchemeAndAuthority: Granite.HTTP.getSchemeAndAuthority, getContextPath: Granite.HTTP.getContextPath, externalize: function (url, encode) {
            if ((typeof G_IS_HOOKED != "undefined") && G_IS_HOOKED(url)) {
                return url
            } if (encode) {
                url = _g.HTTP.encodePathOfURI(url)
            } url = Granite.HTTP.externalize(url);
            return url
        }, internalize: Granite.HTTP.internalize, getPath: Granite.HTTP.getPath, getSuffix: function () {
            if (window.CQURLInfo && CQURLInfo.suffix) {
                return CQURLInfo.suffix
            } return null
        }, getSelectors: function (url) {
            if (!url && window.CQURLInfo) {
                if (CQURLInfo.selectors) {
                    return CQURLInfo.selectors
                }
            } var selectors = [];
            url = url || window.location.href;
            url = _g.HTTP.removeParameters(url);
            url = _g.HTTP.removeAnchor(url);
            var fragment = url.substring(url.lastIndexOf("/"));
            if (fragment) {
                var split = fragment.split(".");
                if (split.length > 2) {
                    for (var i = 0;
                        i < split.length;
                        i++) {
                            if (i > 0 && i < split.length - 1) {
                                selectors.push(split[i])
                            }
                    }
                }
            } return selectors
        }, getExtension: function (url) {
            if (!url && window.CQURLInfo) {
                if (CQURLInfo.extension) {
                    return CQURLInfo.extension
                }
            } url = url || window.location.href;
            url = _g.HTTP.removeParameters(url);
            url = _g.HTTP.removeAnchor(url);
            var pos = url.lastIndexOf(".");
            if (pos < 0) {
                return ""
            } url = url.substring(pos + 1);
            pos = url.indexOf("/");
            if (pos < 0) {
                return url
            } return url.substring(0, pos)
        }, encodePathOfURI: Granite.HTTP.encodePathOfURI, encodePath: Granite.HTTP.encodePath, eval: Granite.HTTP.eval, isOkStatus: function (status) {
            try {
                return (new String(status).indexOf("2") == 0)
            } catch (e) {
                return false
            }
        }, isOk: function (response) {
            try {
                return _g.HTTP.isOkStatus(response.headers[_g.HTTP.HEADER_STATUS])
            } catch (e) {
                return false
            }
        }, handleForbidden: function (response, suppressLogin) {
            try {
                if (response[_g.HTTP.HEADER_STATUS.toLowerCase()] == 403) {
                    Granite.HTTP.handleLoginRedirect();
                    return true
                } return false
            } catch (e) {
                return false
            }
        }, getXhrHook: Granite.HTTP.getXhrHook, getXhrHookedURL: function (url, method, params) {
            var hook = _g.HTTP.getXhrHook(url, method, params);
            if (hook) {
                return hook.url
            } return url
        }, reloadHook: function (url) {
            if (typeof G_RELOAD_HOOK != "undefined" && _g.$.isFunction(G_RELOAD_HOOK)) {
                if (CQURLInfo.selectorString != "") {
                    url = _g.HTTP.addSelector(url, CQURLInfo.selectorString)
                } url = G_RELOAD_HOOK(url) || url
            } return url
        }
    }
};
_g.HTTP = _g.shared.HTTP;
_g.shared.Util = new function () {
    return {
        reload: function (win, url, preventHistory) {
            if (!win) {
                win = window
            } if (!url) {
                url = _g.HTTP.noCaching(win.location.href)
            } url = _g.HTTP.reloadHook(url);
            if (preventHistory) {
                win.location.replace(url)
            } else {
                win.location.href = url
            }
        }, load: function (url, preventHistory) {
            _g.Util.reload(window, url, preventHistory)
        }, open: function (url, win, name, options) {
            if (!win) {
                win = window
            } if (!url) {
                return
            } url = _g.HTTP.reloadHook(url);
            if (!name) {
                name = ""
            } if (!options) {
                options = ""
            } return win.open(url, name, options)
        }, htmlEncode: function (value) {
            return !value ? value : String(value).replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;")
        }, htmlDecode: function (value) {
            return !value ? value : String(value).replace(/&gt;/g, ">").replace(/&lt;/g, "<").replace(/&quot;/g, '"').replace(/&amp;/g, "&")
        }, ellipsis: function (value, length, word) {
            if (value && value.length > length) {
                if (word) {
                    var vs = value.substr(0, length - 2);
                    var index = Math.max(vs.lastIndexOf(" "), vs.lastIndexOf("."), vs.lastIndexOf("!"), vs.lastIndexOf("?"), vs.lastIndexOf(";"));
                    if (index == -1 || index < (length - 15)) {
                        return value.substr(0, length - 3) + "..."
                    } else {
                        return vs.substr(0, index) + "..."
                    }
                } else {
                    return value.substr(0, length - 3) + "..."
                }
            } return value
        }, patchText: Granite.Util.patchText, eval: function (response) {
            return _g.HTTP.eval(response)
        }, getTopWindow: Granite.Util.getTopWindow, setIFrameMode: Granite.Util.setIFrameMode
    }
};
_g.Util = _g.shared.Util;
_g.shared.Sling = function () {
    return {
        SELECTOR_INFINITY: Granite.Sling.SELECTOR_INFINITY, CHARSET: Granite.Sling.CHARSET, STATUS: Granite.Sling.STATUS, STATUS_BROWSER: Granite.Sling.STATUS_BROWSER, OPERATION: Granite.Sling.OPERATION, OPERATION_DELETE: Granite.Sling.OPERATION_DELETE, OPERATION_MOVE: Granite.Sling.OPERATION_MOVE, DELETE_SUFFIX: Granite.Sling.DELETE_SUFFIX, TYPEHINT_SUFFIX: Granite.Sling.TYPEHINT_SUFFIX, COPY_SUFFIX: Granite.Sling.COPY_SUFFIX, MOVE_SUFFIX: Granite.Sling.MOVE_SUFFIX, ORDER: Granite.Sling.ORDER, REPLACE: Granite.Sling.REPLACE, DESTINATION: Granite.Sling.DESTINATION, SAVE_PARAM_PREFIX: Granite.Sling.SAVE_PARAM_PREFIX, IGNORE_PARAM: Granite.Sling.IGNORE_PARAM, REQUEST_LOGIN_PARAM: Granite.Sling.REQUEST_LOGIN_PARAM, LOGIN_URL: Granite.Sling.LOGIN_URL, LOGOUT_URL: Granite.Sling.LOGOUT_URL, processBinaryData: function (a) {
            if (a && a[":jcr:data"] != undefined) {
                var b = new Object();
                b.size = a[":jcr:data"];
                b.type = a["jcr:mimeType"];
                b.date = a["jcr:lastModified"];
                a = b
            } return a
        }, getContentPath: function (c, a, b) {
            var d = a;
            if (d.lastIndexOf(".") > d.lastIndexOf("/")) {
                d = d.substr(0, d.indexOf(".", d.lastIndexOf("/")))
            } if (c) {
                if (c.indexOf("/") == 0) {
                    d = c
                } else {
                    if (b) {
                        while (c.indexOf("../") == 0) {
                            c = c.substring(3);
                            d = d.substring(0, d.lastIndexOf("/"))
                        }
                    } c = c.replace("./", "");
                    d = d + "/" + c
                }
            } return d
        }
    }
}();
_g.Sling = _g.shared.Sling;
_g.shared.XSS = new function () {
    return {
        getXSSPropertyName: function (a) {
            if (!a) {
                return ""
            } if (_g.XSS.KEY_REGEXP.test(a)) {
                return a
            } return a += _g.XSS.KEY_SUFFIX
        }, getXSSRecordPropertyValue: function (e, c, a) {
            var d = "";
            if (e && c) {
                var b = e.get(this.getXSSPropertyName(c));
                if (b) {
                    d = b
                } else {
                    d = this.getXSSValue(e.get(c))
                } if (a && !isNaN(a)) {
                    d = _g.Util.ellipsis(d, a, true)
                }
            } return d
        }, getXSSTablePropertyValue: function (d, c, a) {
            var e = "";
            if (d && c) {
                var b = d[this.getXSSPropertyName(c)];
                if (b) {
                    e = b
                } else {
                    e = this.getXSSValue(d[c])
                } if (a && !isNaN(a)) {
                    e = _g.Util.ellipsis(e, a, true)
                }
            } return e
        }, getXSSValue: function (a) {
            if (a) {
                return _g.Util.htmlEncode(a)
            } else {
                return ""
            }
        }, updatePropertyName: function (a, b) {
            if (!a || !b || !a[b]) {
                return
            } if (a.xssProtect && !a.xssKeepPropName) {
                a[b] = this.getXSSPropertyName(a[b])
            }
        }, xssPropertyRenderer: function (d, b, c, a) {
            if (a && a.dataIndex && c && c.data && c.data[this.getXSSPropertyName(a.dataIndex)]) {
                d = c.data[this.getXSSPropertyName(a.dataIndex)];
                if (a.ellipsisLimit && !isNaN(a.ellipsisLimit)) {
                    d = _g.Util.ellipsis(d, a.ellipsisLimit, true)
                } return d
            } else {
                if (d) {
                    return d
                } else {
                    return ""
                }
            }
        }
    }
};
_g.XSS = _g.shared.XSS;
_g.XSS.KEY_SUFFIX = "_xss";
_g.XSS.KEY_REGEXP = new RegExp(_g.XSS.KEY_SUFFIX + "$");
_g.shared.I18n = Granite.I18n;
_g.I18n = _g.shared.I18n;
_g.shared.I18n.getMessage = Granite.I18n.get;
_g.shared.I18n.getVarMessage = Granite.I18n.getVar;
_g.shared.String = new function () {
    return {
        startsWith: function (d, b) {
            if (d == null || b == null) {
                return d == null && b == null
            } if (b.length > d.length) {
                return false
            } var a = d.toString();
            var c = b.toString();
            return (a.indexOf(c) == 0)
        }, endsWith: function (b, a) {
            if (b == null || a == null) {
                return b == null && a == null
            } if (a.length > b.length) {
                return false
            } b = b.toString();
            a = a.toString();
            return (b.lastIndexOf(a) == (b.length - a.length))
        }, contains: function (b, a) {
            if (b == null || a == null) {
                return false
            } b = b.toString();
            a = a.toString();
            return (b.indexOf(a) >= 0)
        }
    }
};
_g.String = _g.shared.String;
_g.shared.ClientSidePersistence = function (a) {
    var e = {
        PERSISTENCE_NAME: _g.shared.ClientSidePersistence.decoratePersistenceName("ClientSidePersistence"), config: {}, cache: null, getMode: function () {
            return this.config.mode
        }, getWindow: function () {
            return this.config.window || _g.shared.Util.getTopWindow()
        }, debug: function () {
            if (console) {
                var f = this.getMap();
                var h = "[ClientSidePersistence -> mode=" + this.getMode().name + ", container=" + (this.config.container || "") + "]\n";
                var g = 0;
                var j = new RegExp("^" + this.config.container + "/");
                for (var l = 0, o = Object.keys(f).sort(), m = null;
                    l < o.length;
                    l++) {
                        var n = o[l];
                    if (this.config.container && (typeof (n) == "string") && !n.match(j)) {
                        continue
                    } var k = f[n];
                    h += "-[" + ++g + "]-> '" + n.replace(j, "") + "' = '" + decodeURIComponent(k) + "'\n"
                } if (!g) {
                    h += "(container is empty)"
                } console.log(h)
            }
        }, keyName: function (f) {
            return (this.config.container ? (this.config.container + "/") : "") + f
        }, getKeys: function () {
            var j = this.getMap();
            var h = [];
            if (j) {
                for (var f in j) {
                    if (this.config.container) {
                        if (f.indexOf(this.config.container + "/") == 0) {
                            var g = f.substring(this.config.container.length + 1);
                            h.push(g)
                        }
                    } else {
                        h.push(f)
                    }
                }
            } return h
        }, get: function (f) {
            var g = this.getMap()[this.keyName(f)];
            return g ? decodeURIComponent(g) : g
        }, set: function (g, k) {
            g = (typeof g === "string") ? g.replace(/:=/g, "") : "";
            var j = { key: g };
            g = this.keyName(g);
            if (!g.length) {
                return
            } var f = [];
            var l = this.getMap();
            j.action = l[g] ? "update" : "set";
            if (k) {
                l[g] = encodeURIComponent(k)
            } else {
                j.action = "remove";
                delete l[g]
            } for (var h in l) {
                f.push(h + ":=" + l[h])
            } this.cache = l;
            this.write(f.join("|"));
            _g.$.extend(j, { value: k, mode: this.getMode().name, container: this.config.container });
            _g.$(_g.shared.ClientSidePersistence).trigger(_g.shared.ClientSidePersistence.EVENT_NAME, j)
        }, getMap: function () {
            if (!this.cache || !this.config.useCache) {
                var j = this.read().split("|");
                var g = {};
                for (var f = 0;
                    f < j.length;
                    f++) {
                        var k = j[f].split(":=");
                    var h = k[0];
                    if (h && h.length) {
                        g[h] = k[1] || ""
                    }
                } this.cache = g
            } return this.cache
        }, remove: function (f) {
            this.set(f)
        }, clearMap: function () {
            this.write()
        }, read: function () {
            return this.config.mode.read(this) || ""
        }, write: function (f) {
            this.config.mode.write(this, f || "")
        }
    };
    _g.$.extend(e.config, _g.shared.ClientSidePersistence.getDefaultConfig(), a);
    if (e.config.useContainer === false) {
        e.config.container = null
    } var d;
    var c = "test-" + Math.random();
    if (e.config.mode === _g.shared.ClientSidePersistence.MODE_SESSION) {
        d = false;
        try {
            window.sessionStorage.setItem(c, c);
            window.sessionStorage.removeItem(c)
        } catch (b) {
            d = true
        } if (d) {
            e.config.mode = _g.shared.ClientSidePersistence.MODE_LOCAL
        }
    } if (e.config.mode === _g.shared.ClientSidePersistence.MODE_LOCAL) {
        d = false;
        try {
            window.localStorage.setItem(c, c);
            window.localStorage.removeItem(c)
        } catch (b) {
            d = true
        } if (d) {
            e.config.mode = _g.shared.ClientSidePersistence.MODE_WINDOW
        }
    } return e
};
_g.shared.ClientSidePersistence.EVENT_NAME = "ClientSidePersistence";
_g.shared.ClientSidePersistence.MODE_SESSION = {
    name: "session", read: function (a) {
        return a.getWindow().sessionStorage.getItem(a.PERSISTENCE_NAME)
    }, write: function (a, c) {
        if (Granite.OptOutUtil.isOptedOut()) {
            return
        } try {
            a.getWindow().sessionStorage.setItem(a.PERSISTENCE_NAME, c)
        } catch (b) {
            return
        }
    }
};
_g.shared.ClientSidePersistence.MODE_LOCAL = {
    name: "local", read: function (a) {
        return a.getWindow().localStorage.getItem(a.PERSISTENCE_NAME)
    }, write: function (a, c) {
        if (Granite.OptOutUtil.isOptedOut()) {
            return
        } try {
            a.getWindow().localStorage.setItem(a.PERSISTENCE_NAME, c)
        } catch (b) {
            return
        }
    }
};
_g.shared.ClientSidePersistence.decoratePersistenceName = function (a) {
    return a
};
_g.shared.ClientSidePersistence.MODE_WINDOW = {
    name: "window", read: function (a) {
        return a.getWindow().name
    }, write: function (a, b) {
        if (Granite.OptOutUtil.isOptedOut()) {
            return
        } a.getWindow().name = b
    }
};
_g.shared.ClientSidePersistence.MODE_COOKIE = {
    COOKIE_NAME: _g.shared.ClientSidePersistence.decoratePersistenceName("SessionPersistence"), name: "cookie", read: function (a) {
        return _g.shared.ClientSidePersistence.CookieHelper.read(this.COOKIE_NAME)
    }, write: function (a, b) {
        if (Granite.OptOutUtil.isOptedOut() && !Granite.OptOutUtil.maySetCookie(this.COOKIE_NAME)) {
            return
        } if (!b) {
            _g.shared.ClientSidePersistence.CookieHelper.erase(this.COOKIE_NAME)
        } else {
            _g.shared.ClientSidePersistence.CookieHelper.set(this.COOKIE_NAME, b, 365)
        }
    }
};
_g.shared.ClientSidePersistence.getDefaultConfig = function () {
    return { window: _g.shared.Util.getTopWindow(), useCache: false, container: null, mode: _g.shared.ClientSidePersistence.MODE_LOCAL }
};
_g.shared.ClientSidePersistence.CookieHelper = {
    set: function (c, d, e) {
        var a = "";
        if (e) {
            var b = new Date();
            b.setTime(b.getTime() + (e * 24 * 60 * 60 * 1000));
            a = "; expires=" + b.toGMTString()
        } if (d) {
            d = encodeURIComponent(d)
        } document.cookie = c + "=" + d + a + "; path=/"
    }, read: function (b) {
        var f = b + "=";
        var a = document.cookie.split(";");
        for (var d = 0;
            d < a.length;
            d++) {
                var g = a[d];
            while (g.charAt(0) == " ") {
                g = g.substring(1, g.length)
            } if (g.indexOf(f) == 0) {
                var e = g.substring(f.length, g.length);
                return e ? decodeURIComponent(e) : null
            }
        } return null
    }, erase: function (a) {
        _g.shared.ClientSidePersistence.CookieHelper.set(a, "", -1)
    }
};
_g.shared.ClientSidePersistence.clearAllMaps = function () {
    var a = [_g.shared.ClientSidePersistence.MODE_COOKIE, _g.shared.ClientSidePersistence.MODE_LOCAL, _g.shared.ClientSidePersistence.MODE_SESSION, _g.shared.ClientSidePersistence.MODE_WINDOW];
    _g.$.each(a, function (d, c) {
        var b = new _g.shared.ClientSidePersistence({ mode: c });
        b.clearMap()
    })
};
_g.I18n.init();
window.$CQ = _g.$;
window.CQ = window.CQ || {};
CQ.shared = _g.shared;
CQ.Sling = CQ.shared.Sling;
CQ.I18n = CQ.shared.I18n;
G_XHR_HOOK = typeof CQ_XHR_HOOK != "undefined" ? CQ_XHR_HOOK : undefined;
G_RELOAD_HOOK = typeof CQ_RELOAD_HOOK != "undefined" ? CQ_RELOAD_HOOK : undefined;
G_IS_HOOKED = typeof CQ_IS_HOOKED != "undefined" ? CQ_IS_HOOKED : undefined;
G_CONTENT_PATH = typeof CQ_CONTENT_PATH != "undefined" ? CQ_CONTENT_PATH : undefined;
CQ.shared.Form = function () {
    var e = function () {
        var j = parent.frames.ContentFrame, m = j !== undefined ? j.contentDocument : document;
        var k = new Object();
        var l = m.getElementsByTagName("label");
        for (var h = 0;
            h < l.length;
            h++) {
                var g = l[h].htmlFor;
            if (g) {
                k[g] = l[h]
            }
        } return k
    };
    var f = function (h) {
        var j = "";
        var g = function (l) {
            if (l.nodeType == 3) {
                j += l.nodeValue
            } if (l.nodeName.toLowerCase() == "select" || l.nodeName.toLowerCase() == "input" || l.nodeName.toLowerCase() == "textarea" || l.nodeName.toLowerCase() == "button") {
                return
            } for (var k = 0;
                l.childNodes && k < l.childNodes.length;
                k++) {
                    g(l.childNodes[k])
            }
        };
        g(h);
        return j
    };
    var c = function (g) {
        return g.replace(/-\d+$/, "")
    };
    var b = function (h, g) {
        if (!g) {
            g = e()
        } if (g[h]) {
            return f(g[h])
        } return null
    };
    var a = function (j) {
        var h;
        var k = j.nodeName.toLowerCase();
        var g = d(j, "type") ? j.getAttribute("type") : undefined;
        if (k == "input") {
            if (g == "radio" || g == "checkbox") {
                if (d(j, "checked")) {
                    h = j.getAttribute("value")
                }
            } else {
                if (j.type == "text") {
                    h = j.defaultValue
                } else {
                    h = j.value
                }
            }
        } else {
            if (k == "textarea") {
                h = j.value
            } else {
                if (k == "option" && d(j, "selected")) {
                    h = j.getAttribute("value")
                }
            }
        } return h
    };
    var d = function (h, g) {
        if (h == null) {
            return false
        } return ($CQ(h).attr(g) != undefined)
    };
    return {
        searchArray: function (h, g, k) {
            for (var j = 0;
                j < h.length;
                j++) {
                    if (h[j][g] && h[j][g] == k) {
                        return h[j]
                    }
            } return null
        }, getLabelForField: function (g, j) {
            if (!j) {
                j = e()
            } var k = g.getAttribute("id");
            if (k && j[k]) {
                return f(j[k])
            } var h = g.parentNode;
            while (h) {
                if (h.nodeName.toLowerCase() == "label") {
                    return f(h)
                } h = h.parentNode
            } return g.getAttribute("name")
        }, getFields: function () {
            var k = parent.frames.ContentFrame, m = k !== undefined ? k.contentDocument : document, l = e();
            var g = [];
            var h = function (q, s, r) {
                var p = q.getAttribute("name");
                var t = q.nodeName.toLowerCase();
                var v;
                if (t == "input" || t == "textarea") {
                    var o = d(q, "type") ? q.getAttribute("type").toLowerCase() : "text";
                    if (o == "button" || o == "submit" || o == "reset") {
                        return
                    } v = CQ.shared.Form.searchArray(g, "value", p);
                    if (!v) {
                        g.push({ text: CQ.shared.Form.getLabelForField(q, l), value: p, name: p, enumeration: undefined, local: s, selector: r, type: t, defaultValue: a(q), node: q });
                        v = g[g.length - 1]
                    } if (o == "radio" || (v.local && o == "checkbox")) {
                        if (!v.enumeration) {
                            var w = q.getAttribute("id");
                            if (w) {
                                var y = c(w);
                                var x = b(y, l);
                                v.text = (x ? x : p)
                            } else {
                                v.text = p
                            } v.enumeration = []
                        } v.enumeration.push({ text: CQ.shared.Form.getLabelForField(q, l), value: q.getAttribute("value"), defaultValue: a(q), node: q })
                    }
                } else {
                    if (t == "select") {
                        g.push({ text: CQ.shared.Form.getLabelForField(q, l), value: p, name: p, enumeration: [], local: s, type: t, selector: r, defaultValue: undefined, node: q });
                        v = g[g.length - 1];
                        var n = q.getElementsByTagName("option");
                        for (var u = 0;
                            u < n.length;
                            u++) {
                                v.enumeration.push({ text: n[u].innerHTML, value: n[u].getAttribute("value"), defaultValue: a(n[u]), node: n[u] })
                        }
                    }
                }
            };
            var j = function (q, p, n) {
                if (q.nodeName.toLowerCase() == "div" && $CQ(q).children(".form_row").length > 0) {
                    p = true;
                    n = $CQ(q).attr("class").replace(/\s/g, ".")
                } if (q.getAttribute && q.getAttribute("name")) {
                    h(q, p, n)
                } for (var o = 0;
                    q.childNodes && o < q.childNodes.length;
                    o++) {
                        var r = q.childNodes[o];
                    if (r.nodeType == 1) {
                        j(r, p, n)
                    }
                }
            };
            j(m, false, undefined);
            return g
        }
    }
}();
CQ.shared.User = function (infoData) {
    return {
        data: null, language: null, userPropsPath: null, getUserPropsUrl: function () {
            if (!this.userPropsPath) {
                this.userPropsPath = CQ.shared.User.PROXY_URI
            } return this.userPropsPath
        }, load: function () {
            var url = this.getUserPropsUrl();
            url = CQ.shared.HTTP.noCaching(url);
            var response = CQ.shared.HTTP.get(url);
            if (CQ.shared.HTTP.isOk(response)) {
                this.data = CQ.shared.Util.eval(response)
            }
        }, init: function (infoData, force) {
            if (!this.initialized || force) {
                if (infoData) {
                    this.data = infoData
                } else {
                    this.load()
                } this.initialized = true
            } return this.data
        }, lazyInit: function () {
            this.lazyLoad = function () {
                this.load();
                this.initialized = true
            }
        }, isInitialized: function () {
            return this.initialized
        }, getLanguage: function () {
            if (!this.isInitialized() && this.lazyLoad) {
                this.lazyLoad.call(this)
            } this.language = this.data && this.data.preferences && this.data.preferences["language"] ? this.data.preferences["language"] : "en";
            return this.language
        }
    }
}();
CQ.shared.User.PROXY_URI = CQ.shared.HTTP.externalize("/libs/cq/security/userinfo" + CQ.shared.HTTP.EXTENSION_JSON);
CQ.shared.User.lazyInit();
CQ.shared.I18n.init({
    locale: function () {
        return document.documentElement.lang || CQ.shared.User.getLanguage()
    }, urlPrefix: "/libs/cq/i18n/dict."
});
/*! jQuery UI - v1.12.1 - 2016-09-14
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */
(function (a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        a(jQuery)
    }
}(function (al) {
    al.ui = al.ui || {};
    var z = al.ui.version = "1.12.1";
    /*!
     * jQuery UI Widget 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var J = 0;
    var am = Array.prototype.slice;
    al.cleanData = (function (aw) {
        return function (ax) {
            var az, aA, ay;
            for (ay = 0;
                (aA = ax[ay]) != null;
                ay++) {
                    try {
                        az = al._data(aA, "events");
                        if (az && az.remove) {
                            al(aA).triggerHandler("remove")
                        }
                    } catch (aB) { }
            } aw(ax)
        }
    })(al.cleanData);
    al.widget = function (aw, ax, aE) {
        var aC, az, aD;
        var ay = {};
        var aB = aw.split(".")[0];
        aw = aw.split(".")[1];
        var aA = aB + "-" + aw;
        if (!aE) {
            aE = ax;
            ax = al.Widget
        } if (al.isArray(aE)) {
            aE = al.extend.apply(null, [{}].concat(aE))
        } al.expr[":"][aA.toLowerCase()] = function (aF) {
            return !!al.data(aF, aA)
        };
        al[aB] = al[aB] || {};
        aC = al[aB][aw];
        az = al[aB][aw] = function (aF, aG) {
            if (!this._createWidget) {
                return new az(aF, aG)
            } if (arguments.length) {
                this._createWidget(aF, aG)
            }
        };
        al.extend(az, aC, { version: aE.version, _proto: al.extend({}, aE), _childConstructors: [] });
        aD = new ax();
        aD.options = al.widget.extend({}, aD.options);
        al.each(aE, function (aG, aF) {
            if (!al.isFunction(aF)) {
                ay[aG] = aF;
                return
            } ay[aG] = (function () {
                function aH() {
                    return ax.prototype[aG].apply(this, arguments)
                } function aI(aJ) {
                    return ax.prototype[aG].apply(this, aJ)
                } return function () {
                    var aL = this._super;
                    var aJ = this._superApply;
                    var aK;
                    this._super = aH;
                    this._superApply = aI;
                    aK = aF.apply(this, arguments);
                    this._super = aL;
                    this._superApply = aJ;
                    return aK
                }
            })()
        });
        az.prototype = al.widget.extend(aD, { widgetEventPrefix: aC ? (aD.widgetEventPrefix || aw) : aw }, ay, { constructor: az, namespace: aB, widgetName: aw, widgetFullName: aA });
        if (aC) {
            al.each(aC._childConstructors, function (aG, aH) {
                var aF = aH.prototype;
                al.widget(aF.namespace + "." + aF.widgetName, az, aH._proto)
            });
            delete aC._childConstructors
        } else {
            ax._childConstructors.push(az)
        } al.widget.bridge(aw, az);
        return az
    };
    al.widget.extend = function (aB) {
        var ax = am.call(arguments, 1);
        var aA = 0;
        var aw = ax.length;
        var ay;
        var az;
        for (;
            aA < aw;
            aA++) {
                for (ay in ax[aA]) {
                    az = ax[aA][ay];
                    if (ax[aA].hasOwnProperty(ay) && az !== undefined) {
                        if (al.isPlainObject(az)) {
                            aB[ay] = al.isPlainObject(aB[ay]) ? al.widget.extend({}, aB[ay], az) : al.widget.extend({}, az)
                        } else {
                            aB[ay] = az
                        }
                    }
                }
        } return aB
    };
    al.widget.bridge = function (ax, aw) {
        var ay = aw.prototype.widgetFullName || ax;
        al.fn[ax] = function (aB) {
            var az = typeof aB === "string";
            var aA = am.call(arguments, 1);
            var aC = this;
            if (az) {
                if (!this.length && aB === "instance") {
                    aC = undefined
                } else {
                    this.each(function () {
                        var aE;
                        var aD = al.data(this, ay);
                        if (aB === "instance") {
                            aC = aD;
                            return false
                        } if (!aD) {
                            return al.error("cannot call methods on " + ax + " prior to initialization; attempted to call method '" + aB + "'")
                        } if (!al.isFunction(aD[aB]) || aB.charAt(0) === "_") {
                            return al.error("no such method '" + aB + "' for " + ax + " widget instance")
                        } aE = aD[aB].apply(aD, aA);
                        if (aE !== aD && aE !== undefined) {
                            aC = aE && aE.jquery ? aC.pushStack(aE.get()) : aE;
                            return false
                        }
                    })
                }
            } else {
                if (aA.length) {
                    aB = al.widget.extend.apply(null, [aB].concat(aA))
                } this.each(function () {
                    var aD = al.data(this, ay);
                    if (aD) {
                        aD.option(aB || {});
                        if (aD._init) {
                            aD._init()
                        }
                    } else {
                        al.data(this, ay, new aw(aB, this))
                    }
                })
            } return aC
        }
    };
    al.Widget = function () { };
    al.Widget._childConstructors = [];
    al.Widget.prototype = {
        widgetName: "widget", widgetEventPrefix: "", defaultElement: "<div>", options: { classes: {}, disabled: false, create: null }, _createWidget: function (aw, ax) {
            ax = al(ax || this.defaultElement || this)[0];
            this.element = al(ax);
            this.uuid = J++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.bindings = al();
            this.hoverable = al();
            this.focusable = al();
            this.classesElementLookup = {};
            if (ax !== this) {
                al.data(ax, this.widgetFullName, this);
                this._on(true, this.element, {
                    remove: function (ay) {
                        if (ay.target === ax) {
                            this.destroy()
                        }
                    }
                });
                this.document = al(ax.style ? ax.ownerDocument : ax.document || ax);
                this.window = al(this.document[0].defaultView || this.document[0].parentWindow)
            } this.options = al.widget.extend({}, this.options, this._getCreateOptions(), aw);
            this._create();
            if (this.options.disabled) {
                this._setOptionDisabled(this.options.disabled)
            } this._trigger("create", null, this._getCreateEventData());
            this._init()
        }, _getCreateOptions: function () {
            return {}
        }, _getCreateEventData: al.noop, _create: al.noop, _init: al.noop, destroy: function () {
            var aw = this;
            this._destroy();
            al.each(this.classesElementLookup, function (ax, ay) {
                aw._removeClass(ay, ax)
            });
            this.element.off(this.eventNamespace).removeData(this.widgetFullName);
            this.widget().off(this.eventNamespace).removeAttr("aria-disabled");
            this.bindings.off(this.eventNamespace)
        }, _destroy: al.noop, widget: function () {
            return this.element
        }, option: function (az, aA) {
            var aw = az;
            var aB;
            var ay;
            var ax;
            if (arguments.length === 0) {
                return al.widget.extend({}, this.options)
            } if (typeof az === "string") {
                aw = {};
                aB = az.split(".");
                az = aB.shift();
                if (aB.length) {
                    ay = aw[az] = al.widget.extend({}, this.options[az]);
                    for (ax = 0;
                        ax < aB.length - 1;
                        ax++) {
                            ay[aB[ax]] = ay[aB[ax]] || {};
                        ay = ay[aB[ax]]
                    } az = aB.pop();
                    if (arguments.length === 1) {
                        return ay[az] === undefined ? null : ay[az]
                    } ay[az] = aA
                } else {
                    if (arguments.length === 1) {
                        return this.options[az] === undefined ? null : this.options[az]
                    } aw[az] = aA
                }
            } this._setOptions(aw);
            return this
        }, _setOptions: function (aw) {
            var ax;
            for (ax in aw) {
                this._setOption(ax, aw[ax])
            } return this
        }, _setOption: function (aw, ax) {
            if (aw === "classes") {
                this._setOptionClasses(ax)
            } this.options[aw] = ax;
            if (aw === "disabled") {
                this._setOptionDisabled(ax)
            } return this
        }, _setOptionClasses: function (az) {
            var aw, ay, ax;
            for (aw in az) {
                ax = this.classesElementLookup[aw];
                if (az[aw] === this.options.classes[aw] || !ax || !ax.length) {
                    continue
                } ay = al(ax.get());
                this._removeClass(ax, aw);
                ay.addClass(this._classes({ element: ay, keys: aw, classes: az, add: true }))
            }
        }, _setOptionDisabled: function (aw) {
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!aw);
            if (aw) {
                this._removeClass(this.hoverable, null, "ui-state-hover");
                this._removeClass(this.focusable, null, "ui-state-focus")
            }
        }, enable: function () {
            return this._setOptions({ disabled: false })
        }, disable: function () {
            return this._setOptions({ disabled: true })
        }, _classes: function (aw) {
            var ax = [];
            var ay = this;
            aw = al.extend({ element: this.element, classes: this.options.classes || {} }, aw);
            function az(aB, aD) {
                var aC, aA;
                for (aA = 0;
                    aA < aB.length;
                    aA++) {
                        aC = ay.classesElementLookup[aB[aA]] || al();
                    if (aw.add) {
                        aC = al(al.unique(aC.get().concat(aw.element.get())))
                    } else {
                        aC = al(aC.not(aw.element).get())
                    } ay.classesElementLookup[aB[aA]] = aC;
                    ax.push(aB[aA]);
                    if (aD && aw.classes[aB[aA]]) {
                        ax.push(aw.classes[aB[aA]])
                    }
                }
            } this._on(aw.element, { remove: "_untrackClassesElement" });
            if (aw.keys) {
                az(aw.keys.match(/\S+/g) || [], true)
            } if (aw.extra) {
                az(aw.extra.match(/\S+/g) || [])
            } return ax.join(" ")
        }, _untrackClassesElement: function (ax) {
            var aw = this;
            al.each(aw.classesElementLookup, function (ay, az) {
                if (al.inArray(ax.target, az) !== -1) {
                    aw.classesElementLookup[ay] = al(az.not(ax.target).get())
                }
            })
        }, _removeClass: function (ax, ay, aw) {
            return this._toggleClass(ax, ay, aw, false)
        }, _addClass: function (ax, ay, aw) {
            return this._toggleClass(ax, ay, aw, true)
        }, _toggleClass: function (az, aA, aw, aB) {
            aB = (typeof aB === "boolean") ? aB : aw;
            var ax = (typeof az === "string" || az === null), ay = { extra: ax ? aA : aw, keys: ax ? az : aA, element: ax ? this.element : az, add: aB };
            ay.element.toggleClass(this._classes(ay), aB);
            return this
        }, _on: function (az, ay, ax) {
            var aA;
            var aw = this;
            if (typeof az !== "boolean") {
                ax = ay;
                ay = az;
                az = false
            } if (!ax) {
                ax = ay;
                ay = this.element;
                aA = this.widget()
            } else {
                ay = aA = al(ay);
                this.bindings = this.bindings.add(ay)
            } al.each(ax, function (aG, aF) {
                function aD() {
                    if (!az && (aw.options.disabled === true || al(this).hasClass("ui-state-disabled"))) {
                        return
                    } return (typeof aF === "string" ? aw[aF] : aF).apply(aw, arguments)
                } if (typeof aF !== "string") {
                    aD.guid = aF.guid = aF.guid || aD.guid || al.guid++
                } var aE = aG.match(/^([\w:-]*)\s*(.*)$/);
                var aC = aE[1] + aw.eventNamespace;
                var aB = aE[2];
                if (aB) {
                    aA.on(aC, aB, aD)
                } else {
                    ay.on(aC, aD)
                }
            })
        }, _off: function (ax, aw) {
            aw = (aw || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
            ax.off(aw).off(aw);
            this.bindings = al(this.bindings.not(ax).get());
            this.focusable = al(this.focusable.not(ax).get());
            this.hoverable = al(this.hoverable.not(ax).get())
        }, _delay: function (az, ay) {
            function ax() {
                return (typeof az === "string" ? aw[az] : az).apply(aw, arguments)
            } var aw = this;
            return setTimeout(ax, ay || 0)
        }, _hoverable: function (aw) {
            this.hoverable = this.hoverable.add(aw);
            this._on(aw, {
                mouseenter: function (ax) {
                    this._addClass(al(ax.currentTarget), null, "ui-state-hover")
                }, mouseleave: function (ax) {
                    this._removeClass(al(ax.currentTarget), null, "ui-state-hover")
                }
            })
        }, _focusable: function (aw) {
            this.focusable = this.focusable.add(aw);
            this._on(aw, {
                focusin: function (ax) {
                    this._addClass(al(ax.currentTarget), null, "ui-state-focus")
                }, focusout: function (ax) {
                    this._removeClass(al(ax.currentTarget), null, "ui-state-focus")
                }
            })
        }, _trigger: function (aw, ax, ay) {
            var aB, aA;
            var az = this.options[aw];
            ay = ay || {};
            ax = al.Event(ax);
            ax.type = (aw === this.widgetEventPrefix ? aw : this.widgetEventPrefix + aw).toLowerCase();
            ax.target = this.element[0];
            aA = ax.originalEvent;
            if (aA) {
                for (aB in aA) {
                    if (!(aB in ax)) {
                        ax[aB] = aA[aB]
                    }
                }
            } this.element.trigger(ax, ay);
            return !(al.isFunction(az) && az.apply(this.element[0], [ax].concat(ay)) === false || ax.isDefaultPrevented())
        }
    };
    al.each({ show: "fadeIn", hide: "fadeOut" }, function (ax, aw) {
        al.Widget.prototype["_" + ax] = function (aA, az, aC) {
            if (typeof az === "string") {
                az = { effect: az }
            } var aB;
            var ay = !az ? ax : az === true || typeof az === "number" ? aw : az.effect || aw;
            az = az || {};
            if (typeof az === "number") {
                az = { duration: az }
            } aB = !al.isEmptyObject(az);
            az.complete = aC;
            if (az.delay) {
                aA.delay(az.delay)
            } if (aB && al.effects && al.effects.effect[ay]) {
                aA[ax](az)
            } else {
                if (ay !== ax && aA[ay]) {
                    aA[ay](az.duration, az.easing, aC)
                } else {
                    aA.queue(function (aD) {
                        al(this)[ax]();
                        if (aC) {
                            aC.call(aA[0])
                        } aD()
                    })
                }
            }
        }
    });
    var m = al.widget;
    /*!
     * jQuery UI Position 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     *
     * http://api.jqueryui.com/position/
     */
    (function () {
        var aD, aE = Math.max, aH = Math.abs, ay = /left|center|right/, aB = /top|center|bottom/, aw = /[\+\-]\d+(\.[\d]+)?%?/, aF = /^\w+/, ax = /%$/, aA = al.fn.position;
        function aG(aK, aJ, aI) {
            return [parseFloat(aK[0]) * (ax.test(aK[0]) ? aJ / 100 : 1), parseFloat(aK[1]) * (ax.test(aK[1]) ? aI / 100 : 1)]
        } function aC(aI, aJ) {
            return parseInt(al.css(aI, aJ), 10) || 0
        } function az(aJ) {
            var aI = aJ[0];
            if (aI.nodeType === 9) {
                return { width: aJ.width(), height: aJ.height(), offset: { top: 0, left: 0 } }
            } if (al.isWindow(aI)) {
                return { width: aJ.width(), height: aJ.height(), offset: { top: aJ.scrollTop(), left: aJ.scrollLeft() } }
            } if (aI.preventDefault) {
                return { width: 0, height: 0, offset: { top: aI.pageY, left: aI.pageX } }
            } return { width: aJ.outerWidth(), height: aJ.outerHeight(), offset: aJ.offset() }
        } al.position = {
            scrollbarWidth: function () {
                if (aD !== undefined) {
                    return aD
                } var aJ, aI, aL = al("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), aK = aL.children()[0];
                al("body").append(aL);
                aJ = aK.offsetWidth;
                aL.css("overflow", "scroll");
                aI = aK.offsetWidth;
                if (aJ === aI) {
                    aI = aL[0].clientWidth
                } aL.remove();
                return (aD = aJ - aI)
            }, getScrollInfo: function (aM) {
                var aL = aM.isWindow || aM.isDocument ? "" : aM.element.css("overflow-x"), aK = aM.isWindow || aM.isDocument ? "" : aM.element.css("overflow-y"), aJ = aL === "scroll" || (aL === "auto" && aM.width < aM.element[0].scrollWidth), aI = aK === "scroll" || (aK === "auto" && aM.height < aM.element[0].scrollHeight);
                return { width: aI ? al.position.scrollbarWidth() : 0, height: aJ ? al.position.scrollbarWidth() : 0 }
            }, getWithinInfo: function (aK) {
                var aL = al(aK || window), aI = al.isWindow(aL[0]), aM = !!aL[0] && aL[0].nodeType === 9, aJ = !aI && !aM;
                return { element: aL, isWindow: aI, isDocument: aM, offset: aJ ? al(aK).offset() : { left: 0, top: 0 }, scrollLeft: aL.scrollLeft(), scrollTop: aL.scrollTop(), width: aL.outerWidth(), height: aL.outerHeight() }
            }
        };
        al.fn.position = function (aS) {
            if (!aS || !aS.of) {
                return aA.apply(this, arguments)
            } aS = al.extend({}, aS);
            var aT, aP, aN, aR, aM, aI, aO = al(aS.of), aL = al.position.getWithinInfo(aS.within), aJ = al.position.getScrollInfo(aL), aQ = (aS.collision || "flip").split(" "), aK = {};
            aI = az(aO);
            if (aO[0].preventDefault) {
                aS.at = "left top"
            } aP = aI.width;
            aN = aI.height;
            aR = aI.offset;
            aM = al.extend({}, aR);
            al.each(["my", "at"], function () {
                var aW = (aS[this] || "").split(" "), aV, aU;
                if (aW.length === 1) {
                    aW = ay.test(aW[0]) ? aW.concat(["center"]) : aB.test(aW[0]) ? ["center"].concat(aW) : ["center", "center"]
                } aW[0] = ay.test(aW[0]) ? aW[0] : "center";
                aW[1] = aB.test(aW[1]) ? aW[1] : "center";
                aV = aw.exec(aW[0]);
                aU = aw.exec(aW[1]);
                aK[this] = [aV ? aV[0] : 0, aU ? aU[0] : 0];
                aS[this] = [aF.exec(aW[0])[0], aF.exec(aW[1])[0]]
            });
            if (aQ.length === 1) {
                aQ[1] = aQ[0]
            } if (aS.at[0] === "right") {
                aM.left += aP
            } else {
                if (aS.at[0] === "center") {
                    aM.left += aP / 2
                }
            } if (aS.at[1] === "bottom") {
                aM.top += aN
            } else {
                if (aS.at[1] === "center") {
                    aM.top += aN / 2
                }
            } aT = aG(aK.at, aP, aN);
            aM.left += aT[0];
            aM.top += aT[1];
            return this.each(function () {
                var aV, a4, aX = al(this), aZ = aX.outerWidth(), aW = aX.outerHeight(), aY = aC(this, "marginLeft"), aU = aC(this, "marginTop"), a3 = aZ + aY + aC(this, "marginRight") + aJ.width, a2 = aW + aU + aC(this, "marginBottom") + aJ.height, a0 = al.extend({}, aM), a1 = aG(aK.my, aX.outerWidth(), aX.outerHeight());
                if (aS.my[0] === "right") {
                    a0.left -= aZ
                } else {
                    if (aS.my[0] === "center") {
                        a0.left -= aZ / 2
                    }
                } if (aS.my[1] === "bottom") {
                    a0.top -= aW
                } else {
                    if (aS.my[1] === "center") {
                        a0.top -= aW / 2
                    }
                } a0.left += a1[0];
                a0.top += a1[1];
                aV = { marginLeft: aY, marginTop: aU };
                al.each(["left", "top"], function (a6, a5) {
                    if (al.ui.position[aQ[a6]]) {
                        al.ui.position[aQ[a6]][a5](a0, { targetWidth: aP, targetHeight: aN, elemWidth: aZ, elemHeight: aW, collisionPosition: aV, collisionWidth: a3, collisionHeight: a2, offset: [aT[0] + a1[0], aT[1] + a1[1]], my: aS.my, at: aS.at, within: aL, elem: aX })
                    }
                });
                if (aS.using) {
                    a4 = function (a8) {
                        var ba = aR.left - a0.left, a7 = ba + aP - aZ, a9 = aR.top - a0.top, a6 = a9 + aN - aW, a5 = { target: { element: aO, left: aR.left, top: aR.top, width: aP, height: aN }, element: { element: aX, left: a0.left, top: a0.top, width: aZ, height: aW }, horizontal: a7 < 0 ? "left" : ba > 0 ? "right" : "center", vertical: a6 < 0 ? "top" : a9 > 0 ? "bottom" : "middle" };
                        if (aP < aZ && aH(ba + a7) < aP) {
                            a5.horizontal = "center"
                        } if (aN < aW && aH(a9 + a6) < aN) {
                            a5.vertical = "middle"
                        } if (aE(aH(ba), aH(a7)) > aE(aH(a9), aH(a6))) {
                            a5.important = "horizontal"
                        } else {
                            a5.important = "vertical"
                        } aS.using.call(this, a8, a5)
                    }
                } aX.offset(al.extend(a0, { using: a4 }))
            })
        };
        al.ui.position = {
            fit: {
                left: function (aM, aL) {
                    var aK = aL.within, aO = aK.isWindow ? aK.scrollLeft : aK.offset.left, aQ = aK.width, aN = aM.left - aL.collisionPosition.marginLeft, aP = aO - aN, aJ = aN + aL.collisionWidth - aQ - aO, aI;
                    if (aL.collisionWidth > aQ) {
                        if (aP > 0 && aJ <= 0) {
                            aI = aM.left + aP + aL.collisionWidth - aQ - aO;
                            aM.left += aP - aI
                        } else {
                            if (aJ > 0 && aP <= 0) {
                                aM.left = aO
                            } else {
                                if (aP > aJ) {
                                    aM.left = aO + aQ - aL.collisionWidth
                                } else {
                                    aM.left = aO
                                }
                            }
                        }
                    } else {
                        if (aP > 0) {
                            aM.left += aP
                        } else {
                            if (aJ > 0) {
                                aM.left -= aJ
                            } else {
                                aM.left = aE(aM.left - aN, aM.left)
                            }
                        }
                    }
                }, top: function (aL, aK) {
                    var aJ = aK.within, aP = aJ.isWindow ? aJ.scrollTop : aJ.offset.top, aQ = aK.within.height, aN = aL.top - aK.collisionPosition.marginTop, aO = aP - aN, aM = aN + aK.collisionHeight - aQ - aP, aI;
                    if (aK.collisionHeight > aQ) {
                        if (aO > 0 && aM <= 0) {
                            aI = aL.top + aO + aK.collisionHeight - aQ - aP;
                            aL.top += aO - aI
                        } else {
                            if (aM > 0 && aO <= 0) {
                                aL.top = aP
                            } else {
                                if (aO > aM) {
                                    aL.top = aP + aQ - aK.collisionHeight
                                } else {
                                    aL.top = aP
                                }
                            }
                        }
                    } else {
                        if (aO > 0) {
                            aL.top += aO
                        } else {
                            if (aM > 0) {
                                aL.top -= aM
                            } else {
                                aL.top = aE(aL.top - aN, aL.top)
                            }
                        }
                    }
                }
            }, flip: {
                left: function (aO, aN) {
                    var aM = aN.within, aS = aM.offset.left + aM.scrollLeft, aV = aM.width, aK = aM.isWindow ? aM.scrollLeft : aM.offset.left, aP = aO.left - aN.collisionPosition.marginLeft, aT = aP - aK, aJ = aP + aN.collisionWidth - aV - aK, aR = aN.my[0] === "left" ? -aN.elemWidth : aN.my[0] === "right" ? aN.elemWidth : 0, aU = aN.at[0] === "left" ? aN.targetWidth : aN.at[0] === "right" ? -aN.targetWidth : 0, aL = -2 * aN.offset[0], aI, aQ;
                    if (aT < 0) {
                        aI = aO.left + aR + aU + aL + aN.collisionWidth - aV - aS;
                        if (aI < 0 || aI < aH(aT)) {
                            aO.left += aR + aU + aL
                        }
                    } else {
                        if (aJ > 0) {
                            aQ = aO.left - aN.collisionPosition.marginLeft + aR + aU + aL - aK;
                            if (aQ > 0 || aH(aQ) < aJ) {
                                aO.left += aR + aU + aL
                            }
                        }
                    }
                }, top: function (aN, aM) {
                    var aL = aM.within, aU = aL.offset.top + aL.scrollTop, aV = aL.height, aI = aL.isWindow ? aL.scrollTop : aL.offset.top, aP = aN.top - aM.collisionPosition.marginTop, aR = aP - aI, aO = aP + aM.collisionHeight - aV - aI, aS = aM.my[1] === "top", aQ = aS ? -aM.elemHeight : aM.my[1] === "bottom" ? aM.elemHeight : 0, aW = aM.at[1] === "top" ? aM.targetHeight : aM.at[1] === "bottom" ? -aM.targetHeight : 0, aK = -2 * aM.offset[1], aT, aJ;
                    if (aR < 0) {
                        aJ = aN.top + aQ + aW + aK + aM.collisionHeight - aV - aU;
                        if (aJ < 0 || aJ < aH(aR)) {
                            aN.top += aQ + aW + aK
                        }
                    } else {
                        if (aO > 0) {
                            aT = aN.top - aM.collisionPosition.marginTop + aQ + aW + aK - aI;
                            if (aT > 0 || aH(aT) < aO) {
                                aN.top += aQ + aW + aK
                            }
                        }
                    }
                }
            }, flipfit: {
                left: function () {
                    al.ui.position.flip.left.apply(this, arguments);
                    al.ui.position.fit.left.apply(this, arguments)
                }, top: function () {
                    al.ui.position.flip.top.apply(this, arguments);
                    al.ui.position.fit.top.apply(this, arguments)
                }
            }
        }
    })();
    var ai = al.ui.position;
    /*!
     * jQuery UI :data 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var r = al.extend(al.expr[":"], {
        data: al.expr.createPseudo ? al.expr.createPseudo(function (aw) {
            return function (ax) {
                return !!al.data(ax, aw)
            }
        }) : function (ay, ax, aw) {
            return !!al.data(ay, aw[3])
        }
    });
    /*!
     * jQuery UI Disable Selection 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var n = al.fn.extend({
        disableSelection: (function () {
            var aw = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
            return function () {
                return this.on(aw + ".ui-disableSelection", function (ax) {
                    ax.preventDefault()
                })
            }
        })(), enableSelection: function () {
            return this.off(".ui-disableSelection")
        }
    });
    /*!
     * jQuery UI Effects 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var u = "ui-effects-", ae = "ui-effects-style", aq = "ui-effects-animated", b = al;
    al.effects = { effect: {} };
    /*!
     * jQuery Color Animations v2.1.2
     * https://github.com/jquery/jquery-color
     *
     * Copyright 2014 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     *
     * Date: Wed Jan 16 08:47:09 2013 -0600
     */
    (function (aK, az) {
        var aG = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", aD = /^([\-+])=\s*(\d+\.?\d*)/, aC = [{
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function (aL) {
                return [aL[1], aL[2], aL[3], aL[4]]
            }
        }, {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function (aL) {
                return [aL[1] * 2.55, aL[2] * 2.55, aL[3] * 2.55, aL[4]]
            }
        }, {
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/, parse: function (aL) {
                return [parseInt(aL[1], 16), parseInt(aL[2], 16), parseInt(aL[3], 16)]
            }
        }, {
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/, parse: function (aL) {
                return [parseInt(aL[1] + aL[1], 16), parseInt(aL[2] + aL[2], 16), parseInt(aL[3] + aL[3], 16)]
            }
        }, {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, space: "hsla", parse: function (aL) {
                return [aL[1], aL[2] / 100, aL[3] / 100, aL[4]]
            }
        }], aA = aK.Color = function (aM, aN, aL, aO) {
            return new aK.Color.fn.parse(aM, aN, aL, aO)
        }, aF = { rgba: { props: { red: { idx: 0, type: "byte" }, green: { idx: 1, type: "byte" }, blue: { idx: 2, type: "byte" } } }, hsla: { props: { hue: { idx: 0, type: "degrees" }, saturation: { idx: 1, type: "percent" }, lightness: { idx: 2, type: "percent" } } } }, aJ = { "byte": { floor: true, max: 255 }, percent: { max: 1 }, degrees: { mod: 360, floor: true } }, aI = aA.support = {}, ax = aK("<p>")[0], aw, aH = aK.each;
        ax.style.cssText = "background-color:rgba(1,1,1,.5)";
        aI.rgba = ax.style.backgroundColor.indexOf("rgba") > -1;
        aH(aF, function (aL, aM) {
            aM.cache = "_" + aL;
            aM.props.alpha = { idx: 3, type: "percent", def: 1 }
        });
        function aE(aM, aO, aN) {
            var aL = aJ[aO.type] || {};
            if (aM == null) {
                return (aN || !aO.def) ? null : aO.def
            } aM = aL.floor ? ~~aM : parseFloat(aM);
            if (isNaN(aM)) {
                return aO.def
            } if (aL.mod) {
                return (aM + aL.mod) % aL.mod
            } return 0 > aM ? 0 : aL.max < aM ? aL.max : aM
        } function aB(aL) {
            var aN = aA(), aM = aN._rgba = [];
            aL = aL.toLowerCase();
            aH(aC, function (aS, aT) {
                var aQ, aR = aT.re.exec(aL), aP = aR && aT.parse(aR), aO = aT.space || "rgba";
                if (aP) {
                    aQ = aN[aO](aP);
                    aN[aF[aO].cache] = aQ[aF[aO].cache];
                    aM = aN._rgba = aQ._rgba;
                    return false
                }
            });
            if (aM.length) {
                if (aM.join() === "0,0,0,0") {
                    aK.extend(aM, aw.transparent)
                } return aN
            } return aw[aL]
        } aA.fn = aK.extend(aA.prototype, {
            parse: function (aR, aP, aL, aQ) {
                if (aR === az) {
                    this._rgba = [null, null, null, null];
                    return this
                } if (aR.jquery || aR.nodeType) {
                    aR = aK(aR).css(aP);
                    aP = az
                } var aO = this, aN = aK.type(aR), aM = this._rgba = [];
                if (aP !== az) {
                    aR = [aR, aP, aL, aQ];
                    aN = "array"
                } if (aN === "string") {
                    return this.parse(aB(aR) || aw._default)
                } if (aN === "array") {
                    aH(aF.rgba.props, function (aS, aT) {
                        aM[aT.idx] = aE(aR[aT.idx], aT)
                    });
                    return this
                } if (aN === "object") {
                    if (aR instanceof aA) {
                        aH(aF, function (aS, aT) {
                            if (aR[aT.cache]) {
                                aO[aT.cache] = aR[aT.cache].slice()
                            }
                        })
                    } else {
                        aH(aF, function (aT, aU) {
                            var aS = aU.cache;
                            aH(aU.props, function (aV, aW) {
                                if (!aO[aS] && aU.to) {
                                    if (aV === "alpha" || aR[aV] == null) {
                                        return
                                    } aO[aS] = aU.to(aO._rgba)
                                } aO[aS][aW.idx] = aE(aR[aV], aW, true)
                            });
                            if (aO[aS] && aK.inArray(null, aO[aS].slice(0, 3)) < 0) {
                                aO[aS][3] = 1;
                                if (aU.from) {
                                    aO._rgba = aU.from(aO[aS])
                                }
                            }
                        })
                    } return this
                }
            }, is: function (aN) {
                var aL = aA(aN), aO = true, aM = this;
                aH(aF, function (aP, aR) {
                    var aS, aQ = aL[aR.cache];
                    if (aQ) {
                        aS = aM[aR.cache] || aR.to && aR.to(aM._rgba) || [];
                        aH(aR.props, function (aT, aU) {
                            if (aQ[aU.idx] != null) {
                                aO = (aQ[aU.idx] === aS[aU.idx]);
                                return aO
                            }
                        })
                    } return aO
                });
                return aO
            }, _space: function () {
                var aL = [], aM = this;
                aH(aF, function (aN, aO) {
                    if (aM[aO.cache]) {
                        aL.push(aN)
                    }
                });
                return aL.pop()
            }, transition: function (aM, aS) {
                var aN = aA(aM), aO = aN._space(), aP = aF[aO], aQ = this.alpha() === 0 ? aA("transparent") : this, aR = aQ[aP.cache] || aP.to(aQ._rgba), aL = aR.slice();
                aN = aN[aP.cache];
                aH(aP.props, function (aW, aY) {
                    var aV = aY.idx, aU = aR[aV], aT = aN[aV], aX = aJ[aY.type] || {};
                    if (aT === null) {
                        return
                    } if (aU === null) {
                        aL[aV] = aT
                    } else {
                        if (aX.mod) {
                            if (aT - aU > aX.mod / 2) {
                                aU += aX.mod
                            } else {
                                if (aU - aT > aX.mod / 2) {
                                    aU -= aX.mod
                                }
                            }
                        } aL[aV] = aE((aT - aU) * aS + aU, aY)
                    }
                });
                return this[aO](aL)
            }, blend: function (aO) {
                if (this._rgba[3] === 1) {
                    return this
                } var aN = this._rgba.slice(), aM = aN.pop(), aL = aA(aO)._rgba;
                return aA(aK.map(aN, function (aP, aQ) {
                    return (1 - aM) * aL[aQ] + aM * aP
                }))
            }, toRgbaString: function () {
                var aM = "rgba(", aL = aK.map(this._rgba, function (aN, aO) {
                    return aN == null ? (aO > 2 ? 1 : 0) : aN
                });
                if (aL[3] === 1) {
                    aL.pop();
                    aM = "rgb("
                } return aM + aL.join() + ")"
            }, toHslaString: function () {
                var aM = "hsla(", aL = aK.map(this.hsla(), function (aN, aO) {
                    if (aN == null) {
                        aN = aO > 2 ? 1 : 0
                    } if (aO && aO < 3) {
                        aN = Math.round(aN * 100) + "%"
                    } return aN
                });
                if (aL[3] === 1) {
                    aL.pop();
                    aM = "hsl("
                } return aM + aL.join() + ")"
            }, toHexString: function (aL) {
                var aM = this._rgba.slice(), aN = aM.pop();
                if (aL) {
                    aM.push(~~(aN * 255))
                } return "#" + aK.map(aM, function (aO) {
                    aO = (aO || 0).toString(16);
                    return aO.length === 1 ? "0" + aO : aO
                }).join("")
            }, toString: function () {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString()
            }
        });
        aA.fn.parse.prototype = aA.fn;
        function ay(aN, aM, aL) {
            aL = (aL + 1) % 1;
            if (aL * 6 < 1) {
                return aN + (aM - aN) * aL * 6
            } if (aL * 2 < 1) {
                return aM
            } if (aL * 3 < 2) {
                return aN + (aM - aN) * ((2 / 3) - aL) * 6
            } return aN
        } aF.hsla.to = function (aN) {
            if (aN[0] == null || aN[1] == null || aN[2] == null) {
                return [null, null, null, aN[3]]
            } var aL = aN[0] / 255, aQ = aN[1] / 255, aR = aN[2] / 255, aT = aN[3], aS = Math.max(aL, aQ, aR), aO = Math.min(aL, aQ, aR), aU = aS - aO, aV = aS + aO, aM = aV * 0.5, aP, aW;
            if (aO === aS) {
                aP = 0
            } else {
                if (aL === aS) {
                    aP = (60 * (aQ - aR) / aU) + 360
                } else {
                    if (aQ === aS) {
                        aP = (60 * (aR - aL) / aU) + 120
                    } else {
                        aP = (60 * (aL - aQ) / aU) + 240
                    }
                }
            } if (aU === 0) {
                aW = 0
            } else {
                if (aM <= 0.5) {
                    aW = aU / aV
                } else {
                    aW = aU / (2 - aV)
                }
            } return [Math.round(aP) % 360, aW, aM, aT == null ? 1 : aT]
        };
        aF.hsla.from = function (aP) {
            if (aP[0] == null || aP[1] == null || aP[2] == null) {
                return [null, null, null, aP[3]]
            } var aO = aP[0] / 360, aN = aP[1], aM = aP[2], aL = aP[3], aQ = aM <= 0.5 ? aM * (1 + aN) : aM + aN - aM * aN, aR = 2 * aM - aQ;
            return [Math.round(ay(aR, aQ, aO + (1 / 3)) * 255), Math.round(ay(aR, aQ, aO) * 255), Math.round(ay(aR, aQ, aO - (1 / 3)) * 255), aL]
        };
        aH(aF, function (aM, aO) {
            var aN = aO.props, aL = aO.cache, aQ = aO.to, aP = aO.from;
            aA.fn[aM] = function (aV) {
                if (aQ && !this[aL]) {
                    this[aL] = aQ(this._rgba)
                } if (aV === az) {
                    return this[aL].slice()
                } var aS, aU = aK.type(aV), aR = (aU === "array" || aU === "object") ? aV : arguments, aT = this[aL].slice();
                aH(aN, function (aW, aY) {
                    var aX = aR[aU === "object" ? aW : aY.idx];
                    if (aX == null) {
                        aX = aT[aY.idx]
                    } aT[aY.idx] = aE(aX, aY)
                });
                if (aP) {
                    aS = aA(aP(aT));
                    aS[aL] = aT;
                    return aS
                } else {
                    return aA(aT)
                }
            };
            aH(aN, function (aR, aS) {
                if (aA.fn[aR]) {
                    return
                } aA.fn[aR] = function (aW) {
                    var aY = aK.type(aW), aV = (aR === "alpha" ? (this._hsla ? "hsla" : "rgba") : aM), aU = this[aV](), aX = aU[aS.idx], aT;
                    if (aY === "undefined") {
                        return aX
                    } if (aY === "function") {
                        aW = aW.call(this, aX);
                        aY = aK.type(aW)
                    } if (aW == null && aS.empty) {
                        return this
                    } if (aY === "string") {
                        aT = aD.exec(aW);
                        if (aT) {
                            aW = aX + parseFloat(aT[2]) * (aT[1] === "+" ? 1 : -1)
                        }
                    } aU[aS.idx] = aW;
                    return this[aV](aU)
                }
            })
        });
        aA.hook = function (aM) {
            var aL = aM.split(" ");
            aH(aL, function (aN, aO) {
                aK.cssHooks[aO] = {
                    set: function (aS, aT) {
                        var aQ, aR, aP = "";
                        if (aT !== "transparent" && (aK.type(aT) !== "string" || (aQ = aB(aT)))) {
                            aT = aA(aQ || aT);
                            if (!aI.rgba && aT._rgba[3] !== 1) {
                                aR = aO === "backgroundColor" ? aS.parentNode : aS;
                                while ((aP === "" || aP === "transparent") && aR && aR.style) {
                                    try {
                                        aP = aK.css(aR, "backgroundColor");
                                        aR = aR.parentNode
                                    } catch (aU) { }
                                } aT = aT.blend(aP && aP !== "transparent" ? aP : "_default")
                            } aT = aT.toRgbaString()
                        } try {
                            aS.style[aO] = aT
                        } catch (aU) { }
                    }
                };
                aK.fx.step[aO] = function (aP) {
                    if (!aP.colorInit) {
                        aP.start = aA(aP.elem, aO);
                        aP.end = aA(aP.end);
                        aP.colorInit = true
                    } aK.cssHooks[aO].set(aP.elem, aP.start.transition(aP.end, aP.pos))
                }
            })
        };
        aA.hook(aG);
        aK.cssHooks.borderColor = {
            expand: function (aM) {
                var aL = {};
                aH(["Top", "Right", "Bottom", "Left"], function (aO, aN) {
                    aL["border" + aN + "Color"] = aM
                });
                return aL
            }
        };
        aw = aK.Color.names = { aqua: "#00ffff", black: "#000000", blue: "#0000ff", fuchsia: "#ff00ff", gray: "#808080", green: "#008000", lime: "#00ff00", maroon: "#800000", navy: "#000080", olive: "#808000", purple: "#800080", red: "#ff0000", silver: "#c0c0c0", teal: "#008080", white: "#ffffff", yellow: "#ffff00", transparent: [null, null, null, 0], _default: "#ffffff" }
    })(b);
    (function () {
        var ax = ["add", "remove", "toggle"], ay = { border: 1, borderBottom: 1, borderColor: 1, borderLeft: 1, borderRight: 1, borderTop: 1, borderWidth: 1, margin: 1, padding: 1 };
        al.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function (aA, aB) {
            al.fx.step[aB] = function (aC) {
                if (aC.end !== "none" && !aC.setAttr || aC.pos === 1 && !aC.setAttr) {
                    b.style(aC.elem, aB, aC.end);
                    aC.setAttr = true
                }
            }
        });
        function az(aE) {
            var aB, aA, aC = aE.ownerDocument.defaultView ? aE.ownerDocument.defaultView.getComputedStyle(aE, null) : aE.currentStyle, aD = {};
            if (aC && aC.length && aC[0] && aC[aC[0]]) {
                aA = aC.length;
                while (aA--) {
                    aB = aC[aA];
                    if (typeof aC[aB] === "string") {
                        aD[al.camelCase(aB)] = aC[aB]
                    }
                }
            } else {
                for (aB in aC) {
                    if (typeof aC[aB] === "string") {
                        aD[aB] = aC[aB]
                    }
                }
            } return aD
        } function aw(aA, aC) {
            var aE = {}, aB, aD;
            for (aB in aC) {
                aD = aC[aB];
                if (aA[aB] !== aD) {
                    if (!ay[aB]) {
                        if (al.fx.step[aB] || !isNaN(parseFloat(aD))) {
                            aE[aB] = aD
                        }
                    }
                }
            } return aE
        } if (!al.fn.addBack) {
            al.fn.addBack = function (aA) {
                return this.add(aA == null ? this.prevObject : this.prevObject.filter(aA))
            }
        } al.effects.animateClass = function (aA, aB, aE, aD) {
            var aC = al.speed(aB, aE, aD);
            return this.queue(function () {
                var aH = al(this), aF = aH.attr("class") || "", aG, aI = aC.children ? aH.find("*").addBack() : aH;
                aI = aI.map(function () {
                    var aJ = al(this);
                    return { el: aJ, start: az(this) }
                });
                aG = function () {
                    al.each(ax, function (aJ, aK) {
                        if (aA[aK]) {
                            aH[aK + "Class"](aA[aK])
                        }
                    })
                };
                aG();
                aI = aI.map(function () {
                    this.end = az(this.el[0]);
                    this.diff = aw(this.start, this.end);
                    return this
                });
                aH.attr("class", aF);
                aI = aI.map(function () {
                    var aL = this, aJ = al.Deferred(), aK = al.extend({}, aC, {
                        queue: false, complete: function () {
                            aJ.resolve(aL)
                        }
                    });
                    this.el.animate(this.diff, aK);
                    return aJ.promise()
                });
                al.when.apply(al, aI.get()).done(function () {
                    aG();
                    al.each(arguments, function () {
                        var aJ = this.el;
                        al.each(this.diff, function (aK) {
                            aJ.css(aK, "")
                        })
                    });
                    aC.complete.call(aH[0])
                })
            })
        };
        al.fn.extend({
            addClass: (function (aA) {
                return function (aC, aB, aE, aD) {
                    return aB ? al.effects.animateClass.call(this, { add: aC }, aB, aE, aD) : aA.apply(this, arguments)
                }
            })(al.fn.addClass), removeClass: (function (aA) {
                return function (aC, aB, aE, aD) {
                    return arguments.length > 1 ? al.effects.animateClass.call(this, { remove: aC }, aB, aE, aD) : aA.apply(this, arguments)
                }
            })(al.fn.removeClass), toggleClass: (function (aA) {
                return function (aD, aC, aB, aF, aE) {
                    if (typeof aC === "boolean" || aC === undefined) {
                        if (!aB) {
                            return aA.apply(this, arguments)
                        } else {
                            return al.effects.animateClass.call(this, (aC ? { add: aD } : { remove: aD }), aB, aF, aE)
                        }
                    } else {
                        return al.effects.animateClass.call(this, { toggle: aD }, aC, aB, aF)
                    }
                }
            })(al.fn.toggleClass), switchClass: function (aA, aC, aB, aE, aD) {
                return al.effects.animateClass.call(this, { add: aC, remove: aA }, aB, aE, aD)
            }
        })
    })();
    (function () {
        if (al.expr && al.expr.filters && al.expr.filters.animated) {
            al.expr.filters.animated = (function (az) {
                return function (aA) {
                    return !!al(aA).data(aq) || az(aA)
                }
            })(al.expr.filters.animated)
        } if (al.uiBackCompat !== false) {
            al.extend(al.effects, {
                save: function (aA, aC) {
                    var az = 0, aB = aC.length;
                    for (;
                        az < aB;
                        az++) {
                            if (aC[az] !== null) {
                                aA.data(u + aC[az], aA[0].style[aC[az]])
                            }
                    }
                }, restore: function (aA, aD) {
                    var aC, az = 0, aB = aD.length;
                    for (;
                        az < aB;
                        az++) {
                            if (aD[az] !== null) {
                                aC = aA.data(u + aD[az]);
                                aA.css(aD[az], aC)
                            }
                    }
                }, setMode: function (az, aA) {
                    if (aA === "toggle") {
                        aA = az.is(":hidden") ? "show" : "hide"
                    } return aA
                }, createWrapper: function (aA) {
                    if (aA.parent().is(".ui-effects-wrapper")) {
                        return aA.parent()
                    } var aB = { width: aA.outerWidth(true), height: aA.outerHeight(true), "float": aA.css("float") }, aE = al("<div></div>").addClass("ui-effects-wrapper").css({ fontSize: "100%", background: "transparent", border: "none", margin: 0, padding: 0 }), az = { width: aA.width(), height: aA.height() }, aD = document.activeElement;
                    try {
                        aD.id
                    } catch (aC) {
                        aD = document.body
                    } aA.wrap(aE);
                    if (aA[0] === aD || al.contains(aA[0], aD)) {
                        al(aD).trigger("focus")
                    } aE = aA.parent();
                    if (aA.css("position") === "static") {
                        aE.css({ position: "relative" });
                        aA.css({ position: "relative" })
                    } else {
                        al.extend(aB, { position: aA.css("position"), zIndex: aA.css("z-index") });
                        al.each(["top", "left", "bottom", "right"], function (aF, aG) {
                            aB[aG] = aA.css(aG);
                            if (isNaN(parseInt(aB[aG], 10))) {
                                aB[aG] = "auto"
                            }
                        });
                        aA.css({ position: "relative", top: 0, left: 0, right: "auto", bottom: "auto" })
                    } aA.css(az);
                    return aE.css(aB).show()
                }, removeWrapper: function (az) {
                    var aA = document.activeElement;
                    if (az.parent().is(".ui-effects-wrapper")) {
                        az.parent().replaceWith(az);
                        if (az[0] === aA || al.contains(az[0], aA)) {
                            al(aA).trigger("focus")
                        }
                    } return az
                }
            })
        } al.extend(al.effects, {
            version: "1.12.1", define: function (az, aB, aA) {
                if (!aA) {
                    aA = aB;
                    aB = "effect"
                } al.effects.effect[az] = aA;
                al.effects.effect[az].mode = aB;
                return aA
            }, scaledDimensions: function (aA, aB, aC) {
                if (aB === 0) {
                    return { height: 0, width: 0, outerHeight: 0, outerWidth: 0 }
                } var az = aC !== "horizontal" ? ((aB || 100) / 100) : 1, aD = aC !== "vertical" ? ((aB || 100) / 100) : 1;
                return { height: aA.height() * aD, width: aA.width() * az, outerHeight: aA.outerHeight() * aD, outerWidth: aA.outerWidth() * az }
            }, clipToBox: function (az) {
                return { width: az.clip.right - az.clip.left, height: az.clip.bottom - az.clip.top, left: az.clip.left, top: az.clip.top }
            }, unshift: function (aA, aC, aB) {
                var az = aA.queue();
                if (aC > 1) {
                    az.splice.apply(az, [1, 0].concat(az.splice(aC, aB)))
                } aA.dequeue()
            }, saveStyle: function (az) {
                az.data(ae, az[0].style.cssText)
            }, restoreStyle: function (az) {
                az[0].style.cssText = az.data(ae) || "";
                az.removeData(ae)
            }, mode: function (az, aB) {
                var aA = az.is(":hidden");
                if (aB === "toggle") {
                    aB = aA ? "show" : "hide"
                } if (aA ? aB === "hide" : aB === "show") {
                    aB = "none"
                } return aB
            }, getBaseline: function (aA, aB) {
                var aC, az;
                switch (aA[0]) {
                    case "top": aC = 0;
                        break;
                    case "middle": aC = 0.5;
                        break;
                    case "bottom": aC = 1;
                        break;
                    default: aC = aA[0] / aB.height
                }switch (aA[1]) {
                    case "left": az = 0;
                        break;
                    case "center": az = 0.5;
                        break;
                    case "right": az = 1;
                        break;
                    default: az = aA[1] / aB.width
                }return { x: az, y: aC }
            }, createPlaceholder: function (aA) {
                var aC, aB = aA.css("position"), az = aA.position();
                aA.css({ marginTop: aA.css("marginTop"), marginBottom: aA.css("marginBottom"), marginLeft: aA.css("marginLeft"), marginRight: aA.css("marginRight") }).outerWidth(aA.outerWidth()).outerHeight(aA.outerHeight());
                if (/^(static|relative)/.test(aB)) {
                    aB = "absolute";
                    aC = al("<" + aA[0].nodeName + ">").insertAfter(aA).css({ display: /^(inline|ruby)/.test(aA.css("display")) ? "inline-block" : "block", visibility: "hidden", marginTop: aA.css("marginTop"), marginBottom: aA.css("marginBottom"), marginLeft: aA.css("marginLeft"), marginRight: aA.css("marginRight"), "float": aA.css("float") }).outerWidth(aA.outerWidth()).outerHeight(aA.outerHeight()).addClass("ui-effects-placeholder");
                    aA.data(u + "placeholder", aC)
                } aA.css({ position: aB, left: az.left, top: az.top });
                return aC
            }, removePlaceholder: function (az) {
                var aB = u + "placeholder", aA = az.data(aB);
                if (aA) {
                    aA.remove();
                    az.removeData(aB)
                }
            }, cleanUp: function (az) {
                al.effects.restoreStyle(az);
                al.effects.removePlaceholder(az)
            }, setTransition: function (aA, aC, az, aB) {
                aB = aB || {};
                al.each(aC, function (aE, aD) {
                    var aF = aA.cssUnit(aD);
                    if (aF[0] > 0) {
                        aB[aD] = aF[0] * az + aF[1]
                    }
                });
                return aB
            }
        });
        function ax(aA, az, aB, aC) {
            if (al.isPlainObject(aA)) {
                az = aA;
                aA = aA.effect
            } aA = { effect: aA };
            if (az == null) {
                az = {}
            } if (al.isFunction(az)) {
                aC = az;
                aB = null;
                az = {}
            } if (typeof az === "number" || al.fx.speeds[az]) {
                aC = aB;
                aB = az;
                az = {}
            } if (al.isFunction(aB)) {
                aC = aB;
                aB = null
            } if (az) {
                al.extend(aA, az)
            } aB = aB || az.duration;
            aA.duration = al.fx.off ? 0 : typeof aB === "number" ? aB : aB in al.fx.speeds ? al.fx.speeds[aB] : al.fx.speeds._default;
            aA.complete = aC || az.complete;
            return aA
        } function ay(az) {
            if (!az || typeof az === "number" || al.fx.speeds[az]) {
                return true
            } if (typeof az === "string" && !al.effects.effect[az]) {
                return true
            } if (al.isFunction(az)) {
                return true
            } if (typeof az === "object" && !az.effect) {
                return true
            } return false
        } al.fn.extend({
            effect: function () {
                var aH = ax.apply(this, arguments), aG = al.effects.effect[aH.effect], aD = aG.mode, aF = aH.queue, aC = aF || "fx", az = aH.complete, aE = aH.mode, aA = [], aI = function (aL) {
                    var aK = al(this), aJ = al.effects.mode(aK, aE) || aD;
                    aK.data(aq, true);
                    aA.push(aJ);
                    if (aD && (aJ === "show" || (aJ === aD && aJ === "hide"))) {
                        aK.show()
                    } if (!aD || aJ !== "none") {
                        al.effects.saveStyle(aK)
                    } if (al.isFunction(aL)) {
                        aL()
                    }
                };
                if (al.fx.off || !aG) {
                    if (aE) {
                        return this[aE](aH.duration, az)
                    } else {
                        return this.each(function () {
                            if (az) {
                                az.call(this)
                            }
                        })
                    }
                } function aB(aL) {
                    var aM = al(this);
                    function aK() {
                        aM.removeData(aq);
                        al.effects.cleanUp(aM);
                        if (aH.mode === "hide") {
                            aM.hide()
                        } aJ()
                    } function aJ() {
                        if (al.isFunction(az)) {
                            az.call(aM[0])
                        } if (al.isFunction(aL)) {
                            aL()
                        }
                    } aH.mode = aA.shift();
                    if (al.uiBackCompat !== false && !aD) {
                        if (aM.is(":hidden") ? aE === "hide" : aE === "show") {
                            aM[aE]();
                            aJ()
                        } else {
                            aG.call(aM[0], aH, aJ)
                        }
                    } else {
                        if (aH.mode === "none") {
                            aM[aE]();
                            aJ()
                        } else {
                            aG.call(aM[0], aH, aK)
                        }
                    }
                } return aF === false ? this.each(aI).each(aB) : this.queue(aC, aI).queue(aC, aB)
            }, show: (function (az) {
                return function (aB) {
                    if (ay(aB)) {
                        return az.apply(this, arguments)
                    } else {
                        var aA = ax.apply(this, arguments);
                        aA.mode = "show";
                        return this.effect.call(this, aA)
                    }
                }
            })(al.fn.show), hide: (function (az) {
                return function (aB) {
                    if (ay(aB)) {
                        return az.apply(this, arguments)
                    } else {
                        var aA = ax.apply(this, arguments);
                        aA.mode = "hide";
                        return this.effect.call(this, aA)
                    }
                }
            })(al.fn.hide), toggle: (function (az) {
                return function (aB) {
                    if (ay(aB) || typeof aB === "boolean") {
                        return az.apply(this, arguments)
                    } else {
                        var aA = ax.apply(this, arguments);
                        aA.mode = "toggle";
                        return this.effect.call(this, aA)
                    }
                }
            })(al.fn.toggle), cssUnit: function (az) {
                var aA = this.css(az), aB = [];
                al.each(["em", "px", "%", "pt"], function (aC, aD) {
                    if (aA.indexOf(aD) > 0) {
                        aB = [parseFloat(aA), aD]
                    }
                });
                return aB
            }, cssClip: function (az) {
                if (az) {
                    return this.css("clip", "rect(" + az.top + "px " + az.right + "px " + az.bottom + "px " + az.left + "px)")
                } return aw(this.css("clip"), this)
            }, transfer: function (aK, aC) {
                var aE = al(this), aG = al(aK.to), aJ = aG.css("position") === "fixed", aF = al("body"), aH = aJ ? aF.scrollTop() : 0, aI = aJ ? aF.scrollLeft() : 0, az = aG.offset(), aB = { top: az.top - aH, left: az.left - aI, height: aG.innerHeight(), width: aG.innerWidth() }, aD = aE.offset(), aA = al("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(aK.className).css({ top: aD.top - aH, left: aD.left - aI, height: aE.innerHeight(), width: aE.innerWidth(), position: aJ ? "fixed" : "absolute" }).animate(aB, aK.duration, aK.easing, function () {
                    aA.remove();
                    if (al.isFunction(aC)) {
                        aC()
                    }
                })
            }
        });
        function aw(aE, aB) {
            var aD = aB.outerWidth(), aC = aB.outerHeight(), aA = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/, az = aA.exec(aE) || ["", 0, aD, aC, 0];
            return { top: parseFloat(az[1]) || 0, right: az[2] === "auto" ? aD : parseFloat(az[2]), bottom: az[3] === "auto" ? aC : parseFloat(az[3]), left: parseFloat(az[4]) || 0 }
        } al.fx.step.clip = function (az) {
            if (!az.clipInit) {
                az.start = al(az.elem).cssClip();
                if (typeof az.end === "string") {
                    az.end = aw(az.end, az.elem)
                } az.clipInit = true
            } al(az.elem).cssClip({ top: az.pos * (az.end.top - az.start.top) + az.start.top, right: az.pos * (az.end.right - az.start.right) + az.start.right, bottom: az.pos * (az.end.bottom - az.start.bottom) + az.start.bottom, left: az.pos * (az.end.left - az.start.left) + az.start.left })
        }
    })();
    (function () {
        var aw = {};
        al.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (ay, ax) {
            aw[ax] = function (az) {
                return Math.pow(az, ay + 2)
            }
        });
        al.extend(aw, {
            Sine: function (ax) {
                return 1 - Math.cos(ax * Math.PI / 2)
            }, Circ: function (ax) {
                return 1 - Math.sqrt(1 - ax * ax)
            }, Elastic: function (ax) {
                return ax === 0 || ax === 1 ? ax : -Math.pow(2, 8 * (ax - 1)) * Math.sin(((ax - 1) * 80 - 7.5) * Math.PI / 15)
            }, Back: function (ax) {
                return ax * ax * (3 * ax - 2)
            }, Bounce: function (az) {
                var ax, ay = 4;
                while (az < ((ax = Math.pow(2, --ay)) - 1) / 11) { } return 1 / Math.pow(4, 3 - ay) - 7.5625 * Math.pow((ax * 3 - 2) / 22 - az, 2)
            }
        });
        al.each(aw, function (ay, ax) {
            al.easing["easeIn" + ay] = ax;
            al.easing["easeOut" + ay] = function (az) {
                return 1 - ax(1 - az)
            };
            al.easing["easeInOut" + ay] = function (az) {
                return az < 0.5 ? ax(az * 2) / 2 : 1 - ax(az * -2 + 2) / 2
            }
        })
    })();
    var I = al.effects;
    /*!
     * jQuery UI Effects Blind 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var F = al.effects.define("blind", "hide", function (ay, aw) {
        var aB = { up: ["bottom", "top"], vertical: ["bottom", "top"], down: ["top", "bottom"], left: ["right", "left"], horizontal: ["right", "left"], right: ["left", "right"] }, az = al(this), aA = ay.direction || "up", aD = az.cssClip(), ax = { clip: al.extend({}, aD) }, aC = al.effects.createPlaceholder(az);
        ax.clip[aB[aA][0]] = ax.clip[aB[aA][1]];
        if (ay.mode === "show") {
            az.cssClip(ax.clip);
            if (aC) {
                aC.css(al.effects.clipToBox(ax))
            } ax.clip = aD
        } if (aC) {
            aC.animate(al.effects.clipToBox(ax), ay.duration, ay.easing)
        } az.animate(ax, { queue: false, duration: ay.duration, easing: ay.easing, complete: aw })
    });
    /*!
     * jQuery UI Effects Bounce 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var A = al.effects.define("bounce", function (ax, aE) {
        var aA, aI, aL, aw = al(this), aD = ax.mode, aC = aD === "hide", aM = aD === "show", aN = ax.direction || "up", ay = ax.distance, aB = ax.times || 5, aO = aB * 2 + (aM || aC ? 1 : 0), aK = ax.duration / aO, aG = ax.easing, az = (aN === "up" || aN === "down") ? "top" : "left", aF = (aN === "up" || aN === "left"), aJ = 0, aH = aw.queue().length;
        al.effects.createPlaceholder(aw);
        aL = aw.css(az);
        if (!ay) {
            ay = aw[az === "top" ? "outerHeight" : "outerWidth"]() / 3
        } if (aM) {
            aI = { opacity: 1 };
            aI[az] = aL;
            aw.css("opacity", 0).css(az, aF ? -ay * 2 : ay * 2).animate(aI, aK, aG)
        } if (aC) {
            ay = ay / Math.pow(2, aB - 1)
        } aI = {};
        aI[az] = aL;
        for (;
            aJ < aB;
            aJ++) {
                aA = {};
            aA[az] = (aF ? "-=" : "+=") + ay;
            aw.animate(aA, aK, aG).animate(aI, aK, aG);
            ay = aC ? ay * 2 : ay / 2
        } if (aC) {
            aA = { opacity: 0 };
            aA[az] = (aF ? "-=" : "+=") + ay;
            aw.animate(aA, aK, aG)
        } aw.queue(aE);
        al.effects.unshift(aw, aH, aO + 1)
    });
    /*!
     * jQuery UI Effects Clip 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var af = al.effects.define("clip", "hide", function (aE, aA) {
        var ax, ay = {}, aB = al(this), aD = aE.direction || "vertical", aC = aD === "both", aw = aC || aD === "horizontal", az = aC || aD === "vertical";
        ax = aB.cssClip();
        ay.clip = { top: az ? (ax.bottom - ax.top) / 2 : ax.top, right: aw ? (ax.right - ax.left) / 2 : ax.right, bottom: az ? (ax.bottom - ax.top) / 2 : ax.bottom, left: aw ? (ax.right - ax.left) / 2 : ax.left };
        al.effects.createPlaceholder(aB);
        if (aE.mode === "show") {
            aB.cssClip(ay.clip);
            ay.clip = ax
        } aB.animate(ay, { queue: false, duration: aE.duration, easing: aE.easing, complete: aA })
    });
    /*!
     * jQuery UI Effects Drop 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var W = al.effects.define("drop", "hide", function (aG, az) {
        var aw, aA = al(this), aC = aG.mode, aE = aC === "show", aD = aG.direction || "left", ax = (aD === "up" || aD === "down") ? "top" : "left", aF = (aD === "up" || aD === "left") ? "-=" : "+=", aB = (aF === "+=") ? "-=" : "+=", ay = { opacity: 0 };
        al.effects.createPlaceholder(aA);
        aw = aG.distance || aA[ax === "top" ? "outerHeight" : "outerWidth"](true) / 2;
        ay[ax] = aF + aw;
        if (aE) {
            aA.css(ay);
            ay[ax] = aB + aw;
            ay.opacity = 1
        } aA.animate(ay, { queue: false, duration: aG.duration, easing: aG.easing, complete: az })
    });
    /*!
     * jQuery UI Effects Explode 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var au = al.effects.define("explode", "hide", function (ax, aJ) {
        var aM, aL, az, aH, aG, aE, aD = ax.pieces ? Math.round(Math.sqrt(ax.pieces)) : 3, ay = aD, aw = al(this), aF = ax.mode, aN = aF === "show", aB = aw.show().css("visibility", "hidden").offset(), aK = Math.ceil(aw.outerWidth() / ay), aI = Math.ceil(aw.outerHeight() / aD), aC = [];
        function aO() {
            aC.push(this);
            if (aC.length === aD * ay) {
                aA()
            }
        } for (aM = 0;
            aM < aD;
            aM++) {
                aH = aB.top + aM * aI;
            aE = aM - (aD - 1) / 2;
            for (aL = 0;
                aL < ay;
                aL++) {
                    az = aB.left + aL * aK;
                aG = aL - (ay - 1) / 2;
                aw.clone().appendTo("body").wrap("<div></div>").css({ position: "absolute", visibility: "visible", left: -aL * aK, top: -aM * aI }).parent().addClass("ui-effects-explode").css({ position: "absolute", overflow: "hidden", width: aK, height: aI, left: az + (aN ? aG * aK : 0), top: aH + (aN ? aE * aI : 0), opacity: aN ? 0 : 1 }).animate({ left: az + (aN ? 0 : aG * aK), top: aH + (aN ? 0 : aE * aI), opacity: aN ? 1 : 0 }, ax.duration || 500, ax.easing, aO)
            }
        } function aA() {
            aw.css({ visibility: "visible" });
            al(aC).remove();
            aJ()
        }
    });
    /*!
     * jQuery UI Effects Fade 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var av = al.effects.define("fade", "toggle", function (ay, ax) {
        var aw = ay.mode === "show";
        al(this).css("opacity", aw ? 0 : 1).animate({ opacity: aw ? 1 : 0 }, { queue: false, duration: ay.duration, easing: ay.easing, complete: ax })
    });
    /*!
     * jQuery UI Effects Fold 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var v = al.effects.define("fold", "hide", function (aM, aB) {
        var aC = al(this), aD = aM.mode, aJ = aD === "show", aE = aD === "hide", aL = aM.size || 15, aF = /([0-9]+)%/.exec(aL), aK = !!aM.horizFirst, az = aK ? ["right", "bottom"] : ["bottom", "right"], aA = aM.duration / 2, aI = al.effects.createPlaceholder(aC), ax = aC.cssClip(), aH = { clip: al.extend({}, ax) }, aG = { clip: al.extend({}, ax) }, aw = [ax[az[0]], ax[az[1]]], ay = aC.queue().length;
        if (aF) {
            aL = parseInt(aF[1], 10) / 100 * aw[aE ? 0 : 1]
        } aH.clip[az[0]] = aL;
        aG.clip[az[0]] = aL;
        aG.clip[az[1]] = 0;
        if (aJ) {
            aC.cssClip(aG.clip);
            if (aI) {
                aI.css(al.effects.clipToBox(aG))
            } aG.clip = ax
        } aC.queue(function (aN) {
            if (aI) {
                aI.animate(al.effects.clipToBox(aH), aA, aM.easing).animate(al.effects.clipToBox(aG), aA, aM.easing)
            } aN()
        }).animate(aH, aA, aM.easing).animate(aG, aA, aM.easing).queue(aB);
        al.effects.unshift(aC, ay, 4)
    });
    /*!
     * jQuery UI Effects Highlight 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var K = al.effects.define("highlight", "show", function (ax, aw) {
        var ay = al(this), az = { backgroundColor: ay.css("backgroundColor") };
        if (ax.mode === "hide") {
            az.opacity = 0
        } al.effects.saveStyle(ay);
        ay.css({ backgroundImage: "none", backgroundColor: ax.color || "#ffff99" }).animate(az, { queue: false, duration: ax.duration, easing: ax.easing, complete: aw })
    });
    /*!
     * jQuery UI Effects Size 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var T = al.effects.define("size", function (az, aF) {
        var aD, aE, aJ, aw = al(this), aB = ["fontSize"], aK = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], ay = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], aC = az.mode, aI = aC !== "effect", aN = az.scale || "both", aL = az.origin || ["middle", "center"], aM = aw.css("position"), aA = aw.position(), aG = al.effects.scaledDimensions(aw), aH = az.from || aG, ax = az.to || al.effects.scaledDimensions(aw, 0);
        al.effects.createPlaceholder(aw);
        if (aC === "show") {
            aJ = aH;
            aH = ax;
            ax = aJ
        } aE = { from: { y: aH.height / aG.height, x: aH.width / aG.width }, to: { y: ax.height / aG.height, x: ax.width / aG.width } };
        if (aN === "box" || aN === "both") {
            if (aE.from.y !== aE.to.y) {
                aH = al.effects.setTransition(aw, aK, aE.from.y, aH);
                ax = al.effects.setTransition(aw, aK, aE.to.y, ax)
            } if (aE.from.x !== aE.to.x) {
                aH = al.effects.setTransition(aw, ay, aE.from.x, aH);
                ax = al.effects.setTransition(aw, ay, aE.to.x, ax)
            }
        } if (aN === "content" || aN === "both") {
            if (aE.from.y !== aE.to.y) {
                aH = al.effects.setTransition(aw, aB, aE.from.y, aH);
                ax = al.effects.setTransition(aw, aB, aE.to.y, ax)
            }
        } if (aL) {
            aD = al.effects.getBaseline(aL, aG);
            aH.top = (aG.outerHeight - aH.outerHeight) * aD.y + aA.top;
            aH.left = (aG.outerWidth - aH.outerWidth) * aD.x + aA.left;
            ax.top = (aG.outerHeight - ax.outerHeight) * aD.y + aA.top;
            ax.left = (aG.outerWidth - ax.outerWidth) * aD.x + aA.left
        } aw.css(aH);
        if (aN === "content" || aN === "both") {
            aK = aK.concat(["marginTop", "marginBottom"]).concat(aB);
            ay = ay.concat(["marginLeft", "marginRight"]);
            aw.find("*[width]").each(function () {
                var aR = al(this), aO = al.effects.scaledDimensions(aR), aQ = { height: aO.height * aE.from.y, width: aO.width * aE.from.x, outerHeight: aO.outerHeight * aE.from.y, outerWidth: aO.outerWidth * aE.from.x }, aP = { height: aO.height * aE.to.y, width: aO.width * aE.to.x, outerHeight: aO.height * aE.to.y, outerWidth: aO.width * aE.to.x };
                if (aE.from.y !== aE.to.y) {
                    aQ = al.effects.setTransition(aR, aK, aE.from.y, aQ);
                    aP = al.effects.setTransition(aR, aK, aE.to.y, aP)
                } if (aE.from.x !== aE.to.x) {
                    aQ = al.effects.setTransition(aR, ay, aE.from.x, aQ);
                    aP = al.effects.setTransition(aR, ay, aE.to.x, aP)
                } if (aI) {
                    al.effects.saveStyle(aR)
                } aR.css(aQ);
                aR.animate(aP, az.duration, az.easing, function () {
                    if (aI) {
                        al.effects.restoreStyle(aR)
                    }
                })
            })
        } aw.animate(ax, {
            queue: false, duration: az.duration, easing: az.easing, complete: function () {
                var aO = aw.offset();
                if (ax.opacity === 0) {
                    aw.css("opacity", aH.opacity)
                } if (!aI) {
                    aw.css("position", aM === "static" ? "relative" : aM).offset(aO);
                    al.effects.saveStyle(aw)
                } aF()
            }
        })
    });
    /*!
     * jQuery UI Effects Scale 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var P = al.effects.define("scale", function (ax, aw) {
        var ay = al(this), aB = ax.mode, az = parseInt(ax.percent, 10) || (parseInt(ax.percent, 10) === 0 ? 0 : (aB !== "effect" ? 0 : 100)), aA = al.extend(true, { from: al.effects.scaledDimensions(ay), to: al.effects.scaledDimensions(ay, az, ax.direction || "both"), origin: ax.origin || ["middle", "center"] }, ax);
        if (ax.fade) {
            aA.from.opacity = 1;
            aA.to.opacity = 0
        } al.effects.effect.size.call(this, aA, aw)
    });
    /*!
     * jQuery UI Effects Puff 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var B = al.effects.define("puff", "hide", function (ax, aw) {
        var ay = al.extend(true, {}, ax, { fade: true, percent: parseInt(ax.percent, 10) || 150 });
        al.effects.effect.scale.call(this, ay, aw)
    });
    /*!
     * jQuery UI Effects Pulsate 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var y = al.effects.define("pulsate", "show", function (aH, ay) {
        var aA = al(this), aB = aH.mode, aF = aB === "show", aC = aB === "hide", aG = aF || aC, aD = ((aH.times || 5) * 2) + (aG ? 1 : 0), ax = aH.duration / aD, aE = 0, az = 1, aw = aA.queue().length;
        if (aF || !aA.is(":visible")) {
            aA.css("opacity", 0).show();
            aE = 1
        } for (;
            az < aD;
            az++) {
                aA.animate({ opacity: aE }, ax, aH.easing);
            aE = 1 - aE
        } aA.animate({ opacity: aE }, ax, aH.easing);
        aA.queue(ay);
        al.effects.unshift(aA, aw, aD + 1)
    });
    /*!
     * jQuery UI Effects Shake 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var ak = al.effects.define("shake", function (aK, aD) {
        var aE = 1, aF = al(this), aH = aK.direction || "left", aw = aK.distance || 20, ax = aK.times || 3, aI = ax * 2 + 1, aB = Math.round(aK.duration / aI), aA = (aH === "up" || aH === "down") ? "top" : "left", ay = (aH === "up" || aH === "left"), aC = {}, aJ = {}, aG = {}, az = aF.queue().length;
        al.effects.createPlaceholder(aF);
        aC[aA] = (ay ? "-=" : "+=") + aw;
        aJ[aA] = (ay ? "+=" : "-=") + aw * 2;
        aG[aA] = (ay ? "-=" : "+=") + aw * 2;
        aF.animate(aC, aB, aK.easing);
        for (;
            aE < ax;
            aE++) {
                aF.animate(aJ, aB, aK.easing).animate(aG, aB, aK.easing)
        } aF.animate(aJ, aB, aK.easing).animate(aC, aB / 2, aK.easing).queue(aD);
        al.effects.unshift(aF, az, aI + 1)
    });
    /*!
     * jQuery UI Effects Slide 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var aj = al.effects.define("slide", "show", function (aH, aD) {
        var aA, ax, aE = al(this), ay = { up: ["bottom", "top"], down: ["top", "bottom"], left: ["right", "left"], right: ["left", "right"] }, aF = aH.mode, aG = aH.direction || "left", aB = (aG === "up" || aG === "down") ? "top" : "left", az = (aG === "up" || aG === "left"), aw = aH.distance || aE[aB === "top" ? "outerHeight" : "outerWidth"](true), aC = {};
        al.effects.createPlaceholder(aE);
        aA = aE.cssClip();
        ax = aE.position()[aB];
        aC[aB] = (az ? -1 : 1) * aw + ax;
        aC.clip = aE.cssClip();
        aC.clip[ay[aG][1]] = aC.clip[ay[aG][0]];
        if (aF === "show") {
            aE.cssClip(aC.clip);
            aE.css(aB, aC[aB]);
            aC.clip = aA;
            aC[aB] = ax
        } aE.animate(aC, { queue: false, duration: aH.duration, easing: aH.easing, complete: aD })
    });
    /*!
     * jQuery UI Effects Transfer 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var I;
    if (al.uiBackCompat !== false) {
        I = al.effects.define("transfer", function (ax, aw) {
            al(this).transfer(ax, aw)
        })
    } var N = I;
    /*!
     * jQuery UI Focusable 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.ui.focusable = function (az, ax) {
        var aC, aA, ay, aB, aw, aD = az.nodeName.toLowerCase();
        if ("area" === aD) {
            aC = az.parentNode;
            aA = aC.name;
            if (!az.href || !aA || aC.nodeName.toLowerCase() !== "map") {
                return false
            } ay = al("img[usemap='#" + aA + "']");
            return ay.length > 0 && ay.is(":visible")
        } if (/^(input|select|textarea|button|object)$/.test(aD)) {
            aB = !az.disabled;
            if (aB) {
                aw = al(az).closest("fieldset")[0];
                if (aw) {
                    aB = !aw.disabled
                }
            }
        } else {
            if ("a" === aD) {
                aB = az.href || ax
            } else {
                aB = ax
            }
        } return aB && al(az).is(":visible") && p(al(az))
    };
    function p(ax) {
        var aw = ax.css("visibility");
        while (aw === "inherit") {
            ax = ax.parent();
            aw = ax.css("visibility")
        } return aw !== "hidden"
    } al.extend(al.expr[":"], {
        focusable: function (aw) {
            return al.ui.focusable(aw, al.attr(aw, "tabindex") != null)
        }
    });
    var at = al.ui.focusable;
    var j = al.fn.form = function () {
        return typeof this[0].form === "string" ? this.closest("form") : al(this[0].form)
    };
    /*!
     * jQuery UI Form Reset Mixin 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var O = al.ui.formResetMixin = {
        _formResetHandler: function () {
            var aw = al(this);
            setTimeout(function () {
                var ax = aw.data("ui-form-reset-instances");
                al.each(ax, function () {
                    this.refresh()
                })
            })
        }, _bindFormResetHandler: function () {
            this.form = this.element.form();
            if (!this.form.length) {
                return
            } var aw = this.form.data("ui-form-reset-instances") || [];
            if (!aw.length) {
                this.form.on("reset.ui-form-reset", this._formResetHandler)
            } aw.push(this);
            this.form.data("ui-form-reset-instances", aw)
        }, _unbindFormResetHandler: function () {
            if (!this.form.length) {
                return
            } var aw = this.form.data("ui-form-reset-instances");
            aw.splice(al.inArray(this, aw), 1);
            if (aw.length) {
                this.form.data("ui-form-reset-instances", aw)
            } else {
                this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")
            }
        }
    };
    /*!
     * jQuery UI Support for jQuery core 1.7.x 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     *
     */
    ;
    if (al.fn.jquery.substring(0, 3) === "1.7") {
        al.each(["Width", "Height"], function (ay, aw) {
            var ax = aw === "Width" ? ["Left", "Right"] : ["Top", "Bottom"], az = aw.toLowerCase(), aB = { innerWidth: al.fn.innerWidth, innerHeight: al.fn.innerHeight, outerWidth: al.fn.outerWidth, outerHeight: al.fn.outerHeight };
            function aA(aE, aD, aC, aF) {
                al.each(ax, function () {
                    aD -= parseFloat(al.css(aE, "padding" + this)) || 0;
                    if (aC) {
                        aD -= parseFloat(al.css(aE, "border" + this + "Width")) || 0
                    } if (aF) {
                        aD -= parseFloat(al.css(aE, "margin" + this)) || 0
                    }
                });
                return aD
            } al.fn["inner" + aw] = function (aC) {
                if (aC === undefined) {
                    return aB["inner" + aw].call(this)
                } return this.each(function () {
                    al(this).css(az, aA(this, aC) + "px")
                })
            };
            al.fn["outer" + aw] = function (aC, aD) {
                if (typeof aC !== "number") {
                    return aB["outer" + aw].call(this, aC)
                } return this.each(function () {
                    al(this).css(az, aA(this, aC, true, aD) + "px")
                })
            }
        });
        al.fn.addBack = function (aw) {
            return this.add(aw == null ? this.prevObject : this.prevObject.filter(aw))
        }
    }
    /*!
     * jQuery UI Keycode 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var o = al.ui.keyCode = { BACKSPACE: 8, COMMA: 188, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, LEFT: 37, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38 };
    var h = al.ui.escapeSelector = (function () {
        var aw = /([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;
        return function (ax) {
            return ax.replace(aw, "\\$1")
        }
    })();
    /*!
     * jQuery UI Labels 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var an = al.fn.labels = function () {
        var ax, aw, aA, az, ay;
        if (this[0].labels && this[0].labels.length) {
            return this.pushStack(this[0].labels)
        } az = this.eq(0).parents("label");
        aA = this.attr("id");
        if (aA) {
            ax = this.eq(0).parents().last();
            ay = ax.add(ax.length ? ax.siblings() : this.siblings());
            aw = "label[for='" + al.ui.escapeSelector(aA) + "']";
            az = az.add(ay.find(aw).addBack(aw))
        } return this.pushStack(az)
    };
    /*!
     * jQuery UI Scroll Parent 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var aa = al.fn.scrollParent = function (ay) {
        var ax = this.css("position"), aw = ax === "absolute", az = ay ? /(auto|scroll|hidden)/ : /(auto|scroll)/, aA = this.parents().filter(function () {
            var aB = al(this);
            if (aw && aB.css("position") === "static") {
                return false
            } return az.test(aB.css("overflow") + aB.css("overflow-y") + aB.css("overflow-x"))
        }).eq(0);
        return ax === "fixed" || !aA.length ? al(this[0].ownerDocument || document) : aA
    };
    /*!
     * jQuery UI Tabbable 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var f = al.extend(al.expr[":"], {
        tabbable: function (ay) {
            var ax = al.attr(ay, "tabindex"), aw = ax != null;
            return (!aw || ax >= 0) && al.ui.focusable(ay, aw)
        }
    });
    /*!
     * jQuery UI Unique ID 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var ab = al.fn.extend({
        uniqueId: (function () {
            var aw = 0;
            return function () {
                return this.each(function () {
                    if (!this.id) {
                        this.id = "ui-id-" + (++aw)
                    }
                })
            }
        })(), removeUniqueId: function () {
            return this.each(function () {
                if (/^ui-id-\d+$/.test(this.id)) {
                    al(this).removeAttr("id")
                }
            })
        }
    });
    /*!
     * jQuery UI Accordion 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var d = al.widget("ui.accordion", {
        version: "1.12.1", options: { active: 0, animate: {}, classes: { "ui-accordion-header": "ui-corner-top", "ui-accordion-header-collapsed": "ui-corner-all", "ui-accordion-content": "ui-corner-bottom" }, collapsible: false, event: "click", header: "> li > :first-child, > :not(li):even", heightStyle: "auto", icons: { activeHeader: "ui-icon-triangle-1-s", header: "ui-icon-triangle-1-e" }, activate: null, beforeActivate: null }, hideProps: { borderTopWidth: "hide", borderBottomWidth: "hide", paddingTop: "hide", paddingBottom: "hide", height: "hide" }, showProps: { borderTopWidth: "show", borderBottomWidth: "show", paddingTop: "show", paddingBottom: "show", height: "show" }, _create: function () {
            var aw = this.options;
            this.prevShow = this.prevHide = al();
            this._addClass("ui-accordion", "ui-widget ui-helper-reset");
            this.element.attr("role", "tablist");
            if (!aw.collapsible && (aw.active === false || aw.active == null)) {
                aw.active = 0
            } this._processPanels();
            if (aw.active < 0) {
                aw.active += this.headers.length
            } this._refresh()
        }, _getCreateEventData: function () {
            return { header: this.active, panel: !this.active.length ? al() : this.active.next() }
        }, _createIcons: function () {
            var ay, ax, aw = this.options.icons;
            if (aw) {
                ay = al("<span>");
                this._addClass(ay, "ui-accordion-header-icon", "ui-icon " + aw.header);
                ay.prependTo(this.headers);
                ax = this.active.children(".ui-accordion-header-icon");
                this._removeClass(ax, aw.header)._addClass(ax, null, aw.activeHeader)._addClass(this.headers, "ui-accordion-icons")
            }
        }, _destroyIcons: function () {
            this._removeClass(this.headers, "ui-accordion-icons");
            this.headers.children(".ui-accordion-header-icon").remove()
        }, _destroy: function () {
            var aw;
            this.element.removeAttr("role");
            this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId();
            this._destroyIcons();
            aw = this.headers.next().css("display", "").removeAttr("role aria-hidden aria-labelledby").removeUniqueId();
            if (this.options.heightStyle !== "content") {
                aw.css("height", "")
            }
        }, _setOption: function (aw, ax) {
            if (aw === "active") {
                this._activate(ax);
                return
            } if (aw === "event") {
                if (this.options.event) {
                    this._off(this.headers, this.options.event)
                } this._setupEvents(ax)
            } this._super(aw, ax);
            if (aw === "collapsible" && !ax && this.options.active === false) {
                this._activate(0)
            } if (aw === "icons") {
                this._destroyIcons();
                if (ax) {
                    this._createIcons()
                }
            }
        }, _setOptionDisabled: function (aw) {
            this._super(aw);
            this.element.attr("aria-disabled", aw);
            this._toggleClass(null, "ui-state-disabled", !!aw);
            this._toggleClass(this.headers.add(this.headers.next()), null, "ui-state-disabled", !!aw)
        }, _keydown: function (az) {
            if (az.altKey || az.ctrlKey) {
                return
            } var aA = al.ui.keyCode, ay = this.headers.length, aw = this.headers.index(az.target), ax = false;
            switch (az.keyCode) {
                case aA.RIGHT: case aA.DOWN: ax = this.headers[(aw + 1) % ay];
                    break;
                case aA.LEFT: case aA.UP: ax = this.headers[(aw - 1 + ay) % ay];
                    break;
                case aA.SPACE: case aA.ENTER: this._eventHandler(az);
                    break;
                case aA.HOME: ax = this.headers[0];
                    break;
                case aA.END: ax = this.headers[ay - 1];
                    break
            }if (ax) {
                al(az.target).attr("tabIndex", -1);
                al(ax).attr("tabIndex", 0);
                al(ax).trigger("focus");
                az.preventDefault()
            }
        }, _panelKeyDown: function (aw) {
            if (aw.keyCode === al.ui.keyCode.UP && aw.ctrlKey) {
                al(aw.currentTarget).prev().trigger("focus")
            }
        }, refresh: function () {
            var aw = this.options;
            this._processPanels();
            if ((aw.active === false && aw.collapsible === true) || !this.headers.length) {
                aw.active = false;
                this.active = al()
            } else {
                if (aw.active === false) {
                    this._activate(0)
                } else {
                    if (this.active.length && !al.contains(this.element[0], this.active[0])) {
                        if (this.headers.length === this.headers.find(".ui-state-disabled").length) {
                            aw.active = false;
                            this.active = al()
                        } else {
                            this._activate(Math.max(0, aw.active - 1))
                        }
                    } else {
                        aw.active = this.headers.index(this.active)
                    }
                }
            } this._destroyIcons();
            this._refresh()
        }, _processPanels: function () {
            var ax = this.headers, aw = this.panels;
            this.headers = this.element.find(this.options.header);
            this._addClass(this.headers, "ui-accordion-header ui-accordion-header-collapsed", "ui-state-default");
            this.panels = this.headers.next().filter(":not(.ui-accordion-content-active)").hide();
            this._addClass(this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content");
            if (aw) {
                this._off(ax.not(this.headers));
                this._off(aw.not(this.panels))
            }
        }, _refresh: function () {
            var az, ax = this.options, aw = ax.heightStyle, ay = this.element.parent();
            this.active = this._findActive(ax.active);
            this._addClass(this.active, "ui-accordion-header-active", "ui-state-active")._removeClass(this.active, "ui-accordion-header-collapsed");
            this._addClass(this.active.next(), "ui-accordion-content-active");
            this.active.next().show();
            this.headers.attr("role", "tab").each(function () {
                var aD = al(this), aC = aD.uniqueId().attr("id"), aA = aD.next(), aB = aA.uniqueId().attr("id");
                aD.attr("aria-controls", aB);
                aA.attr("aria-labelledby", aC)
            }).next().attr("role", "tabpanel");
            this.headers.not(this.active).attr({ "aria-selected": "false", "aria-expanded": "false", tabIndex: -1 }).next().attr({ "aria-hidden": "true" }).hide();
            if (!this.active.length) {
                this.headers.eq(0).attr("tabIndex", 0)
            } else {
                this.active.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 }).next().attr({ "aria-hidden": "false" })
            } this._createIcons();
            this._setupEvents(ax.event);
            if (aw === "fill") {
                az = ay.height();
                this.element.siblings(":visible").each(function () {
                    var aB = al(this), aA = aB.css("position");
                    if (aA === "absolute" || aA === "fixed") {
                        return
                    } az -= aB.outerHeight(true)
                });
                this.headers.each(function () {
                    az -= al(this).outerHeight(true)
                });
                this.headers.next().each(function () {
                    al(this).height(Math.max(0, az - al(this).innerHeight() + al(this).height()))
                }).css("overflow", "auto")
            } else {
                if (aw === "auto") {
                    az = 0;
                    this.headers.next().each(function () {
                        var aA = al(this).is(":visible");
                        if (!aA) {
                            al(this).show()
                        } az = Math.max(az, al(this).css("height", "").height());
                        if (!aA) {
                            al(this).hide()
                        }
                    }).height(az)
                }
            }
        }, _activate: function (aw) {
            var ax = this._findActive(aw)[0];
            if (ax === this.active[0]) {
                return
            } ax = ax || this.active[0];
            this._eventHandler({ target: ax, currentTarget: ax, preventDefault: al.noop })
        }, _findActive: function (aw) {
            return typeof aw === "number" ? this.headers.eq(aw) : al()
        }, _setupEvents: function (ax) {
            var aw = { keydown: "_keydown" };
            if (ax) {
                al.each(ax.split(" "), function (az, ay) {
                    aw[ay] = "_eventHandler"
                })
            } this._off(this.headers.add(this.headers.next()));
            this._on(this.headers, aw);
            this._on(this.headers.next(), { keydown: "_panelKeyDown" });
            this._hoverable(this.headers);
            this._focusable(this.headers)
        }, _eventHandler: function (ax) {
            var ay, az, aG = this.options, aB = this.active, aC = al(ax.currentTarget), aE = aC[0] === aB[0], aA = aE && aG.collapsible, aw = aA ? al() : aC.next(), aD = aB.next(), aF = { oldHeader: aB, oldPanel: aD, newHeader: aA ? al() : aC, newPanel: aw };
            ax.preventDefault();
            if ((aE && !aG.collapsible) || (this._trigger("beforeActivate", ax, aF) === false)) {
                return
            } aG.active = aA ? false : this.headers.index(aC);
            this.active = aE ? al() : aC;
            this._toggle(aF);
            this._removeClass(aB, "ui-accordion-header-active", "ui-state-active");
            if (aG.icons) {
                ay = aB.children(".ui-accordion-header-icon");
                this._removeClass(ay, null, aG.icons.activeHeader)._addClass(ay, null, aG.icons.header)
            } if (!aE) {
                this._removeClass(aC, "ui-accordion-header-collapsed")._addClass(aC, "ui-accordion-header-active", "ui-state-active");
                if (aG.icons) {
                    az = aC.children(".ui-accordion-header-icon");
                    this._removeClass(az, null, aG.icons.header)._addClass(az, null, aG.icons.activeHeader)
                } this._addClass(aC.next(), "ui-accordion-content-active")
            }
        }, _toggle: function (ay) {
            var aw = ay.newPanel, ax = this.prevShow.length ? this.prevShow : ay.oldPanel;
            this.prevShow.add(this.prevHide).stop(true, true);
            this.prevShow = aw;
            this.prevHide = ax;
            if (this.options.animate) {
                this._animate(aw, ax, ay)
            } else {
                ax.hide();
                aw.show();
                this._toggleComplete(ay)
            } ax.attr({ "aria-hidden": "true" });
            ax.prev().attr({ "aria-selected": "false", "aria-expanded": "false" });
            if (aw.length && ax.length) {
                ax.prev().attr({ tabIndex: -1, "aria-expanded": "false" })
            } else {
                if (aw.length) {
                    this.headers.filter(function () {
                        return parseInt(al(this).attr("tabIndex"), 10) === 0
                    }).attr("tabIndex", -1)
                }
            } aw.attr("aria-hidden", "false").prev().attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 })
        }, _animate: function (aw, aF, aB) {
            var aE, aD, aA, aC = this, aG = 0, az = aw.css("box-sizing"), aH = aw.length && (!aF.length || (aw.index() < aF.index())), ay = this.options.animate || {}, aI = aH && ay.down || ay, ax = function () {
                aC._toggleComplete(aB)
            };
            if (typeof aI === "number") {
                aA = aI
            } if (typeof aI === "string") {
                aD = aI
            } aD = aD || aI.easing || ay.easing;
            aA = aA || aI.duration || ay.duration;
            if (!aF.length) {
                return aw.animate(this.showProps, aA, aD, ax)
            } if (!aw.length) {
                return aF.animate(this.hideProps, aA, aD, ax)
            } aE = aw.show().outerHeight();
            aF.animate(this.hideProps, {
                duration: aA, easing: aD, step: function (aJ, aK) {
                    aK.now = Math.round(aJ)
                }
            });
            aw.hide().animate(this.showProps, {
                duration: aA, easing: aD, complete: ax, step: function (aJ, aK) {
                    aK.now = Math.round(aJ);
                    if (aK.prop !== "height") {
                        if (az === "content-box") {
                            aG += aK.now
                        }
                    } else {
                        if (aC.options.heightStyle !== "content") {
                            aK.now = Math.round(aE - aF.outerHeight() - aG);
                            aG = 0
                        }
                    }
                }
            })
        }, _toggleComplete: function (ay) {
            var aw = ay.oldPanel, ax = aw.prev();
            this._removeClass(aw, "ui-accordion-content-active");
            this._removeClass(ax, "ui-accordion-header-active")._addClass(ax, "ui-accordion-header-collapsed");
            if (aw.length) {
                aw.parent()[0].className = aw.parent()[0].className
            } this._trigger("activate", null, ay)
        }
    });
    var k = al.ui.safeActiveElement = function (aw) {
        var ay;
        try {
            ay = aw.activeElement
        } catch (ax) {
            ay = aw.body
        } if (!ay) {
            ay = aw.body
        } if (!ay.nodeName) {
            ay = aw.body
        } return ay
    };
    /*!
     * jQuery UI Menu 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var q = al.widget("ui.menu", {
        version: "1.12.1", defaultElement: "<ul>", delay: 300, options: { icons: { submenu: "ui-icon-caret-1-e" }, items: "> *", menus: "ul", position: { my: "left top", at: "right top" }, role: "menu", blur: null, focus: null, select: null }, _create: function () {
            this.activeMenu = this.element;
            this.mouseHandled = false;
            this.element.uniqueId().attr({ role: this.options.role, tabIndex: 0 });
            this._addClass("ui-menu", "ui-widget ui-widget-content");
            this._on({
                "mousedown .ui-menu-item": function (aw) {
                    aw.preventDefault()
                }, "click .ui-menu-item": function (aw) {
                    var ay = al(aw.target);
                    var ax = al(al.ui.safeActiveElement(this.document[0]));
                    if (!this.mouseHandled && ay.not(".ui-state-disabled").length) {
                        this.select(aw);
                        if (!aw.isPropagationStopped()) {
                            this.mouseHandled = true
                        } if (ay.has(".ui-menu").length) {
                            this.expand(aw)
                        } else {
                            if (!this.element.is(":focus") && ax.closest(".ui-menu").length) {
                                this.element.trigger("focus", [true]);
                                if (this.active && this.active.parents(".ui-menu").length === 1) {
                                    clearTimeout(this.timer)
                                }
                            }
                        }
                    }
                }, "mouseenter .ui-menu-item": function (aw) {
                    if (this.previousFilter) {
                        return
                    } var ax = al(aw.target).closest(".ui-menu-item"), ay = al(aw.currentTarget);
                    if (ax[0] !== ay[0]) {
                        return
                    } this._removeClass(ay.siblings().children(".ui-state-active"), null, "ui-state-active");
                    this.focus(aw, ay)
                }, mouseleave: "collapseAll", "mouseleave .ui-menu": "collapseAll", focus: function (ay, aw) {
                    var ax = this.active || this.element.find(this.options.items).eq(0);
                    if (!aw) {
                        this.focus(ay, ax)
                    }
                }, blur: function (aw) {
                    this._delay(function () {
                        var ax = !al.contains(this.element[0], al.ui.safeActiveElement(this.document[0]));
                        if (ax) {
                            this.collapseAll(aw)
                        }
                    })
                }, keydown: "_keydown"
            });
            this.refresh();
            this._on(this.document, {
                click: function (aw) {
                    if (this._closeOnDocumentClick(aw)) {
                        this.collapseAll(aw)
                    } this.mouseHandled = false
                }
            })
        }, _destroy: function () {
            var ax = this.element.find(".ui-menu-item").removeAttr("role aria-disabled"), aw = ax.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show();
            aw.children().each(function () {
                var ay = al(this);
                if (ay.data("ui-menu-submenu-caret")) {
                    ay.remove()
                }
            })
        }, _keydown: function (aA) {
            var ax, az, aB, ay, aw = true;
            switch (aA.keyCode) {
                case al.ui.keyCode.PAGE_UP: this.previousPage(aA);
                    break;
                case al.ui.keyCode.PAGE_DOWN: this.nextPage(aA);
                    break;
                case al.ui.keyCode.HOME: this._move("first", "first", aA);
                    break;
                case al.ui.keyCode.END: this._move("last", "last", aA);
                    break;
                case al.ui.keyCode.UP: this.previous(aA);
                    break;
                case al.ui.keyCode.DOWN: this.next(aA);
                    break;
                case al.ui.keyCode.LEFT: this.collapse(aA);
                    break;
                case al.ui.keyCode.RIGHT: if (this.active && !this.active.is(".ui-state-disabled")) {
                    this.expand(aA)
                } break;
                case al.ui.keyCode.ENTER: case al.ui.keyCode.SPACE: this._activate(aA);
                    break;
                case al.ui.keyCode.ESCAPE: this.collapse(aA);
                    break;
                default: aw = false;
                    az = this.previousFilter || "";
                    ay = false;
                    aB = aA.keyCode >= 96 && aA.keyCode <= 105 ? (aA.keyCode - 96).toString() : String.fromCharCode(aA.keyCode);
                    clearTimeout(this.filterTimer);
                    if (aB === az) {
                        ay = true
                    } else {
                        aB = az + aB
                    } ax = this._filterMenuItems(aB);
                    ax = ay && ax.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : ax;
                    if (!ax.length) {
                        aB = String.fromCharCode(aA.keyCode);
                        ax = this._filterMenuItems(aB)
                    } if (ax.length) {
                        this.focus(aA, ax);
                        this.previousFilter = aB;
                        this.filterTimer = this._delay(function () {
                            delete this.previousFilter
                        }, 1000)
                    } else {
                        delete this.previousFilter
                    }
            }if (aw) {
                aA.preventDefault()
            }
        }, _activate: function (aw) {
            if (this.active && !this.active.is(".ui-state-disabled")) {
                if (this.active.children("[aria-haspopup='true']").length) {
                    this.expand(aw)
                } else {
                    this.select(aw)
                }
            }
        }, refresh: function () {
            var aD, ay, aB, az, aw, aC = this, aA = this.options.icons.submenu, ax = this.element.find(this.options.menus);
            this._toggleClass("ui-menu-icons", null, !!this.element.find(".ui-icon").length);
            aB = ax.filter(":not(.ui-menu)").hide().attr({ role: this.options.role, "aria-hidden": "true", "aria-expanded": "false" }).each(function () {
                var aG = al(this), aE = aG.prev(), aF = al("<span>").data("ui-menu-submenu-caret", true);
                aC._addClass(aF, "ui-menu-icon", "ui-icon " + aA);
                aE.attr("aria-haspopup", "true").prepend(aF);
                aG.attr("aria-labelledby", aE.attr("id"))
            });
            this._addClass(aB, "ui-menu", "ui-widget ui-widget-content ui-front");
            aD = ax.add(this.element);
            ay = aD.find(this.options.items);
            ay.not(".ui-menu-item").each(function () {
                var aE = al(this);
                if (aC._isDivider(aE)) {
                    aC._addClass(aE, "ui-menu-divider", "ui-widget-content")
                }
            });
            az = ay.not(".ui-menu-item, .ui-menu-divider");
            aw = az.children().not(".ui-menu").uniqueId().attr({ tabIndex: -1, role: this._itemRole() });
            this._addClass(az, "ui-menu-item")._addClass(aw, "ui-menu-item-wrapper");
            ay.filter(".ui-state-disabled").attr("aria-disabled", "true");
            if (this.active && !al.contains(this.element[0], this.active[0])) {
                this.blur()
            }
        }, _itemRole: function () {
            return { menu: "menuitem", listbox: "option" }[this.options.role]
        }, _setOption: function (ax, ay) {
            if (ax === "icons") {
                var aw = this.element.find(".ui-menu-icon");
                this._removeClass(aw, null, this.options.icons.submenu)._addClass(aw, null, ay.submenu)
            } this._super(ax, ay)
        }, _setOptionDisabled: function (aw) {
            this._super(aw);
            this.element.attr("aria-disabled", String(aw));
            this._toggleClass(null, "ui-state-disabled", !!aw)
        }, focus: function (ay, ax) {
            var aA, az, aw;
            this.blur(ay, ay && ay.type === "focus");
            this._scrollIntoView(ax);
            this.active = ax.first();
            az = this.active.children(".ui-menu-item-wrapper");
            this._addClass(az, null, "ui-state-active");
            if (this.options.role) {
                this.element.attr("aria-activedescendant", az.attr("id"))
            } aw = this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper");
            this._addClass(aw, null, "ui-state-active");
            if (ay && ay.type === "keydown") {
                this._close()
            } else {
                this.timer = this._delay(function () {
                    this._close()
                }, this.delay)
            } aA = ax.children(".ui-menu");
            if (aA.length && ay && (/^mouse/.test(ay.type))) {
                this._startOpening(aA)
            } this.activeMenu = ax.parent();
            this._trigger("focus", ay, { item: ax })
        }, _scrollIntoView: function (az) {
            var aC, ay, aA, aw, ax, aB;
            if (this._hasScroll()) {
                aC = parseFloat(al.css(this.activeMenu[0], "borderTopWidth")) || 0;
                ay = parseFloat(al.css(this.activeMenu[0], "paddingTop")) || 0;
                aA = az.offset().top - this.activeMenu.offset().top - aC - ay;
                aw = this.activeMenu.scrollTop();
                ax = this.activeMenu.height();
                aB = az.outerHeight();
                if (aA < 0) {
                    this.activeMenu.scrollTop(aw + aA)
                } else {
                    if (aA + aB > ax) {
                        this.activeMenu.scrollTop(aw + aA - ax + aB)
                    }
                }
            }
        }, blur: function (ax, aw) {
            if (!aw) {
                clearTimeout(this.timer)
            } if (!this.active) {
                return
            } this._removeClass(this.active.children(".ui-menu-item-wrapper"), null, "ui-state-active");
            this._trigger("blur", ax, { item: this.active });
            this.active = null
        }, _startOpening: function (aw) {
            clearTimeout(this.timer);
            if (aw.attr("aria-hidden") !== "true") {
                return
            } this.timer = this._delay(function () {
                this._close();
                this._open(aw)
            }, this.delay)
        }, _open: function (ax) {
            var aw = al.extend({ of: this.active }, this.options.position);
            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(ax.parents(".ui-menu")).hide().attr("aria-hidden", "true");
            ax.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(aw)
        }, collapseAll: function (ax, aw) {
            clearTimeout(this.timer);
            this.timer = this._delay(function () {
                var ay = aw ? this.element : al(ax && ax.target).closest(this.element.find(".ui-menu"));
                if (!ay.length) {
                    ay = this.element
                } this._close(ay);
                this.blur(ax);
                this._removeClass(ay.find(".ui-state-active"), null, "ui-state-active");
                this.activeMenu = ay
            }, this.delay)
        }, _close: function (aw) {
            if (!aw) {
                aw = this.active ? this.active.parent() : this.element
            } aw.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false")
        }, _closeOnDocumentClick: function (aw) {
            return !al(aw.target).closest(".ui-menu").length
        }, _isDivider: function (aw) {
            return !/[^\-\u2014\u2013\s]/.test(aw.text())
        }, collapse: function (ax) {
            var aw = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            if (aw && aw.length) {
                this._close();
                this.focus(ax, aw)
            }
        }, expand: function (ax) {
            var aw = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
            if (aw && aw.length) {
                this._open(aw.parent());
                this._delay(function () {
                    this.focus(ax, aw)
                })
            }
        }, next: function (aw) {
            this._move("next", "first", aw)
        }, previous: function (aw) {
            this._move("prev", "last", aw)
        }, isFirstItem: function () {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        }, isLastItem: function () {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        }, _move: function (az, ax, ay) {
            var aw;
            if (this.active) {
                if (az === "first" || az === "last") {
                    aw = this.active[az === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1)
                } else {
                    aw = this.active[az + "All"](".ui-menu-item").eq(0)
                }
            } if (!aw || !aw.length || !this.active) {
                aw = this.activeMenu.find(this.options.items)[ax]()
            } this.focus(ay, aw)
        }, nextPage: function (ay) {
            var ax, az, aw;
            if (!this.active) {
                this.next(ay);
                return
            } if (this.isLastItem()) {
                return
            } if (this._hasScroll()) {
                az = this.active.offset().top;
                aw = this.element.height();
                this.active.nextAll(".ui-menu-item").each(function () {
                    ax = al(this);
                    return ax.offset().top - az - aw < 0
                });
                this.focus(ay, ax)
            } else {
                this.focus(ay, this.activeMenu.find(this.options.items)[!this.active ? "first" : "last"]())
            }
        }, previousPage: function (ay) {
            var ax, az, aw;
            if (!this.active) {
                this.next(ay);
                return
            } if (this.isFirstItem()) {
                return
            } if (this._hasScroll()) {
                az = this.active.offset().top;
                aw = this.element.height();
                this.active.prevAll(".ui-menu-item").each(function () {
                    ax = al(this);
                    return ax.offset().top - az + aw > 0
                });
                this.focus(ay, ax)
            } else {
                this.focus(ay, this.activeMenu.find(this.options.items).first())
            }
        }, _hasScroll: function () {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        }, select: function (aw) {
            this.active = this.active || al(aw.target).closest(".ui-menu-item");
            var ax = { item: this.active };
            if (!this.active.has(".ui-menu").length) {
                this.collapseAll(aw, true)
            } this._trigger("select", aw, ax)
        }, _filterMenuItems: function (ay) {
            var aw = ay.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"), ax = new RegExp("^" + aw, "i");
            return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function () {
                return ax.test(al.trim(al(this).children(".ui-menu-item-wrapper").text()))
            })
        }
    });
    /*!
     * jQuery UI Autocomplete 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.autocomplete", {
        version: "1.12.1", defaultElement: "<input>", options: { appendTo: null, autoFocus: false, delay: 300, minLength: 1, position: { my: "left top", at: "left bottom", collision: "none" }, source: null, change: null, close: null, focus: null, open: null, response: null, search: null, select: null }, requestIndex: 0, pending: 0, _create: function () {
            var ay, aw, az, aB = this.element[0].nodeName.toLowerCase(), aA = aB === "textarea", ax = aB === "input";
            this.isMultiLine = aA || !ax && this._isContentEditable(this.element);
            this.valueMethod = this.element[aA || ax ? "val" : "text"];
            this.isNewMenu = true;
            this._addClass("ui-autocomplete-input");
            this.element.attr("autocomplete", "off");
            this._on(this.element, {
                keydown: function (aC) {
                    if (this.element.prop("readOnly")) {
                        ay = true;
                        az = true;
                        aw = true;
                        return
                    } ay = false;
                    az = false;
                    aw = false;
                    var aD = al.ui.keyCode;
                    switch (aC.keyCode) {
                        case aD.PAGE_UP: ay = true;
                            this._move("previousPage", aC);
                            break;
                        case aD.PAGE_DOWN: ay = true;
                            this._move("nextPage", aC);
                            break;
                        case aD.UP: ay = true;
                            this._keyEvent("previous", aC);
                            break;
                        case aD.DOWN: ay = true;
                            this._keyEvent("next", aC);
                            break;
                        case aD.ENTER: if (this.menu.active) {
                            ay = true;
                            aC.preventDefault();
                            this.menu.select(aC)
                        } break;
                        case aD.TAB: if (this.menu.active) {
                            this.menu.select(aC)
                        } break;
                        case aD.ESCAPE: if (this.menu.element.is(":visible")) {
                            if (!this.isMultiLine) {
                                this._value(this.term)
                            } this.close(aC);
                            aC.preventDefault()
                        } break;
                        default: aw = true;
                            this._searchTimeout(aC);
                            break
                    }
                }, keypress: function (aC) {
                    if (ay) {
                        ay = false;
                        if (!this.isMultiLine || this.menu.element.is(":visible")) {
                            aC.preventDefault()
                        } return
                    } if (aw) {
                        return
                    } var aD = al.ui.keyCode;
                    switch (aC.keyCode) {
                        case aD.PAGE_UP: this._move("previousPage", aC);
                            break;
                        case aD.PAGE_DOWN: this._move("nextPage", aC);
                            break;
                        case aD.UP: this._keyEvent("previous", aC);
                            break;
                        case aD.DOWN: this._keyEvent("next", aC);
                            break
                    }
                }, input: function (aC) {
                    if (az) {
                        az = false;
                        aC.preventDefault();
                        return
                    } this._searchTimeout(aC)
                }, focus: function () {
                    this.selectedItem = null;
                    this.previous = this._value()
                }, blur: function (aC) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return
                    } clearTimeout(this.searching);
                    this.close(aC);
                    this._change(aC)
                }
            });
            this._initSource();
            this.menu = al("<ul>").appendTo(this._appendTo()).menu({ role: null }).hide().menu("instance");
            this._addClass(this.menu.element, "ui-autocomplete", "ui-front");
            this._on(this.menu.element, {
                mousedown: function (aC) {
                    aC.preventDefault();
                    this.cancelBlur = true;
                    this._delay(function () {
                        delete this.cancelBlur;
                        if (this.element[0] !== al.ui.safeActiveElement(this.document[0])) {
                            this.element.trigger("focus")
                        }
                    })
                }, menufocus: function (aE, aF) {
                    var aC, aD;
                    if (this.isNewMenu) {
                        this.isNewMenu = false;
                        if (aE.originalEvent && /^mouse/.test(aE.originalEvent.type)) {
                            this.menu.blur();
                            this.document.one("mousemove", function () {
                                al(aE.target).trigger(aE.originalEvent)
                            });
                            return
                        }
                    } aD = aF.item.data("ui-autocomplete-item");
                    if (false !== this._trigger("focus", aE, { item: aD })) {
                        if (aE.originalEvent && /^key/.test(aE.originalEvent.type)) {
                            this._value(aD.value)
                        }
                    } aC = aF.item.attr("aria-label") || aD.value;
                    if (aC && al.trim(aC).length) {
                        this.liveRegion.children().hide();
                        al("<div>").text(aC).appendTo(this.liveRegion)
                    }
                }, menuselect: function (aE, aF) {
                    var aD = aF.item.data("ui-autocomplete-item"), aC = this.previous;
                    if (this.element[0] !== al.ui.safeActiveElement(this.document[0])) {
                        this.element.trigger("focus");
                        this.previous = aC;
                        this._delay(function () {
                            this.previous = aC;
                            this.selectedItem = aD
                        })
                    } if (false !== this._trigger("select", aE, { item: aD })) {
                        this._value(aD.value)
                    } this.term = this._value();
                    this.close(aE);
                    this.selectedItem = aD
                }
            });
            this.liveRegion = al("<div>", { role: "status", "aria-live": "assertive", "aria-relevant": "additions" }).appendTo(this.document[0].body);
            this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible");
            this._on(this.window, {
                beforeunload: function () {
                    this.element.removeAttr("autocomplete")
                }
            })
        }, _destroy: function () {
            clearTimeout(this.searching);
            this.element.removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove()
        }, _setOption: function (aw, ax) {
            this._super(aw, ax);
            if (aw === "source") {
                this._initSource()
            } if (aw === "appendTo") {
                this.menu.element.appendTo(this._appendTo())
            } if (aw === "disabled" && ax && this.xhr) {
                this.xhr.abort()
            }
        }, _isEventTargetInWidget: function (aw) {
            var ax = this.menu.element[0];
            return aw.target === this.element[0] || aw.target === ax || al.contains(ax, aw.target)
        }, _closeOnClickOutside: function (aw) {
            if (!this._isEventTargetInWidget(aw)) {
                this.close()
            }
        }, _appendTo: function () {
            var aw = this.options.appendTo;
            if (aw) {
                aw = aw.jquery || aw.nodeType ? al(aw) : this.document.find(aw).eq(0)
            } if (!aw || !aw[0]) {
                aw = this.element.closest(".ui-front, dialog")
            } if (!aw.length) {
                aw = this.document[0].body
            } return aw
        }, _initSource: function () {
            var ay, aw, ax = this;
            if (al.isArray(this.options.source)) {
                ay = this.options.source;
                this.source = function (aA, az) {
                    az(al.ui.autocomplete.filter(ay, aA.term))
                }
            } else {
                if (typeof this.options.source === "string") {
                    aw = this.options.source;
                    this.source = function (aA, az) {
                        if (ax.xhr) {
                            ax.xhr.abort()
                        } ax.xhr = al.ajax({
                            url: aw, data: aA, dataType: "json", success: function (aB) {
                                az(aB)
                            }, error: function () {
                                az([])
                            }
                        })
                    }
                } else {
                    this.source = this.options.source
                }
            }
        }, _searchTimeout: function (aw) {
            clearTimeout(this.searching);
            this.searching = this._delay(function () {
                var ay = this.term === this._value(), ax = this.menu.element.is(":visible"), az = aw.altKey || aw.ctrlKey || aw.metaKey || aw.shiftKey;
                if (!ay || (ay && !ax && !az)) {
                    this.selectedItem = null;
                    this.search(null, aw)
                }
            }, this.options.delay)
        }, search: function (ax, aw) {
            ax = ax != null ? ax : this._value();
            this.term = this._value();
            if (ax.length < this.options.minLength) {
                return this.close(aw)
            } if (this._trigger("search", aw) === false) {
                return
            } return this._search(ax)
        }, _search: function (aw) {
            this.pending++;
            this._addClass("ui-autocomplete-loading");
            this.cancelSearch = false;
            this.source({ term: aw }, this._response())
        }, _response: function () {
            var aw = ++this.requestIndex;
            return al.proxy(function (ax) {
                if (aw === this.requestIndex) {
                    this.__response(ax)
                } this.pending--;
                if (!this.pending) {
                    this._removeClass("ui-autocomplete-loading")
                }
            }, this)
        }, __response: function (aw) {
            if (aw) {
                aw = this._normalize(aw)
            } this._trigger("response", null, { content: aw });
            if (!this.options.disabled && aw && aw.length && !this.cancelSearch) {
                this._suggest(aw);
                this._trigger("open")
            } else {
                this._close()
            }
        }, close: function (aw) {
            this.cancelSearch = true;
            this._close(aw)
        }, _close: function (aw) {
            this._off(this.document, "mousedown");
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = true;
                this._trigger("close", aw)
            }
        }, _change: function (aw) {
            if (this.previous !== this._value()) {
                this._trigger("change", aw, { item: this.selectedItem })
            }
        }, _normalize: function (aw) {
            if (aw.length && aw[0].label && aw[0].value) {
                return aw
            } return al.map(aw, function (ax) {
                if (typeof ax === "string") {
                    return { label: ax, value: ax }
                } return al.extend({}, ax, { label: ax.label || ax.value, value: ax.value || ax.label })
            })
        }, _suggest: function (aw) {
            var ax = this.menu.element.empty();
            this._renderMenu(ax, aw);
            this.isNewMenu = true;
            this.menu.refresh();
            ax.show();
            this._resizeMenu();
            ax.position(al.extend({ of: this.element }, this.options.position));
            if (this.options.autoFocus) {
                this.menu.next()
            } this._on(this.document, { mousedown: "_closeOnClickOutside" })
        }, _resizeMenu: function () {
            var aw = this.menu.element;
            aw.outerWidth(Math.max(aw.width("").outerWidth() + 1, this.element.outerWidth()))
        }, _renderMenu: function (ax, aw) {
            var ay = this;
            al.each(aw, function (az, aA) {
                ay._renderItemData(ax, aA)
            })
        }, _renderItemData: function (aw, ax) {
            return this._renderItem(aw, ax).data("ui-autocomplete-item", ax)
        }, _renderItem: function (aw, ax) {
            return al("<li>").append(al("<div>").text(ax.label)).appendTo(aw)
        }, _move: function (ax, aw) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, aw);
                return
            } if (this.menu.isFirstItem() && /^previous/.test(ax) || this.menu.isLastItem() && /^next/.test(ax)) {
                if (!this.isMultiLine) {
                    this._value(this.term)
                } this.menu.blur();
                return
            } this.menu[ax](aw)
        }, widget: function () {
            return this.menu.element
        }, _value: function () {
            return this.valueMethod.apply(this.element, arguments)
        }, _keyEvent: function (ax, aw) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(ax, aw);
                aw.preventDefault()
            }
        }, _isContentEditable: function (ax) {
            if (!ax.length) {
                return false
            } var aw = ax.prop("contentEditable");
            if (aw === "inherit") {
                return this._isContentEditable(ax.parent())
            } return aw === "true"
        }
    });
    al.extend(al.ui.autocomplete, {
        escapeRegex: function (aw) {
            return aw.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        }, filter: function (ay, aw) {
            var ax = new RegExp(al.ui.autocomplete.escapeRegex(aw), "i");
            return al.grep(ay, function (az) {
                return ax.test(az.label || az.value || az)
            })
        }
    });
    al.widget("ui.autocomplete", al.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.", results: function (aw) {
                    return aw + (aw > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        }, __response: function (ax) {
            var aw;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return
            } if (ax && ax.length) {
                aw = this.options.messages.results(ax.length)
            } else {
                aw = this.options.messages.noResults
            } this.liveRegion.children().hide();
            al("<div>").text(aw).appendTo(this.liveRegion)
        }
    });
    var ao = al.ui.autocomplete;
    /*!
     * jQuery UI Controlgroup 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var g = /ui-corner-([a-z]){2,6}/g;
    var w = al.widget("ui.controlgroup", {
        version: "1.12.1", defaultElement: "<div>", options: { direction: "horizontal", disabled: null, onlyVisible: true, items: { button: "input[type=button], input[type=submit], input[type=reset], button, a", controlgroupLabel: ".ui-controlgroup-label", checkboxradio: "input[type='checkbox'], input[type='radio']", selectmenu: "select", spinner: ".ui-spinner-input" } }, _create: function () {
            this._enhance()
        }, _enhance: function () {
            this.element.attr("role", "toolbar");
            this.refresh()
        }, _destroy: function () {
            this._callChildMethod("destroy");
            this.childWidgets.removeData("ui-controlgroup-data");
            this.element.removeAttr("role");
            if (this.options.items.controlgroupLabel) {
                this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()
            }
        }, _initWidgets: function () {
            var ax = this, aw = [];
            al.each(this.options.items, function (aA, ay) {
                var aB;
                var az = {};
                if (!ay) {
                    return
                } if (aA === "controlgroupLabel") {
                    aB = ax.element.find(ay);
                    aB.each(function () {
                        var aC = al(this);
                        if (aC.children(".ui-controlgroup-label-contents").length) {
                            return
                        } aC.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")
                    });
                    ax._addClass(aB, null, "ui-widget ui-widget-content ui-state-default");
                    aw = aw.concat(aB.get());
                    return
                } if (!al.fn[aA]) {
                    return
                } if (ax["_" + aA + "Options"]) {
                    az = ax["_" + aA + "Options"]("middle")
                } else {
                    az = { classes: {} }
                } ax.element.find(ay).each(function () {
                    var aD = al(this);
                    var aC = aD[aA]("instance");
                    var aE = al.widget.extend({}, az);
                    if (aA === "button" && aD.parent(".ui-spinner").length) {
                        return
                    } if (!aC) {
                        aC = aD[aA]()[aA]("instance")
                    } if (aC) {
                        aE.classes = ax._resolveClassesValues(aE.classes, aC)
                    } aD[aA](aE);
                    var aF = aD[aA]("widget");
                    al.data(aF[0], "ui-controlgroup-data", aC ? aC : aD[aA]("instance"));
                    aw.push(aF[0])
                })
            });
            this.childWidgets = al(al.unique(aw));
            this._addClass(this.childWidgets, "ui-controlgroup-item")
        }, _callChildMethod: function (aw) {
            this.childWidgets.each(function () {
                var ax = al(this), ay = ax.data("ui-controlgroup-data");
                if (ay && ay[aw]) {
                    ay[aw]()
                }
            })
        }, _updateCornerClass: function (ay, ax) {
            var aw = "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all";
            var az = this._buildSimpleOptions(ax, "label").classes.label;
            this._removeClass(ay, null, aw);
            this._addClass(ay, null, az)
        }, _buildSimpleOptions: function (ax, ay) {
            var az = this.options.direction === "vertical";
            var aw = { classes: {} };
            aw.classes[ay] = { middle: "", first: "ui-corner-" + (az ? "top" : "left"), last: "ui-corner-" + (az ? "bottom" : "right"), only: "ui-corner-all" }[ax];
            return aw
        }, _spinnerOptions: function (aw) {
            var ax = this._buildSimpleOptions(aw, "ui-spinner");
            ax.classes["ui-spinner-up"] = "";
            ax.classes["ui-spinner-down"] = "";
            return ax
        }, _buttonOptions: function (aw) {
            return this._buildSimpleOptions(aw, "ui-button")
        }, _checkboxradioOptions: function (aw) {
            return this._buildSimpleOptions(aw, "ui-checkboxradio-label")
        }, _selectmenuOptions: function (aw) {
            var ax = this.options.direction === "vertical";
            return { width: ax ? "auto" : false, classes: { middle: { "ui-selectmenu-button-open": "", "ui-selectmenu-button-closed": "" }, first: { "ui-selectmenu-button-open": "ui-corner-" + (ax ? "top" : "tl"), "ui-selectmenu-button-closed": "ui-corner-" + (ax ? "top" : "left") }, last: { "ui-selectmenu-button-open": ax ? "" : "ui-corner-tr", "ui-selectmenu-button-closed": "ui-corner-" + (ax ? "bottom" : "right") }, only: { "ui-selectmenu-button-open": "ui-corner-top", "ui-selectmenu-button-closed": "ui-corner-all" } }[aw] }
        }, _resolveClassesValues: function (ay, ax) {
            var aw = {};
            al.each(ay, function (az) {
                var aA = ax.options.classes[az] || "";
                aA = al.trim(aA.replace(g, ""));
                aw[az] = (aA + " " + ay[az]).replace(/\s+/g, " ")
            });
            return aw
        }, _setOption: function (aw, ax) {
            if (aw === "direction") {
                this._removeClass("ui-controlgroup-" + this.options.direction)
            } this._super(aw, ax);
            if (aw === "disabled") {
                this._callChildMethod(ax ? "disable" : "enable");
                return
            } this.refresh()
        }, refresh: function () {
            var aw, ax = this;
            this._addClass("ui-controlgroup ui-controlgroup-" + this.options.direction);
            if (this.options.direction === "horizontal") {
                this._addClass(null, "ui-helper-clearfix")
            } this._initWidgets();
            aw = this.childWidgets;
            if (this.options.onlyVisible) {
                aw = aw.filter(":visible")
            } if (aw.length) {
                al.each(["first", "last"], function (aA, aB) {
                    var ay = aw[aB]().data("ui-controlgroup-data");
                    if (ay && ax["_" + ay.widgetName + "Options"]) {
                        var az = ax["_" + ay.widgetName + "Options"](aw.length === 1 ? "only" : aB);
                        az.classes = ax._resolveClassesValues(az.classes, ay);
                        ay.element[ay.widgetName](az)
                    } else {
                        ax._updateCornerClass(aw[aB](), aB)
                    }
                });
                this._callChildMethod("refresh")
            }
        }
    });
    /*!
     * jQuery UI Checkboxradio 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.checkboxradio", [al.ui.formResetMixin, {
        version: "1.12.1", options: { disabled: null, label: null, icon: true, classes: { "ui-checkboxradio-label": "ui-corner-all", "ui-checkboxradio-icon": "ui-corner-all" } }, _getCreateOptions: function () {
            var ax, az;
            var ay = this;
            var aw = this._super() || {};
            this._readType();
            az = this.element.labels();
            this.label = al(az[az.length - 1]);
            if (!this.label.length) {
                al.error("No label found for checkboxradio widget")
            } this.originalLabel = "";
            this.label.contents().not(this.element[0]).each(function () {
                ay.originalLabel += this.nodeType === 3 ? al(this).text() : this.outerHTML
            });
            if (this.originalLabel) {
                aw.label = this.originalLabel
            } ax = this.element[0].disabled;
            if (ax != null) {
                aw.disabled = ax
            } return aw
        }, _create: function () {
            var aw = this.element[0].checked;
            this._bindFormResetHandler();
            if (this.options.disabled == null) {
                this.options.disabled = this.element[0].disabled
            } this._setOption("disabled", this.options.disabled);
            this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible");
            this._addClass(this.label, "ui-checkboxradio-label", "ui-button ui-widget");
            if (this.type === "radio") {
                this._addClass(this.label, "ui-checkboxradio-radio-label")
            } if (this.options.label && this.options.label !== this.originalLabel) {
                this._updateLabel()
            } else {
                if (this.originalLabel) {
                    this.options.label = this.originalLabel
                }
            } this._enhance();
            if (aw) {
                this._addClass(this.label, "ui-checkboxradio-checked", "ui-state-active");
                if (this.icon) {
                    this._addClass(this.icon, null, "ui-state-hover")
                }
            } this._on({
                change: "_toggleClasses", focus: function () {
                    this._addClass(this.label, null, "ui-state-focus ui-visual-focus")
                }, blur: function () {
                    this._removeClass(this.label, null, "ui-state-focus ui-visual-focus")
                }
            })
        }, _readType: function () {
            var aw = this.element[0].nodeName.toLowerCase();
            this.type = this.element[0].type;
            if (aw !== "input" || !/radio|checkbox/.test(this.type)) {
                al.error("Can't create checkboxradio on element.nodeName=" + aw + " and element.type=" + this.type)
            }
        }, _enhance: function () {
            this._updateIcon(this.element[0].checked)
        }, widget: function () {
            return this.label
        }, _getRadioGroup: function () {
            var ay;
            var aw = this.element[0].name;
            var ax = "input[name='" + al.ui.escapeSelector(aw) + "']";
            if (!aw) {
                return al([])
            } if (this.form.length) {
                ay = al(this.form[0].elements).filter(ax)
            } else {
                ay = al(ax).filter(function () {
                    return al(this).form().length === 0
                })
            } return ay.not(this.element)
        }, _toggleClasses: function () {
            var aw = this.element[0].checked;
            this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", aw);
            if (this.options.icon && this.type === "checkbox") {
                this._toggleClass(this.icon, null, "ui-icon-check ui-state-checked", aw)._toggleClass(this.icon, null, "ui-icon-blank", !aw)
            } if (this.type === "radio") {
                this._getRadioGroup().each(function () {
                    var ax = al(this).checkboxradio("instance");
                    if (ax) {
                        ax._removeClass(ax.label, "ui-checkboxradio-checked", "ui-state-active")
                    }
                })
            }
        }, _destroy: function () {
            this._unbindFormResetHandler();
            if (this.icon) {
                this.icon.remove();
                this.iconSpace.remove()
            }
        }, _setOption: function (aw, ax) {
            if (aw === "label" && !ax) {
                return
            } this._super(aw, ax);
            if (aw === "disabled") {
                this._toggleClass(this.label, null, "ui-state-disabled", ax);
                this.element[0].disabled = ax;
                return
            } this.refresh()
        }, _updateIcon: function (ax) {
            var aw = "ui-icon ui-icon-background ";
            if (this.options.icon) {
                if (!this.icon) {
                    this.icon = al("<span>");
                    this.iconSpace = al("<span> </span>");
                    this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")
                } if (this.type === "checkbox") {
                    aw += ax ? "ui-icon-check ui-state-checked" : "ui-icon-blank";
                    this._removeClass(this.icon, null, ax ? "ui-icon-blank" : "ui-icon-check")
                } else {
                    aw += "ui-icon-blank"
                } this._addClass(this.icon, "ui-checkboxradio-icon", aw);
                if (!ax) {
                    this._removeClass(this.icon, null, "ui-icon-check ui-state-checked")
                } this.icon.prependTo(this.label).after(this.iconSpace)
            } else {
                if (this.icon !== undefined) {
                    this.icon.remove();
                    this.iconSpace.remove();
                    delete this.icon
                }
            }
        }, _updateLabel: function () {
            var aw = this.label.contents().not(this.element[0]);
            if (this.icon) {
                aw = aw.not(this.icon[0])
            } if (this.iconSpace) {
                aw = aw.not(this.iconSpace[0])
            } aw.remove();
            this.label.append(this.options.label)
        }, refresh: function () {
            var ax = this.element[0].checked, aw = this.element[0].disabled;
            this._updateIcon(ax);
            this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", ax);
            if (this.options.label !== null) {
                this._updateLabel()
            } if (aw !== this.options.disabled) {
                this._setOptions({ disabled: aw })
            }
        }
    }]);
    var ap = al.ui.checkboxradio;
    /*!
     * jQuery UI Button 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.button", {
        version: "1.12.1", defaultElement: "<button>", options: { classes: { "ui-button": "ui-corner-all" }, disabled: null, icon: null, iconPosition: "beginning", label: null, showLabel: true }, _getCreateOptions: function () {
            var ax, aw = this._super() || {};
            this.isInput = this.element.is("input");
            ax = this.element[0].disabled;
            if (ax != null) {
                aw.disabled = ax
            } this.originalLabel = this.isInput ? this.element.val() : this.element.html();
            if (this.originalLabel) {
                aw.label = this.originalLabel
            } return aw
        }, _create: function () {
            if (!this.option.showLabel & !this.options.icon) {
                this.options.showLabel = true
            } if (this.options.disabled == null) {
                this.options.disabled = this.element[0].disabled || false
            } this.hasTitle = !!this.element.attr("title");
            if (this.options.label && this.options.label !== this.originalLabel) {
                if (this.isInput) {
                    this.element.val(this.options.label)
                } else {
                    this.element.html(this.options.label)
                }
            } this._addClass("ui-button", "ui-widget");
            this._setOption("disabled", this.options.disabled);
            this._enhance();
            if (this.element.is("a")) {
                this._on({
                    keyup: function (aw) {
                        if (aw.keyCode === al.ui.keyCode.SPACE) {
                            aw.preventDefault();
                            if (this.element[0].click) {
                                this.element[0].click()
                            } else {
                                this.element.trigger("click")
                            }
                        }
                    }
                })
            }
        }, _enhance: function () {
            if (!this.element.is("button")) {
                this.element.attr("role", "button")
            } if (this.options.icon) {
                this._updateIcon("icon", this.options.icon);
                this._updateTooltip()
            }
        }, _updateTooltip: function () {
            this.title = this.element.attr("title");
            if (!this.options.showLabel && !this.title) {
                this.element.attr("title", this.options.label)
            }
        }, _updateIcon: function (ay, aA) {
            var ax = ay !== "iconPosition", aw = ax ? this.options.iconPosition : aA, az = aw === "top" || aw === "bottom";
            if (!this.icon) {
                this.icon = al("<span>");
                this._addClass(this.icon, "ui-button-icon", "ui-icon");
                if (!this.options.showLabel) {
                    this._addClass("ui-button-icon-only")
                }
            } else {
                if (ax) {
                    this._removeClass(this.icon, null, this.options.icon)
                }
            } if (ax) {
                this._addClass(this.icon, null, aA)
            } this._attachIcon(aw);
            if (az) {
                this._addClass(this.icon, null, "ui-widget-icon-block");
                if (this.iconSpace) {
                    this.iconSpace.remove()
                }
            } else {
                if (!this.iconSpace) {
                    this.iconSpace = al("<span> </span>");
                    this._addClass(this.iconSpace, "ui-button-icon-space")
                } this._removeClass(this.icon, null, "ui-wiget-icon-block");
                this._attachIconSpace(aw)
            }
        }, _destroy: function () {
            this.element.removeAttr("role");
            if (this.icon) {
                this.icon.remove()
            } if (this.iconSpace) {
                this.iconSpace.remove()
            } if (!this.hasTitle) {
                this.element.removeAttr("title")
            }
        }, _attachIconSpace: function (aw) {
            this.icon[/^(?:end|bottom)/.test(aw) ? "before" : "after"](this.iconSpace)
        }, _attachIcon: function (aw) {
            this.element[/^(?:end|bottom)/.test(aw) ? "append" : "prepend"](this.icon)
        }, _setOptions: function (ax) {
            var ay = ax.showLabel === undefined ? this.options.showLabel : ax.showLabel, aw = ax.icon === undefined ? this.options.icon : ax.icon;
            if (!ay && !aw) {
                ax.showLabel = true
            } this._super(ax)
        }, _setOption: function (aw, ax) {
            if (aw === "icon") {
                if (ax) {
                    this._updateIcon(aw, ax)
                } else {
                    if (this.icon) {
                        this.icon.remove();
                        if (this.iconSpace) {
                            this.iconSpace.remove()
                        }
                    }
                }
            } if (aw === "iconPosition") {
                this._updateIcon(aw, ax)
            } if (aw === "showLabel") {
                this._toggleClass("ui-button-icon-only", null, !ax);
                this._updateTooltip()
            } if (aw === "label") {
                if (this.isInput) {
                    this.element.val(ax)
                } else {
                    this.element.html(ax);
                    if (this.icon) {
                        this._attachIcon(this.options.iconPosition);
                        this._attachIconSpace(this.options.iconPosition)
                    }
                }
            } this._super(aw, ax);
            if (aw === "disabled") {
                this._toggleClass(null, "ui-state-disabled", ax);
                this.element[0].disabled = ax;
                if (ax) {
                    this.element.blur()
                }
            }
        }, refresh: function () {
            var aw = this.element.is("input, button") ? this.element[0].disabled : this.element.hasClass("ui-button-disabled");
            if (aw !== this.options.disabled) {
                this._setOptions({ disabled: aw })
            } this._updateTooltip()
        }
    });
    if (al.uiBackCompat !== false) {
        al.widget("ui.button", al.ui.button, {
            options: { text: true, icons: { primary: null, secondary: null } }, _create: function () {
                if (this.options.showLabel && !this.options.text) {
                    this.options.showLabel = this.options.text
                } if (!this.options.showLabel && this.options.text) {
                    this.options.text = this.options.showLabel
                } if (!this.options.icon && (this.options.icons.primary || this.options.icons.secondary)) {
                    if (this.options.icons.primary) {
                        this.options.icon = this.options.icons.primary
                    } else {
                        this.options.icon = this.options.icons.secondary;
                        this.options.iconPosition = "end"
                    }
                } else {
                    if (this.options.icon) {
                        this.options.icons.primary = this.options.icon
                    }
                } this._super()
            }, _setOption: function (aw, ax) {
                if (aw === "text") {
                    this._super("showLabel", ax);
                    return
                } if (aw === "showLabel") {
                    this.options.text = ax
                } if (aw === "icon") {
                    this.options.icons.primary = ax
                } if (aw === "icons") {
                    if (ax.primary) {
                        this._super("icon", ax.primary);
                        this._super("iconPosition", "beginning")
                    } else {
                        if (ax.secondary) {
                            this._super("icon", ax.secondary);
                            this._super("iconPosition", "end")
                        }
                    }
                } this._superApply(arguments)
            }
        });
        al.fn.button = (function (aw) {
            return function () {
                if (!this.length || (this.length && this[0].tagName !== "INPUT") || (this.length && this[0].tagName === "INPUT" && (this.attr("type") !== "checkbox" && this.attr("type") !== "radio"))) {
                    return aw.apply(this, arguments)
                } if (!al.ui.checkboxradio) {
                    al.error("Checkboxradio widget missing")
                } if (arguments.length === 0) {
                    return this.checkboxradio({ icon: false })
                } return this.checkboxradio.apply(this, arguments)
            }
        })(al.fn.button);
        al.fn.buttonset = function () {
            if (!al.ui.controlgroup) {
                al.error("Controlgroup widget missing")
            } if (arguments[0] === "option" && arguments[1] === "items" && arguments[2]) {
                return this.controlgroup.apply(this, [arguments[0], "items.button", arguments[2]])
            } if (arguments[0] === "option" && arguments[1] === "items") {
                return this.controlgroup.apply(this, [arguments[0], "items.button"])
            } if (typeof arguments[0] === "object" && arguments[0].items) {
                arguments[0].items = { button: arguments[0].items }
            } return this.controlgroup.apply(this, arguments)
        }
    } var D = al.ui.button;
    /*!
     * jQuery UI Datepicker 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.extend(al.ui, { datepicker: { version: "1.12.1" } });
    var ar;
    function ag(ax) {
        var aw, ay;
        while (ax.length && ax[0] !== document) {
            aw = ax.css("position");
            if (aw === "absolute" || aw === "relative" || aw === "fixed") {
                ay = parseInt(ax.css("zIndex"), 10);
                if (!isNaN(ay) && ay !== 0) {
                    return ay
                }
            } ax = ax.parent()
        } return 0
    } function Q() {
        this._curInst = null;
        this._keyEvent = false;
        this._disabledInputs = [];
        this._datepickerShowing = false;
        this._inDialog = false;
        this._mainDivId = "ui-datepicker-div";
        this._inlineClass = "ui-datepicker-inline";
        this._appendClass = "ui-datepicker-append";
        this._triggerClass = "ui-datepicker-trigger";
        this._dialogClass = "ui-datepicker-dialog";
        this._disableClass = "ui-datepicker-disabled";
        this._unselectableClass = "ui-datepicker-unselectable";
        this._currentClass = "ui-datepicker-current-day";
        this._dayOverClass = "ui-datepicker-days-cell-over";
        this.regional = [];
        this.regional[""] = { closeText: "Done", prevText: "Prev", nextText: "Next", currentText: "Today", monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader: "Wk", dateFormat: "mm/dd/yy", firstDay: 0, isRTL: false, showMonthAfterYear: false, yearSuffix: "" };
        this._defaults = { showOn: "focus", showAnim: "fadeIn", showOptions: {}, defaultDate: null, appendText: "", buttonText: "...", buttonImage: "", buttonImageOnly: false, hideIfNoPrevNext: false, navigationAsDateFormat: false, gotoCurrent: false, changeMonth: false, changeYear: false, yearRange: "c-10:c+10", showOtherMonths: false, selectOtherMonths: false, showWeek: false, calculateWeek: this.iso8601Week, shortYearCutoff: "+10", minDate: null, maxDate: null, duration: "fast", beforeShowDay: null, beforeShow: null, onSelect: null, onChangeMonthYear: null, onClose: null, numberOfMonths: 1, showCurrentAtPos: 0, stepMonths: 1, stepBigMonths: 12, altField: "", altFormat: "", constrainInput: true, showButtonPanel: false, autoSize: false, disabled: false };
        al.extend(this._defaults, this.regional[""]);
        this.regional.en = al.extend(true, {}, this.regional[""]);
        this.regional["en-US"] = al.extend(true, {}, this.regional.en);
        this.dpDiv = Y(al("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
    } al.extend(Q.prototype, {
        markerClassName: "hasDatepicker", maxRows: 4, _widgetDatepicker: function () {
            return this.dpDiv
        }, setDefaults: function (aw) {
            G(this._defaults, aw || {});
            return this
        }, _attachDatepicker: function (az, aw) {
            var aA, ay, ax;
            aA = az.nodeName.toLowerCase();
            ay = (aA === "div" || aA === "span");
            if (!az.id) {
                this.uuid += 1;
                az.id = "dp" + this.uuid
            } ax = this._newInst(al(az), ay);
            ax.settings = al.extend({}, aw || {});
            if (aA === "input") {
                this._connectDatepicker(az, ax)
            } else {
                if (ay) {
                    this._inlineDatepicker(az, ax)
                }
            }
        }, _newInst: function (ax, aw) {
            var ay = ax[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
            return { id: ay, input: ax, selectedDay: 0, selectedMonth: 0, selectedYear: 0, drawMonth: 0, drawYear: 0, inline: aw, dpDiv: (!aw ? this.dpDiv : Y(al("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))) }
        }, _connectDatepicker: function (ay, ax) {
            var aw = al(ay);
            ax.append = al([]);
            ax.trigger = al([]);
            if (aw.hasClass(this.markerClassName)) {
                return
            } this._attachments(aw, ax);
            aw.addClass(this.markerClassName).on("keydown", this._doKeyDown).on("keypress", this._doKeyPress).on("keyup", this._doKeyUp);
            this._autoSize(ax);
            al.data(ay, "datepicker", ax);
            if (ax.settings.disabled) {
                this._disableDatepicker(ay)
            }
        }, _attachments: function (ay, aB) {
            var ax, aA, aw, aC = this._get(aB, "appendText"), az = this._get(aB, "isRTL");
            if (aB.append) {
                aB.append.remove()
            } if (aC) {
                aB.append = al("<span class='" + this._appendClass + "'>" + aC + "</span>");
                ay[az ? "before" : "after"](aB.append)
            } ay.off("focus", this._showDatepicker);
            if (aB.trigger) {
                aB.trigger.remove()
            } ax = this._get(aB, "showOn");
            if (ax === "focus" || ax === "both") {
                ay.on("focus", this._showDatepicker)
            } if (ax === "button" || ax === "both") {
                aA = this._get(aB, "buttonText");
                aw = this._get(aB, "buttonImage");
                aB.trigger = al(this._get(aB, "buttonImageOnly") ? al("<img/>").addClass(this._triggerClass).attr({ src: aw, alt: aA, title: aA }) : al("<button type='button'></button>").addClass(this._triggerClass).html(!aw ? aA : al("<img/>").attr({ src: aw, alt: aA, title: aA })));
                ay[az ? "before" : "after"](aB.trigger);
                aB.trigger.on("click", function () {
                    if (al.datepicker._datepickerShowing && al.datepicker._lastInput === ay[0]) {
                        al.datepicker._hideDatepicker()
                    } else {
                        if (al.datepicker._datepickerShowing && al.datepicker._lastInput !== ay[0]) {
                            al.datepicker._hideDatepicker();
                            al.datepicker._showDatepicker(ay[0])
                        } else {
                            al.datepicker._showDatepicker(ay[0])
                        }
                    } return false
                })
            }
        }, _autoSize: function (aC) {
            if (this._get(aC, "autoSize") && !aC.inline) {
                var az, ax, ay, aB, aA = new Date(2009, 12 - 1, 20), aw = this._get(aC, "dateFormat");
                if (aw.match(/[DM]/)) {
                    az = function (aD) {
                        ax = 0;
                        ay = 0;
                        for (aB = 0;
                            aB < aD.length;
                            aB++) {
                                if (aD[aB].length > ax) {
                                    ax = aD[aB].length;
                                    ay = aB
                                }
                        } return ay
                    };
                    aA.setMonth(az(this._get(aC, (aw.match(/MM/) ? "monthNames" : "monthNamesShort"))));
                    aA.setDate(az(this._get(aC, (aw.match(/DD/) ? "dayNames" : "dayNamesShort"))) + 20 - aA.getDay())
                } aC.input.attr("size", this._formatDate(aC, aA).length)
            }
        }, _inlineDatepicker: function (ax, aw) {
            var ay = al(ax);
            if (ay.hasClass(this.markerClassName)) {
                return
            } ay.addClass(this.markerClassName).append(aw.dpDiv);
            al.data(ax, "datepicker", aw);
            this._setDate(aw, this._getDefaultDate(aw), true);
            this._updateDatepicker(aw);
            this._updateAlternate(aw);
            if (aw.settings.disabled) {
                this._disableDatepicker(ax)
            } aw.dpDiv.css("display", "block")
        }, _dialogDatepicker: function (aD, ax, aB, ay, aC) {
            var aw, aG, aA, aF, aE, az = this._dialogInst;
            if (!az) {
                this.uuid += 1;
                aw = "dp" + this.uuid;
                this._dialogInput = al("<input type='text' id='" + aw + "' style='position: absolute; top: -100px; width: 0px;'/>");
                this._dialogInput.on("keydown", this._doKeyDown);
                al("body").append(this._dialogInput);
                az = this._dialogInst = this._newInst(this._dialogInput, false);
                az.settings = {};
                al.data(this._dialogInput[0], "datepicker", az)
            } G(az.settings, ay || {});
            ax = (ax && ax.constructor === Date ? this._formatDate(az, ax) : ax);
            this._dialogInput.val(ax);
            this._pos = (aC ? (aC.length ? aC : [aC.pageX, aC.pageY]) : null);
            if (!this._pos) {
                aG = document.documentElement.clientWidth;
                aA = document.documentElement.clientHeight;
                aF = document.documentElement.scrollLeft || document.body.scrollLeft;
                aE = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [(aG / 2) - 100 + aF, (aA / 2) - 150 + aE]
            } this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
            az.settings.onSelect = aB;
            this._inDialog = true;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if (al.blockUI) {
                al.blockUI(this.dpDiv)
            } al.data(this._dialogInput[0], "datepicker", az);
            return this
        }, _destroyDatepicker: function (ay) {
            var az, aw = al(ay), ax = al.data(ay, "datepicker");
            if (!aw.hasClass(this.markerClassName)) {
                return
            } az = ay.nodeName.toLowerCase();
            al.removeData(ay, "datepicker");
            if (az === "input") {
                ax.append.remove();
                ax.trigger.remove();
                aw.removeClass(this.markerClassName).off("focus", this._showDatepicker).off("keydown", this._doKeyDown).off("keypress", this._doKeyPress).off("keyup", this._doKeyUp)
            } else {
                if (az === "div" || az === "span") {
                    aw.removeClass(this.markerClassName).empty()
                }
            } if (ar === ax) {
                ar = null
            }
        }, _enableDatepicker: function (az) {
            var aA, ay, aw = al(az), ax = al.data(az, "datepicker");
            if (!aw.hasClass(this.markerClassName)) {
                return
            } aA = az.nodeName.toLowerCase();
            if (aA === "input") {
                az.disabled = false;
                ax.trigger.filter("button").each(function () {
                    this.disabled = false
                }).end().filter("img").css({ opacity: "1.0", cursor: "" })
            } else {
                if (aA === "div" || aA === "span") {
                    ay = aw.children("." + this._inlineClass);
                    ay.children().removeClass("ui-state-disabled");
                    ay.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", false)
                }
            } this._disabledInputs = al.map(this._disabledInputs, function (aB) {
                return (aB === az ? null : aB)
            })
        }, _disableDatepicker: function (az) {
            var aA, ay, aw = al(az), ax = al.data(az, "datepicker");
            if (!aw.hasClass(this.markerClassName)) {
                return
            } aA = az.nodeName.toLowerCase();
            if (aA === "input") {
                az.disabled = true;
                ax.trigger.filter("button").each(function () {
                    this.disabled = true
                }).end().filter("img").css({ opacity: "0.5", cursor: "default" })
            } else {
                if (aA === "div" || aA === "span") {
                    ay = aw.children("." + this._inlineClass);
                    ay.children().addClass("ui-state-disabled");
                    ay.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", true)
                }
            } this._disabledInputs = al.map(this._disabledInputs, function (aB) {
                return (aB === az ? null : aB)
            });
            this._disabledInputs[this._disabledInputs.length] = az
        }, _isDisabledDatepicker: function (ax) {
            if (!ax) {
                return false
            } for (var aw = 0;
                aw < this._disabledInputs.length;
                aw++) {
                    if (this._disabledInputs[aw] === ax) {
                        return true
                    }
            } return false
        }, _getInst: function (ax) {
            try {
                return al.data(ax, "datepicker")
            } catch (aw) {
                throw "Missing instance data for this datepicker"
            }
        }, _optionDatepicker: function (aC, ax, aB) {
            var ay, aw, aA, aD, az = this._getInst(aC);
            if (arguments.length === 2 && typeof ax === "string") {
                return (ax === "defaults" ? al.extend({}, al.datepicker._defaults) : (az ? (ax === "all" ? al.extend({}, az.settings) : this._get(az, ax)) : null))
            } ay = ax || {};
            if (typeof ax === "string") {
                ay = {};
                ay[ax] = aB
            } if (az) {
                if (this._curInst === az) {
                    this._hideDatepicker()
                } aw = this._getDateDatepicker(aC, true);
                aA = this._getMinMaxDate(az, "min");
                aD = this._getMinMaxDate(az, "max");
                G(az.settings, ay);
                if (aA !== null && ay.dateFormat !== undefined && ay.minDate === undefined) {
                    az.settings.minDate = this._formatDate(az, aA)
                } if (aD !== null && ay.dateFormat !== undefined && ay.maxDate === undefined) {
                    az.settings.maxDate = this._formatDate(az, aD)
                } if ("disabled" in ay) {
                    if (ay.disabled) {
                        this._disableDatepicker(aC)
                    } else {
                        this._enableDatepicker(aC)
                    }
                } this._attachments(al(aC), az);
                this._autoSize(az);
                this._setDate(az, aw);
                this._updateAlternate(az);
                this._updateDatepicker(az)
            }
        }, _changeDatepicker: function (ay, aw, ax) {
            this._optionDatepicker(ay, aw, ax)
        }, _refreshDatepicker: function (ax) {
            var aw = this._getInst(ax);
            if (aw) {
                this._updateDatepicker(aw)
            }
        }, _setDateDatepicker: function (ay, aw) {
            var ax = this._getInst(ay);
            if (ax) {
                this._setDate(ax, aw);
                this._updateDatepicker(ax);
                this._updateAlternate(ax)
            }
        }, _getDateDatepicker: function (ay, aw) {
            var ax = this._getInst(ay);
            if (ax && !ax.inline) {
                this._setDateFromField(ax, aw)
            } return (ax ? this._getDate(ax) : null)
        }, _doKeyDown: function (az) {
            var ax, aw, aB, aA = al.datepicker._getInst(az.target), aC = true, ay = aA.dpDiv.is(".ui-datepicker-rtl");
            aA._keyEvent = true;
            if (al.datepicker._datepickerShowing) {
                switch (az.keyCode) {
                    case 9: al.datepicker._hideDatepicker();
                        aC = false;
                        break;
                    case 13: aB = al("td." + al.datepicker._dayOverClass + ":not(." + al.datepicker._currentClass + ")", aA.dpDiv);
                        if (aB[0]) {
                            al.datepicker._selectDay(az.target, aA.selectedMonth, aA.selectedYear, aB[0])
                        } ax = al.datepicker._get(aA, "onSelect");
                        if (ax) {
                            aw = al.datepicker._formatDate(aA);
                            ax.apply((aA.input ? aA.input[0] : null), [aw, aA])
                        } else {
                            al.datepicker._hideDatepicker()
                        } return false;
                    case 27: al.datepicker._hideDatepicker();
                        break;
                    case 33: al.datepicker._adjustDate(az.target, (az.ctrlKey ? -al.datepicker._get(aA, "stepBigMonths") : -al.datepicker._get(aA, "stepMonths")), "M");
                        break;
                    case 34: al.datepicker._adjustDate(az.target, (az.ctrlKey ? +al.datepicker._get(aA, "stepBigMonths") : +al.datepicker._get(aA, "stepMonths")), "M");
                        break;
                    case 35: if (az.ctrlKey || az.metaKey) {
                        al.datepicker._clearDate(az.target)
                    } aC = az.ctrlKey || az.metaKey;
                        break;
                    case 36: if (az.ctrlKey || az.metaKey) {
                        al.datepicker._gotoToday(az.target)
                    } aC = az.ctrlKey || az.metaKey;
                        break;
                    case 37: if (az.ctrlKey || az.metaKey) {
                        al.datepicker._adjustDate(az.target, (ay ? +1 : -1), "D")
                    } aC = az.ctrlKey || az.metaKey;
                        if (az.originalEvent.altKey) {
                            al.datepicker._adjustDate(az.target, (az.ctrlKey ? -al.datepicker._get(aA, "stepBigMonths") : -al.datepicker._get(aA, "stepMonths")), "M")
                        } break;
                    case 38: if (az.ctrlKey || az.metaKey) {
                        al.datepicker._adjustDate(az.target, -7, "D")
                    } aC = az.ctrlKey || az.metaKey;
                        break;
                    case 39: if (az.ctrlKey || az.metaKey) {
                        al.datepicker._adjustDate(az.target, (ay ? -1 : +1), "D")
                    } aC = az.ctrlKey || az.metaKey;
                        if (az.originalEvent.altKey) {
                            al.datepicker._adjustDate(az.target, (az.ctrlKey ? +al.datepicker._get(aA, "stepBigMonths") : +al.datepicker._get(aA, "stepMonths")), "M")
                        } break;
                    case 40: if (az.ctrlKey || az.metaKey) {
                        al.datepicker._adjustDate(az.target, +7, "D")
                    } aC = az.ctrlKey || az.metaKey;
                        break;
                    default: aC = false
                }
            } else {
                if (az.keyCode === 36 && az.ctrlKey) {
                    al.datepicker._showDatepicker(this)
                } else {
                    aC = false
                }
            } if (aC) {
                az.preventDefault();
                az.stopPropagation()
            }
        }, _doKeyPress: function (ay) {
            var ax, aw, az = al.datepicker._getInst(ay.target);
            if (al.datepicker._get(az, "constrainInput")) {
                ax = al.datepicker._possibleChars(al.datepicker._get(az, "dateFormat"));
                aw = String.fromCharCode(ay.charCode == null ? ay.keyCode : ay.charCode);
                return ay.ctrlKey || ay.metaKey || (aw < " " || !ax || ax.indexOf(aw) > -1)
            }
        }, _doKeyUp: function (ay) {
            var aw, az = al.datepicker._getInst(ay.target);
            if (az.input.val() !== az.lastVal) {
                try {
                    aw = al.datepicker.parseDate(al.datepicker._get(az, "dateFormat"), (az.input ? az.input.val() : null), al.datepicker._getFormatConfig(az));
                    if (aw) {
                        al.datepicker._setDateFromField(az);
                        al.datepicker._updateAlternate(az);
                        al.datepicker._updateDatepicker(az)
                    }
                } catch (ax) { }
            } return true
        }, _showDatepicker: function (ax) {
            ax = ax.target || ax;
            if (ax.nodeName.toLowerCase() !== "input") {
                ax = al("input", ax.parentNode)[0]
            } if (al.datepicker._isDisabledDatepicker(ax) || al.datepicker._lastInput === ax) {
                return
            } var az, aD, ay, aB, aC, aw, aA;
            az = al.datepicker._getInst(ax);
            if (al.datepicker._curInst && al.datepicker._curInst !== az) {
                al.datepicker._curInst.dpDiv.stop(true, true);
                if (az && al.datepicker._datepickerShowing) {
                    al.datepicker._hideDatepicker(al.datepicker._curInst.input[0])
                }
            } aD = al.datepicker._get(az, "beforeShow");
            ay = aD ? aD.apply(ax, [ax, az]) : {};
            if (ay === false) {
                return
            } G(az.settings, ay);
            az.lastVal = null;
            al.datepicker._lastInput = ax;
            al.datepicker._setDateFromField(az);
            if (al.datepicker._inDialog) {
                ax.value = ""
            } if (!al.datepicker._pos) {
                al.datepicker._pos = al.datepicker._findPos(ax);
                al.datepicker._pos[1] += ax.offsetHeight
            } aB = false;
            al(ax).parents().each(function () {
                aB |= al(this).css("position") === "fixed";
                return !aB
            });
            aC = { left: al.datepicker._pos[0], top: al.datepicker._pos[1] };
            al.datepicker._pos = null;
            az.dpDiv.empty();
            az.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" });
            al.datepicker._updateDatepicker(az);
            aC = al.datepicker._checkOffset(az, aC, aB);
            az.dpDiv.css({ position: (al.datepicker._inDialog && al.blockUI ? "static" : (aB ? "fixed" : "absolute")), display: "none", left: aC.left + "px", top: aC.top + "px" });
            if (!az.inline) {
                aw = al.datepicker._get(az, "showAnim");
                aA = al.datepicker._get(az, "duration");
                az.dpDiv.css("z-index", ag(al(ax)) + 1);
                al.datepicker._datepickerShowing = true;
                if (al.effects && al.effects.effect[aw]) {
                    az.dpDiv.show(aw, al.datepicker._get(az, "showOptions"), aA)
                } else {
                    az.dpDiv[aw || "show"](aw ? aA : null)
                } if (al.datepicker._shouldFocusInput(az)) {
                    az.input.trigger("focus")
                } al.datepicker._curInst = az
            }
        }, _updateDatepicker: function (az) {
            this.maxRows = 4;
            ar = az;
            az.dpDiv.empty().append(this._generateHTML(az));
            this._attachHandlers(az);
            var aB, aw = this._getNumberOfMonths(az), aA = aw[1], ay = 17, ax = az.dpDiv.find("." + this._dayOverClass + " a");
            if (ax.length > 0) {
                L.apply(ax.get(0))
            } az.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            if (aA > 1) {
                az.dpDiv.addClass("ui-datepicker-multi-" + aA).css("width", (ay * aA) + "em")
            } az.dpDiv[(aw[0] !== 1 || aw[1] !== 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
            az.dpDiv[(this._get(az, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
            if (az === al.datepicker._curInst && al.datepicker._datepickerShowing && al.datepicker._shouldFocusInput(az)) {
                az.input.trigger("focus")
            } if (az.yearshtml) {
                aB = az.yearshtml;
                setTimeout(function () {
                    if (aB === az.yearshtml && az.yearshtml) {
                        az.dpDiv.find("select.ui-datepicker-year:first").replaceWith(az.yearshtml)
                    } aB = az.yearshtml = null
                }, 0)
            }
        }, _shouldFocusInput: function (aw) {
            return aw.input && aw.input.is(":visible") && !aw.input.is(":disabled") && !aw.input.is(":focus")
        }, _checkOffset: function (aB, az, ay) {
            var aA = aB.dpDiv.outerWidth(), aE = aB.dpDiv.outerHeight(), aD = aB.input ? aB.input.outerWidth() : 0, aw = aB.input ? aB.input.outerHeight() : 0, aC = document.documentElement.clientWidth + (ay ? 0 : al(document).scrollLeft()), ax = document.documentElement.clientHeight + (ay ? 0 : al(document).scrollTop());
            az.left -= (this._get(aB, "isRTL") ? (aA - aD) : 0);
            az.left -= (ay && az.left === aB.input.offset().left) ? al(document).scrollLeft() : 0;
            az.top -= (ay && az.top === (aB.input.offset().top + aw)) ? al(document).scrollTop() : 0;
            az.left -= Math.min(az.left, (az.left + aA > aC && aC > aA) ? Math.abs(az.left + aA - aC) : 0);
            az.top -= Math.min(az.top, (az.top + aE > ax && ax > aE) ? Math.abs(aE + aw) : 0);
            return az
        }, _findPos: function (az) {
            var aw, ay = this._getInst(az), ax = this._get(ay, "isRTL");
            while (az && (az.type === "hidden" || az.nodeType !== 1 || al.expr.filters.hidden(az))) {
                az = az[ax ? "previousSibling" : "nextSibling"]
            } aw = al(az).offset();
            return [aw.left, aw.top]
        }, _hideDatepicker: function (ay) {
            var ax, aB, aA, aw, az = this._curInst;
            if (!az || (ay && az !== al.data(ay, "datepicker"))) {
                return
            } if (this._datepickerShowing) {
                ax = this._get(az, "showAnim");
                aB = this._get(az, "duration");
                aA = function () {
                    al.datepicker._tidyDialog(az)
                };
                if (al.effects && (al.effects.effect[ax] || al.effects[ax])) {
                    az.dpDiv.hide(ax, al.datepicker._get(az, "showOptions"), aB, aA)
                } else {
                    az.dpDiv[(ax === "slideDown" ? "slideUp" : (ax === "fadeIn" ? "fadeOut" : "hide"))]((ax ? aB : null), aA)
                } if (!ax) {
                    aA()
                } this._datepickerShowing = false;
                aw = this._get(az, "onClose");
                if (aw) {
                    aw.apply((az.input ? az.input[0] : null), [(az.input ? az.input.val() : ""), az])
                } this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" });
                    if (al.blockUI) {
                        al.unblockUI();
                        al("body").append(this.dpDiv)
                    }
                } this._inDialog = false
            }
        }, _tidyDialog: function (aw) {
            aw.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")
        }, _checkExternalClick: function (ax) {
            if (!al.datepicker._curInst) {
                return
            } var aw = al(ax.target), ay = al.datepicker._getInst(aw[0]);
            if (((aw[0].id !== al.datepicker._mainDivId && aw.parents("#" + al.datepicker._mainDivId).length === 0 && !aw.hasClass(al.datepicker.markerClassName) && !aw.closest("." + al.datepicker._triggerClass).length && al.datepicker._datepickerShowing && !(al.datepicker._inDialog && al.blockUI))) || (aw.hasClass(al.datepicker.markerClassName) && al.datepicker._curInst !== ay)) {
                al.datepicker._hideDatepicker()
            }
        }, _adjustDate: function (aA, az, ay) {
            var ax = al(aA), aw = this._getInst(ax[0]);
            if (this._isDisabledDatepicker(ax[0])) {
                return
            } this._adjustInstDate(aw, az + (ay === "M" ? this._get(aw, "showCurrentAtPos") : 0), ay);
            this._updateDatepicker(aw)
        }, _gotoToday: function (az) {
            var aw, ay = al(az), ax = this._getInst(ay[0]);
            if (this._get(ax, "gotoCurrent") && ax.currentDay) {
                ax.selectedDay = ax.currentDay;
                ax.drawMonth = ax.selectedMonth = ax.currentMonth;
                ax.drawYear = ax.selectedYear = ax.currentYear
            } else {
                aw = new Date();
                ax.selectedDay = aw.getDate();
                ax.drawMonth = ax.selectedMonth = aw.getMonth();
                ax.drawYear = ax.selectedYear = aw.getFullYear()
            } this._notifyChange(ax);
            this._adjustDate(ay)
        }, _selectMonthYear: function (aA, aw, az) {
            var ay = al(aA), ax = this._getInst(ay[0]);
            ax["selected" + (az === "M" ? "Month" : "Year")] = ax["draw" + (az === "M" ? "Month" : "Year")] = parseInt(aw.options[aw.selectedIndex].value, 10);
            this._notifyChange(ax);
            this._adjustDate(ay)
        }, _selectDay: function (aB, az, aw, aA) {
            var ax, ay = al(aB);
            if (al(aA).hasClass(this._unselectableClass) || this._isDisabledDatepicker(ay[0])) {
                return
            } ax = this._getInst(ay[0]);
            ax.selectedDay = ax.currentDay = al("a", aA).html();
            ax.selectedMonth = ax.currentMonth = az;
            ax.selectedYear = ax.currentYear = aw;
            this._selectDate(aB, this._formatDate(ax, ax.currentDay, ax.currentMonth, ax.currentYear))
        }, _clearDate: function (ax) {
            var aw = al(ax);
            this._selectDate(aw, "")
        }, _selectDate: function (aA, aw) {
            var ax, az = al(aA), ay = this._getInst(az[0]);
            aw = (aw != null ? aw : this._formatDate(ay));
            if (ay.input) {
                ay.input.val(aw)
            } this._updateAlternate(ay);
            ax = this._get(ay, "onSelect");
            if (ax) {
                ax.apply((ay.input ? ay.input[0] : null), [aw, ay])
            } else {
                if (ay.input) {
                    ay.input.trigger("change")
                }
            } if (ay.inline) {
                this._updateDatepicker(ay)
            } else {
                this._hideDatepicker();
                this._lastInput = ay.input[0];
                if (typeof (ay.input[0]) !== "object") {
                    ay.input.trigger("focus")
                } this._lastInput = null
            }
        }, _updateAlternate: function (aA) {
            var az, ay, aw, ax = this._get(aA, "altField");
            if (ax) {
                az = this._get(aA, "altFormat") || this._get(aA, "dateFormat");
                ay = this._getDate(aA);
                aw = this.formatDate(az, ay, this._getFormatConfig(aA));
                al(ax).val(aw)
            }
        }, noWeekends: function (ax) {
            var aw = ax.getDay();
            return [(aw > 0 && aw < 6), ""]
        }, iso8601Week: function (aw) {
            var ax, ay = new Date(aw.getTime());
            ay.setDate(ay.getDate() + 4 - (ay.getDay() || 7));
            ax = ay.getTime();
            ay.setMonth(0);
            ay.setDate(1);
            return Math.floor(Math.round((ax - ay) / 86400000) / 7) + 1
        }, parseDate: function (aM, aH, aO) {
            if (aM == null || aH == null) {
                throw "Invalid arguments"
            } aH = (typeof aH === "object" ? aH.toString() : aH + "");
            if (aH === "") {
                return null
            } var az, aJ, ax, aN = 0, aC = (aO ? aO.shortYearCutoff : null) || this._defaults.shortYearCutoff, ay = (typeof aC !== "string" ? aC : new Date().getFullYear() % 100 + parseInt(aC, 10)), aF = (aO ? aO.dayNamesShort : null) || this._defaults.dayNamesShort, aQ = (aO ? aO.dayNames : null) || this._defaults.dayNames, aw = (aO ? aO.monthNamesShort : null) || this._defaults.monthNamesShort, aA = (aO ? aO.monthNames : null) || this._defaults.monthNames, aB = -1, aR = -1, aL = -1, aE = -1, aK = false, aP, aG = function (aT) {
                var aU = (az + 1 < aM.length && aM.charAt(az + 1) === aT);
                if (aU) {
                    az++
                } return aU
            }, aS = function (aV) {
                var aT = aG(aV), aW = (aV === "@" ? 14 : (aV === "!" ? 20 : (aV === "y" && aT ? 4 : (aV === "o" ? 3 : 2)))), aY = (aV === "y" ? aW : 1), aX = new RegExp("^\\d{" + aY + "," + aW + "}"), aU = aH.substring(aN).match(aX);
                if (!aU) {
                    throw "Missing number at position " + aN
                } aN += aU[0].length;
                return parseInt(aU[0], 10)
            }, aD = function (aU, aV, aX) {
                var aT = -1, aW = al.map(aG(aU) ? aX : aV, function (aZ, aY) {
                    return [[aY, aZ]]
                }).sort(function (aZ, aY) {
                    return -(aZ[1].length - aY[1].length)
                });
                al.each(aW, function (aZ, a0) {
                    var aY = a0[1];
                    if (aH.substr(aN, aY.length).toLowerCase() === aY.toLowerCase()) {
                        aT = a0[0];
                        aN += aY.length;
                        return false
                    }
                });
                if (aT !== -1) {
                    return aT + 1
                } else {
                    throw "Unknown name at position " + aN
                }
            }, aI = function () {
                if (aH.charAt(aN) !== aM.charAt(az)) {
                    throw "Unexpected literal at position " + aN
                } aN++
            };
            for (az = 0;
                az < aM.length;
                az++) {
                    if (aK) {
                        if (aM.charAt(az) === "'" && !aG("'")) {
                            aK = false
                        } else {
                            aI()
                        }
                    } else {
                        switch (aM.charAt(az)) {
                            case "d": aL = aS("d");
                                break;
                            case "D": aD("D", aF, aQ);
                                break;
                            case "o": aE = aS("o");
                                break;
                            case "m": aR = aS("m");
                                break;
                            case "M": aR = aD("M", aw, aA);
                                break;
                            case "y": aB = aS("y");
                                break;
                            case "@": aP = new Date(aS("@"));
                                aB = aP.getFullYear();
                                aR = aP.getMonth() + 1;
                                aL = aP.getDate();
                                break;
                            case "!": aP = new Date((aS("!") - this._ticksTo1970) / 10000);
                                aB = aP.getFullYear();
                                aR = aP.getMonth() + 1;
                                aL = aP.getDate();
                                break;
                            case "'": if (aG("'")) {
                                aI()
                            } else {
                                aK = true
                            } break;
                            default: aI()
                        }
                    }
            } if (aN < aH.length) {
                ax = aH.substr(aN);
                if (!/^\s+/.test(ax)) {
                    throw "Extra/unparsed characters found in date: " + ax
                }
            } if (aB === -1) {
                aB = new Date().getFullYear()
            } else {
                if (aB < 100) {
                    aB += new Date().getFullYear() - new Date().getFullYear() % 100 + (aB <= ay ? 0 : -100)
                }
            } if (aE > -1) {
                aR = 1;
                aL = aE;
                do {
                    aJ = this._getDaysInMonth(aB, aR - 1);
                    if (aL <= aJ) {
                        break
                    } aR++;
                    aL -= aJ
                } while (true)
            } aP = this._daylightSavingAdjust(new Date(aB, aR - 1, aL));
            if (aP.getFullYear() !== aB || aP.getMonth() + 1 !== aR || aP.getDate() !== aL) {
                throw "Invalid date"
            } return aP
        }, ATOM: "yy-mm-dd", COOKIE: "D, dd M yy", ISO_8601: "yy-mm-dd", RFC_822: "D, d M y", RFC_850: "DD, dd-M-y", RFC_1036: "D, d M y", RFC_1123: "D, d M yy", RFC_2822: "D, d M yy", RSS: "D, d M y", TICKS: "!", TIMESTAMP: "@", W3C: "yy-mm-dd", _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000), formatDate: function (aF, az, aA) {
            if (!az) {
                return ""
            } var aH, aI = (aA ? aA.dayNamesShort : null) || this._defaults.dayNamesShort, ax = (aA ? aA.dayNames : null) || this._defaults.dayNames, aD = (aA ? aA.monthNamesShort : null) || this._defaults.monthNamesShort, aB = (aA ? aA.monthNames : null) || this._defaults.monthNames, aG = function (aJ) {
                var aK = (aH + 1 < aF.length && aF.charAt(aH + 1) === aJ);
                if (aK) {
                    aH++
                } return aK
            }, aw = function (aL, aM, aJ) {
                var aK = "" + aM;
                if (aG(aL)) {
                    while (aK.length < aJ) {
                        aK = "0" + aK
                    }
                } return aK
            }, aC = function (aJ, aL, aK, aM) {
                return (aG(aJ) ? aM[aL] : aK[aL])
            }, ay = "", aE = false;
            if (az) {
                for (aH = 0;
                    aH < aF.length;
                    aH++) {
                        if (aE) {
                            if (aF.charAt(aH) === "'" && !aG("'")) {
                                aE = false
                            } else {
                                ay += aF.charAt(aH)
                            }
                        } else {
                            switch (aF.charAt(aH)) {
                                case "d": ay += aw("d", az.getDate(), 2);
                                    break;
                                case "D": ay += aC("D", az.getDay(), aI, ax);
                                    break;
                                case "o": ay += aw("o", Math.round((new Date(az.getFullYear(), az.getMonth(), az.getDate()).getTime() - new Date(az.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                                    break;
                                case "m": ay += aw("m", az.getMonth() + 1, 2);
                                    break;
                                case "M": ay += aC("M", az.getMonth(), aD, aB);
                                    break;
                                case "y": ay += (aG("y") ? az.getFullYear() : (az.getFullYear() % 100 < 10 ? "0" : "") + az.getFullYear() % 100);
                                    break;
                                case "@": ay += az.getTime();
                                    break;
                                case "!": ay += az.getTime() * 10000 + this._ticksTo1970;
                                    break;
                                case "'": if (aG("'")) {
                                    ay += "'"
                                } else {
                                    aE = true
                                } break;
                                default: ay += aF.charAt(aH)
                            }
                        }
                }
            } return ay
        }, _possibleChars: function (aA) {
            var az, ay = "", ax = false, aw = function (aB) {
                var aC = (az + 1 < aA.length && aA.charAt(az + 1) === aB);
                if (aC) {
                    az++
                } return aC
            };
            for (az = 0;
                az < aA.length;
                az++) {
                    if (ax) {
                        if (aA.charAt(az) === "'" && !aw("'")) {
                            ax = false
                        } else {
                            ay += aA.charAt(az)
                        }
                    } else {
                        switch (aA.charAt(az)) {
                            case "d": case "m": case "y": case "@": ay += "0123456789";
                                break;
                            case "D": case "M": return null;
                            case "'": if (aw("'")) {
                                ay += "'"
                            } else {
                                ax = true
                            } break;
                            default: ay += aA.charAt(az)
                        }
                    }
            } return ay
        }, _get: function (ax, aw) {
            return ax.settings[aw] !== undefined ? ax.settings[aw] : this._defaults[aw]
        }, _setDateFromField: function (aB, ay) {
            if (aB.input.val() === aB.lastVal) {
                return
            } var aw = this._get(aB, "dateFormat"), aD = aB.lastVal = aB.input ? aB.input.val() : null, aC = this._getDefaultDate(aB), ax = aC, az = this._getFormatConfig(aB);
            try {
                ax = this.parseDate(aw, aD, az) || aC
            } catch (aA) {
                aD = (ay ? "" : aD)
            } aB.selectedDay = ax.getDate();
            aB.drawMonth = aB.selectedMonth = ax.getMonth();
            aB.drawYear = aB.selectedYear = ax.getFullYear();
            aB.currentDay = (aD ? ax.getDate() : 0);
            aB.currentMonth = (aD ? ax.getMonth() : 0);
            aB.currentYear = (aD ? ax.getFullYear() : 0);
            this._adjustInstDate(aB)
        }, _getDefaultDate: function (aw) {
            return this._restrictMinMax(aw, this._determineDate(aw, this._get(aw, "defaultDate"), new Date()))
        }, _determineDate: function (aA, ax, aB) {
            var az = function (aD) {
                var aC = new Date();
                aC.setDate(aC.getDate() + aD);
                return aC
            }, ay = function (aJ) {
                try {
                    return al.datepicker.parseDate(al.datepicker._get(aA, "dateFormat"), aJ, al.datepicker._getFormatConfig(aA))
                } catch (aI) { } var aD = (aJ.toLowerCase().match(/^c/) ? al.datepicker._getDate(aA) : null) || new Date(), aE = aD.getFullYear(), aH = aD.getMonth(), aC = aD.getDate(), aG = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, aF = aG.exec(aJ);
                while (aF) {
                    switch (aF[2] || "d") {
                        case "d": case "D": aC += parseInt(aF[1], 10);
                            break;
                        case "w": case "W": aC += parseInt(aF[1], 10) * 7;
                            break;
                        case "m": case "M": aH += parseInt(aF[1], 10);
                            aC = Math.min(aC, al.datepicker._getDaysInMonth(aE, aH));
                            break;
                        case "y": case "Y": aE += parseInt(aF[1], 10);
                            aC = Math.min(aC, al.datepicker._getDaysInMonth(aE, aH));
                            break
                    }aF = aG.exec(aJ)
                } return new Date(aE, aH, aC)
            }, aw = (ax == null || ax === "" ? aB : (typeof ax === "string" ? ay(ax) : (typeof ax === "number" ? (isNaN(ax) ? aB : az(ax)) : new Date(ax.getTime()))));
            aw = (aw && aw.toString() === "Invalid Date" ? aB : aw);
            if (aw) {
                aw.setHours(0);
                aw.setMinutes(0);
                aw.setSeconds(0);
                aw.setMilliseconds(0)
            } return this._daylightSavingAdjust(aw)
        }, _daylightSavingAdjust: function (aw) {
            if (!aw) {
                return null
            } aw.setHours(aw.getHours() > 12 ? aw.getHours() + 2 : 0);
            return aw
        }, _setDate: function (aC, az, aB) {
            var aw = !az, ay = aC.selectedMonth, aA = aC.selectedYear, ax = this._restrictMinMax(aC, this._determineDate(aC, az, new Date()));
            aC.selectedDay = aC.currentDay = ax.getDate();
            aC.drawMonth = aC.selectedMonth = aC.currentMonth = ax.getMonth();
            aC.drawYear = aC.selectedYear = aC.currentYear = ax.getFullYear();
            if ((ay !== aC.selectedMonth || aA !== aC.selectedYear) && !aB) {
                this._notifyChange(aC)
            } this._adjustInstDate(aC);
            if (aC.input) {
                aC.input.val(aw ? "" : this._formatDate(aC))
            }
        }, _getDate: function (ax) {
            var aw = (!ax.currentYear || (ax.input && ax.input.val() === "") ? null : this._daylightSavingAdjust(new Date(ax.currentYear, ax.currentMonth, ax.currentDay)));
            return aw
        }, _attachHandlers: function (ax) {
            var aw = this._get(ax, "stepMonths"), ay = "#" + ax.id.replace(/\\\\/g, "\\");
            ax.dpDiv.find("[data-handler]").map(function () {
                var az = {
                    prev: function () {
                        al.datepicker._adjustDate(ay, -aw, "M")
                    }, next: function () {
                        al.datepicker._adjustDate(ay, +aw, "M")
                    }, hide: function () {
                        al.datepicker._hideDatepicker()
                    }, today: function () {
                        al.datepicker._gotoToday(ay)
                    }, selectDay: function () {
                        al.datepicker._selectDay(ay, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
                        return false
                    }, selectMonth: function () {
                        al.datepicker._selectMonthYear(ay, this, "M");
                        return false
                    }, selectYear: function () {
                        al.datepicker._selectMonthYear(ay, this, "Y");
                        return false
                    }
                };
                al(this).on(this.getAttribute("data-event"), az[this.getAttribute("data-handler")])
            })
        }, _generateHTML: function (bc) {
            var aP, aO, a7, aZ, aA, bg, ba, a3, bj, aX, bn, aH, aJ, aI, ax, bf, aF, aS, bi, a5, bo, aR, aW, aG, aB, a8, a1, a4, a2, aE, aU, aK, bb, be, az, bh, bl, a0, aL, bd = new Date(), aQ = this._daylightSavingAdjust(new Date(bd.getFullYear(), bd.getMonth(), bd.getDate())), bk = this._get(bc, "isRTL"), bm = this._get(bc, "showButtonPanel"), a6 = this._get(bc, "hideIfNoPrevNext"), aV = this._get(bc, "navigationAsDateFormat"), aM = this._getNumberOfMonths(bc), aD = this._get(bc, "showCurrentAtPos"), aY = this._get(bc, "stepMonths"), aT = (aM[0] !== 1 || aM[1] !== 1), ay = this._daylightSavingAdjust((!bc.currentDay ? new Date(9999, 9, 9) : new Date(bc.currentYear, bc.currentMonth, bc.currentDay))), aC = this._getMinMaxDate(bc, "min"), aN = this._getMinMaxDate(bc, "max"), aw = bc.drawMonth - aD, a9 = bc.drawYear;
            if (aw < 0) {
                aw += 12;
                a9--
            } if (aN) {
                aP = this._daylightSavingAdjust(new Date(aN.getFullYear(), aN.getMonth() - (aM[0] * aM[1]) + 1, aN.getDate()));
                aP = (aC && aP < aC ? aC : aP);
                while (this._daylightSavingAdjust(new Date(a9, aw, 1)) > aP) {
                    aw--;
                    if (aw < 0) {
                        aw = 11;
                        a9--
                    }
                }
            } bc.drawMonth = aw;
            bc.drawYear = a9;
            aO = this._get(bc, "prevText");
            aO = (!aV ? aO : this.formatDate(aO, this._daylightSavingAdjust(new Date(a9, aw - aY, 1)), this._getFormatConfig(bc)));
            a7 = (this._canAdjustMonth(bc, -1, a9, aw) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + aO + "'><span class='ui-icon ui-icon-circle-triangle-" + (bk ? "e" : "w") + "'>" + aO + "</span></a>" : (a6 ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + aO + "'><span class='ui-icon ui-icon-circle-triangle-" + (bk ? "e" : "w") + "'>" + aO + "</span></a>"));
            aZ = this._get(bc, "nextText");
            aZ = (!aV ? aZ : this.formatDate(aZ, this._daylightSavingAdjust(new Date(a9, aw + aY, 1)), this._getFormatConfig(bc)));
            aA = (this._canAdjustMonth(bc, +1, a9, aw) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + aZ + "'><span class='ui-icon ui-icon-circle-triangle-" + (bk ? "w" : "e") + "'>" + aZ + "</span></a>" : (a6 ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + aZ + "'><span class='ui-icon ui-icon-circle-triangle-" + (bk ? "w" : "e") + "'>" + aZ + "</span></a>"));
            bg = this._get(bc, "currentText");
            ba = (this._get(bc, "gotoCurrent") && bc.currentDay ? ay : aQ);
            bg = (!aV ? bg : this.formatDate(bg, ba, this._getFormatConfig(bc)));
            a3 = (!bc.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(bc, "closeText") + "</button>" : "");
            bj = (bm) ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (bk ? a3 : "") + (this._isInRange(bc, ba) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + bg + "</button>" : "") + (bk ? "" : a3) + "</div>" : "";
            aX = parseInt(this._get(bc, "firstDay"), 10);
            aX = (isNaN(aX) ? 0 : aX);
            bn = this._get(bc, "showWeek");
            aH = this._get(bc, "dayNames");
            aJ = this._get(bc, "dayNamesMin");
            aI = this._get(bc, "monthNames");
            ax = this._get(bc, "monthNamesShort");
            bf = this._get(bc, "beforeShowDay");
            aF = this._get(bc, "showOtherMonths");
            aS = this._get(bc, "selectOtherMonths");
            bi = this._getDefaultDate(bc);
            a5 = "";
            for (aR = 0;
                aR < aM[0];
                aR++) {
                    aW = "";
                this.maxRows = 4;
                for (aG = 0;
                    aG < aM[1];
                    aG++) {
                        aB = this._daylightSavingAdjust(new Date(a9, aw, bc.selectedDay));
                    a8 = " ui-corner-all";
                    a1 = "";
                    if (aT) {
                        a1 += "<div class='ui-datepicker-group";
                        if (aM[1] > 1) {
                            switch (aG) {
                                case 0: a1 += " ui-datepicker-group-first";
                                    a8 = " ui-corner-" + (bk ? "right" : "left");
                                    break;
                                case aM[1] - 1: a1 += " ui-datepicker-group-last";
                                    a8 = " ui-corner-" + (bk ? "left" : "right");
                                    break;
                                default: a1 += " ui-datepicker-group-middle";
                                    a8 = "";
                                    break
                            }
                        } a1 += "'>"
                    } a1 += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + a8 + "'>" + (/all|left/.test(a8) && aR === 0 ? (bk ? aA : a7) : "") + (/all|right/.test(a8) && aR === 0 ? (bk ? a7 : aA) : "") + this._generateMonthYearHeader(bc, aw, a9, aC, aN, aR > 0 || aG > 0, aI, ax) + "</div><table class='ui-datepicker-calendar'><thead><tr>";
                    a4 = (bn ? "<th class='ui-datepicker-week-col'>" + this._get(bc, "weekHeader") + "</th>" : "");
                    for (bo = 0;
                        bo < 7;
                        bo++) {
                            a2 = (bo + aX) % 7;
                        a4 += "<th scope='col'" + ((bo + aX + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + "><span title='" + aH[a2] + "'>" + aJ[a2] + "</span></th>"
                    } a1 += a4 + "</tr></thead><tbody>";
                    aE = this._getDaysInMonth(a9, aw);
                    if (a9 === bc.selectedYear && aw === bc.selectedMonth) {
                        bc.selectedDay = Math.min(bc.selectedDay, aE)
                    } aU = (this._getFirstDayOfMonth(a9, aw) - aX + 7) % 7;
                    aK = Math.ceil((aU + aE) / 7);
                    bb = (aT ? this.maxRows > aK ? this.maxRows : aK : aK);
                    this.maxRows = bb;
                    be = this._daylightSavingAdjust(new Date(a9, aw, 1 - aU));
                    for (az = 0;
                        az < bb;
                        az++) {
                            a1 += "<tr>";
                        bh = (!bn ? "" : "<td class='ui-datepicker-week-col'>" + this._get(bc, "calculateWeek")(be) + "</td>");
                        for (bo = 0;
                            bo < 7;
                            bo++) {
                                bl = (bf ? bf.apply((bc.input ? bc.input[0] : null), [be]) : [true, ""]);
                            a0 = (be.getMonth() !== aw);
                            aL = (a0 && !aS) || !bl[0] || (aC && be < aC) || (aN && be > aN);
                            bh += "<td class='" + ((bo + aX + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (a0 ? " ui-datepicker-other-month" : "") + ((be.getTime() === aB.getTime() && aw === bc.selectedMonth && bc._keyEvent) || (bi.getTime() === be.getTime() && bi.getTime() === aB.getTime()) ? " " + this._dayOverClass : "") + (aL ? " " + this._unselectableClass + " ui-state-disabled" : "") + (a0 && !aF ? "" : " " + bl[1] + (be.getTime() === ay.getTime() ? " " + this._currentClass : "") + (be.getTime() === aQ.getTime() ? " ui-datepicker-today" : "")) + "'" + ((!a0 || aF) && bl[2] ? " title='" + bl[2].replace(/'/g, "&#39;") + "'" : "") + (aL ? "" : " data-handler='selectDay' data-event='click' data-month='" + be.getMonth() + "' data-year='" + be.getFullYear() + "'") + ">" + (a0 && !aF ? "&#xa0;" : (aL ? "<span class='ui-state-default'>" + be.getDate() + "</span>" : "<a class='ui-state-default" + (be.getTime() === aQ.getTime() ? " ui-state-highlight" : "") + (be.getTime() === ay.getTime() ? " ui-state-active" : "") + (a0 ? " ui-priority-secondary" : "") + "' href='#'>" + be.getDate() + "</a>")) + "</td>";
                            be.setDate(be.getDate() + 1);
                            be = this._daylightSavingAdjust(be)
                        } a1 += bh + "</tr>"
                    } aw++;
                    if (aw > 11) {
                        aw = 0;
                        a9++
                    } a1 += "</tbody></table>" + (aT ? "</div>" + ((aM[0] > 0 && aG === aM[1] - 1) ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
                    aW += a1
                } a5 += aW
            } a5 += bj;
            bc._keyEvent = false;
            return a5
        }, _generateMonthYearHeader: function (aA, ay, aI, aC, aG, aJ, aE, aw) {
            var aN, ax, aO, aL, aB, aK, aH, aD, az = this._get(aA, "changeMonth"), aP = this._get(aA, "changeYear"), aQ = this._get(aA, "showMonthAfterYear"), aF = "<div class='ui-datepicker-title'>", aM = "";
            if (aJ || !az) {
                aM += "<span class='ui-datepicker-month'>" + aE[ay] + "</span>"
            } else {
                aN = (aC && aC.getFullYear() === aI);
                ax = (aG && aG.getFullYear() === aI);
                aM += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
                for (aO = 0;
                    aO < 12;
                    aO++) {
                        if ((!aN || aO >= aC.getMonth()) && (!ax || aO <= aG.getMonth())) {
                            aM += "<option value='" + aO + "'" + (aO === ay ? " selected='selected'" : "") + ">" + aw[aO] + "</option>"
                        }
                } aM += "</select>"
            } if (!aQ) {
                aF += aM + (aJ || !(az && aP) ? "&#xa0;" : "")
            } if (!aA.yearshtml) {
                aA.yearshtml = "";
                if (aJ || !aP) {
                    aF += "<span class='ui-datepicker-year'>" + aI + "</span>"
                } else {
                    aL = this._get(aA, "yearRange").split(":");
                    aB = new Date().getFullYear();
                    aK = function (aS) {
                        var aR = (aS.match(/c[+\-].*/) ? aI + parseInt(aS.substring(1), 10) : (aS.match(/[+\-].*/) ? aB + parseInt(aS, 10) : parseInt(aS, 10)));
                        return (isNaN(aR) ? aB : aR)
                    };
                    aH = aK(aL[0]);
                    aD = Math.max(aH, aK(aL[1] || ""));
                    aH = (aC ? Math.max(aH, aC.getFullYear()) : aH);
                    aD = (aG ? Math.min(aD, aG.getFullYear()) : aD);
                    aA.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
                    for (;
                        aH <= aD;
                        aH++) {
                            aA.yearshtml += "<option value='" + aH + "'" + (aH === aI ? " selected='selected'" : "") + ">" + aH + "</option>"
                    } aA.yearshtml += "</select>";
                    aF += aA.yearshtml;
                    aA.yearshtml = null
                }
            } aF += this._get(aA, "yearSuffix");
            if (aQ) {
                aF += (aJ || !(az && aP) ? "&#xa0;" : "") + aM
            } aF += "</div>";
            return aF
        }, _adjustInstDate: function (az, aC, aB) {
            var ay = az.selectedYear + (aB === "Y" ? aC : 0), aA = az.selectedMonth + (aB === "M" ? aC : 0), aw = Math.min(az.selectedDay, this._getDaysInMonth(ay, aA)) + (aB === "D" ? aC : 0), ax = this._restrictMinMax(az, this._daylightSavingAdjust(new Date(ay, aA, aw)));
            az.selectedDay = ax.getDate();
            az.drawMonth = az.selectedMonth = ax.getMonth();
            az.drawYear = az.selectedYear = ax.getFullYear();
            if (aB === "M" || aB === "Y") {
                this._notifyChange(az)
            }
        }, _restrictMinMax: function (az, ax) {
            var ay = this._getMinMaxDate(az, "min"), aA = this._getMinMaxDate(az, "max"), aw = (ay && ax < ay ? ay : ax);
            return (aA && aw > aA ? aA : aw)
        }, _notifyChange: function (ax) {
            var aw = this._get(ax, "onChangeMonthYear");
            if (aw) {
                aw.apply((ax.input ? ax.input[0] : null), [ax.selectedYear, ax.selectedMonth + 1, ax])
            }
        }, _getNumberOfMonths: function (ax) {
            var aw = this._get(ax, "numberOfMonths");
            return (aw == null ? [1, 1] : (typeof aw === "number" ? [1, aw] : aw))
        }, _getMinMaxDate: function (ax, aw) {
            return this._determineDate(ax, this._get(ax, aw + "Date"), null)
        }, _getDaysInMonth: function (aw, ax) {
            return 32 - this._daylightSavingAdjust(new Date(aw, ax, 32)).getDate()
        }, _getFirstDayOfMonth: function (aw, ax) {
            return new Date(aw, ax, 1).getDay()
        }, _canAdjustMonth: function (az, aB, ay, aA) {
            var aw = this._getNumberOfMonths(az), ax = this._daylightSavingAdjust(new Date(ay, aA + (aB < 0 ? aB : aw[0] * aw[1]), 1));
            if (aB < 0) {
                ax.setDate(this._getDaysInMonth(ax.getFullYear(), ax.getMonth()))
            } return this._isInRange(az, ax)
        }, _isInRange: function (aA, ay) {
            var ax, aD, az = this._getMinMaxDate(aA, "min"), aw = this._getMinMaxDate(aA, "max"), aE = null, aB = null, aC = this._get(aA, "yearRange");
            if (aC) {
                ax = aC.split(":");
                aD = new Date().getFullYear();
                aE = parseInt(ax[0], 10);
                aB = parseInt(ax[1], 10);
                if (ax[0].match(/[+\-].*/)) {
                    aE += aD
                } if (ax[1].match(/[+\-].*/)) {
                    aB += aD
                }
            } return ((!az || ay.getTime() >= az.getTime()) && (!aw || ay.getTime() <= aw.getTime()) && (!aE || ay.getFullYear() >= aE) && (!aB || ay.getFullYear() <= aB))
        }, _getFormatConfig: function (aw) {
            var ax = this._get(aw, "shortYearCutoff");
            ax = (typeof ax !== "string" ? ax : new Date().getFullYear() % 100 + parseInt(ax, 10));
            return { shortYearCutoff: ax, dayNamesShort: this._get(aw, "dayNamesShort"), dayNames: this._get(aw, "dayNames"), monthNamesShort: this._get(aw, "monthNamesShort"), monthNames: this._get(aw, "monthNames") }
        }, _formatDate: function (az, aw, aA, ay) {
            if (!aw) {
                az.currentDay = az.selectedDay;
                az.currentMonth = az.selectedMonth;
                az.currentYear = az.selectedYear
            } var ax = (aw ? (typeof aw === "object" ? aw : this._daylightSavingAdjust(new Date(ay, aA, aw))) : this._daylightSavingAdjust(new Date(az.currentYear, az.currentMonth, az.currentDay)));
            return this.formatDate(this._get(az, "dateFormat"), ax, this._getFormatConfig(az))
        }
    });
    function Y(ax) {
        var aw = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return ax.on("mouseout", aw, function () {
            al(this).removeClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                al(this).removeClass("ui-datepicker-prev-hover")
            } if (this.className.indexOf("ui-datepicker-next") !== -1) {
                al(this).removeClass("ui-datepicker-next-hover")
            }
        }).on("mouseover", aw, L)
    } function L() {
        if (!al.datepicker._isDisabledDatepicker(ar.inline ? ar.dpDiv.parent()[0] : ar.input[0])) {
            al(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
            al(this).addClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                al(this).addClass("ui-datepicker-prev-hover")
            } if (this.className.indexOf("ui-datepicker-next") !== -1) {
                al(this).addClass("ui-datepicker-next-hover")
            }
        }
    } function G(ay, ax) {
        al.extend(ay, ax);
        for (var aw in ax) {
            if (ax[aw] == null) {
                ay[aw] = ax[aw]
            }
        } return ay
    } al.fn.datepicker = function (ax) {
        if (!this.length) {
            return this
        } if (!al.datepicker.initialized) {
            al(document).on("mousedown", al.datepicker._checkExternalClick);
            al.datepicker.initialized = true
        } if (al("#" + al.datepicker._mainDivId).length === 0) {
            al("body").append(al.datepicker.dpDiv)
        } var aw = Array.prototype.slice.call(arguments, 1);
        if (typeof ax === "string" && (ax === "isDisabled" || ax === "getDate" || ax === "widget")) {
            return al.datepicker["_" + ax + "Datepicker"].apply(al.datepicker, [this[0]].concat(aw))
        } if (ax === "option" && arguments.length === 2 && typeof arguments[1] === "string") {
            return al.datepicker["_" + ax + "Datepicker"].apply(al.datepicker, [this[0]].concat(aw))
        } return this.each(function () {
            typeof ax === "string" ? al.datepicker["_" + ax + "Datepicker"].apply(al.datepicker, [this].concat(aw)) : al.datepicker._attachDatepicker(this, ax)
        })
    };
    al.datepicker = new Q();
    al.datepicker.initialized = false;
    al.datepicker.uuid = new Date().getTime();
    al.datepicker.version = "1.12.1";
    var l = al.datepicker;
    var M = al.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
    /*!
     * jQuery UI Mouse 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var ac = false;
    al(document).on("mouseup", function () {
        ac = false
    });
    var a = al.widget("ui.mouse", {
        version: "1.12.1", options: { cancel: "input, textarea, button, select, option", distance: 1, delay: 0 }, _mouseInit: function () {
            var aw = this;
            this.element.on("mousedown." + this.widgetName, function (ax) {
                return aw._mouseDown(ax)
            }).on("click." + this.widgetName, function (ax) {
                if (true === al.data(ax.target, aw.widgetName + ".preventClickEvent")) {
                    al.removeData(ax.target, aw.widgetName + ".preventClickEvent");
                    ax.stopImmediatePropagation();
                    return false
                }
            });
            this.started = false
        }, _mouseDestroy: function () {
            this.element.off("." + this.widgetName);
            if (this._mouseMoveDelegate) {
                this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate)
            }
        }, _mouseDown: function (ay) {
            if (ac) {
                return
            } this._mouseMoved = false;
            (this._mouseStarted && this._mouseUp(ay));
            this._mouseDownEvent = ay;
            var ax = this, az = (ay.which === 1), aw = (typeof this.options.cancel === "string" && ay.target.nodeName ? al(ay.target).closest(this.options.cancel).length : false);
            if (!az || aw || !this._mouseCapture(ay)) {
                return true
            } this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function () {
                    ax.mouseDelayMet = true
                }, this.options.delay)
            } if (this._mouseDistanceMet(ay) && this._mouseDelayMet(ay)) {
                this._mouseStarted = (this._mouseStart(ay) !== false);
                if (!this._mouseStarted) {
                    ay.preventDefault();
                    return true
                }
            } if (true === al.data(ay.target, this.widgetName + ".preventClickEvent")) {
                al.removeData(ay.target, this.widgetName + ".preventClickEvent")
            } this._mouseMoveDelegate = function (aA) {
                return ax._mouseMove(aA)
            };
            this._mouseUpDelegate = function (aA) {
                return ax._mouseUp(aA)
            };
            this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate);
            ay.preventDefault();
            ac = true;
            return true
        }, _mouseMove: function (aw) {
            if (this._mouseMoved) {
                if (al.ui.ie && (!document.documentMode || document.documentMode < 9) && !aw.button) {
                    return this._mouseUp(aw)
                } else {
                    if (!aw.which) {
                        if (aw.originalEvent.altKey || aw.originalEvent.ctrlKey || aw.originalEvent.metaKey || aw.originalEvent.shiftKey) {
                            this.ignoreMissingWhich = true
                        } else {
                            if (!this.ignoreMissingWhich) {
                                return this._mouseUp(aw)
                            }
                        }
                    }
                }
            } if (aw.which || aw.button) {
                this._mouseMoved = true
            } if (this._mouseStarted) {
                this._mouseDrag(aw);
                return aw.preventDefault()
            } if (this._mouseDistanceMet(aw) && this._mouseDelayMet(aw)) {
                this._mouseStarted = (this._mouseStart(this._mouseDownEvent, aw) !== false);
                (this._mouseStarted ? this._mouseDrag(aw) : this._mouseUp(aw))
            } return !this._mouseStarted
        }, _mouseUp: function (aw) {
            this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                if (aw.target === this._mouseDownEvent.target) {
                    al.data(aw.target, this.widgetName + ".preventClickEvent", true)
                } this._mouseStop(aw)
            } if (this._mouseDelayTimer) {
                clearTimeout(this._mouseDelayTimer);
                delete this._mouseDelayTimer
            } this.ignoreMissingWhich = false;
            ac = false;
            aw.preventDefault()
        }, _mouseDistanceMet: function (aw) {
            return (Math.max(Math.abs(this._mouseDownEvent.pageX - aw.pageX), Math.abs(this._mouseDownEvent.pageY - aw.pageY)) >= this.options.distance)
        }, _mouseDelayMet: function () {
            return this.mouseDelayMet
        }, _mouseStart: function () { }, _mouseDrag: function () { }, _mouseStop: function () { }, _mouseCapture: function () {
            return true
        }
    });
    var H = al.ui.plugin = {
        add: function (ax, ay, aA) {
            var aw, az = al.ui[ax].prototype;
            for (aw in aA) {
                az.plugins[aw] = az.plugins[aw] || [];
                az.plugins[aw].push([ay, aA[aw]])
            }
        }, call: function (aw, az, ay, ax) {
            var aA, aB = aw.plugins[az];
            if (!aB) {
                return
            } if (!ax && (!aw.element[0].parentNode || aw.element[0].parentNode.nodeType === 11)) {
                return
            } for (aA = 0;
                aA < aB.length;
                aA++) {
                    if (aw.options[aB[aA][0]]) {
                        aB[aA][1].apply(aw.element, ay)
                    }
            }
        }
    };
    var c = al.ui.safeBlur = function (aw) {
        if (aw && aw.nodeName.toLowerCase() !== "body") {
            al(aw).trigger("blur")
        }
    };
    /*!
     * jQuery UI Draggable 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.draggable", al.ui.mouse, {
        version: "1.12.1", widgetEventPrefix: "drag", options: { addClasses: true, appendTo: "parent", axis: false, connectToSortable: false, containment: false, cursor: "auto", cursorAt: false, grid: false, handle: false, helper: "original", iframeFix: false, opacity: false, refreshPositions: false, revert: false, revertDuration: 500, scope: "default", scroll: true, scrollSensitivity: 20, scrollSpeed: 20, snap: false, snapMode: "both", snapTolerance: 20, stack: false, zIndex: false, drag: null, start: null, stop: null }, _create: function () {
            if (this.options.helper === "original") {
                this._setPositionRelative()
            } if (this.options.addClasses) {
                this._addClass("ui-draggable")
            } this._setHandleClassName();
            this._mouseInit()
        }, _setOption: function (aw, ax) {
            this._super(aw, ax);
            if (aw === "handle") {
                this._removeHandleClassName();
                this._setHandleClassName()
            }
        }, _destroy: function () {
            if ((this.helper || this.element).is(".ui-draggable-dragging")) {
                this.destroyOnClear = true;
                return
            } this._removeHandleClassName();
            this._mouseDestroy()
        }, _mouseCapture: function (aw) {
            var ax = this.options;
            if (this.helper || ax.disabled || al(aw.target).closest(".ui-resizable-handle").length > 0) {
                return false
            } this.handle = this._getHandle(aw);
            if (!this.handle) {
                return false
            } this._blurActiveElement(aw);
            this._blockFrames(ax.iframeFix === true ? "iframe" : ax.iframeFix);
            return true
        }, _blockFrames: function (aw) {
            this.iframeBlocks = this.document.find(aw).map(function () {
                var ax = al(this);
                return al("<div>").css("position", "absolute").appendTo(ax.parent()).outerWidth(ax.outerWidth()).outerHeight(ax.outerHeight()).offset(ax.offset())[0]
            })
        }, _unblockFrames: function () {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks
            }
        }, _blurActiveElement: function (ax) {
            var aw = al.ui.safeActiveElement(this.document[0]), ay = al(ax.target);
            if (ay.closest(aw).length) {
                return
            } al.ui.safeBlur(aw)
        }, _mouseStart: function (aw) {
            var ax = this.options;
            this.helper = this._createHelper(aw);
            this._addClass(this.helper, "ui-draggable-dragging");
            this._cacheHelperProportions();
            if (al.ui.ddmanager) {
                al.ui.ddmanager.current = this
            } this._cacheMargins();
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent(true);
            this.offsetParent = this.helper.offsetParent();
            this.hasFixedAncestor = this.helper.parents().filter(function () {
                return al(this).css("position") === "fixed"
            }).length > 0;
            this.positionAbs = this.element.offset();
            this._refreshOffsets(aw);
            this.originalPosition = this.position = this._generatePosition(aw, false);
            this.originalPageX = aw.pageX;
            this.originalPageY = aw.pageY;
            (ax.cursorAt && this._adjustOffsetFromHelper(ax.cursorAt));
            this._setContainment();
            if (this._trigger("start", aw) === false) {
                this._clear();
                return false
            } this._cacheHelperProportions();
            if (al.ui.ddmanager && !ax.dropBehaviour) {
                al.ui.ddmanager.prepareOffsets(this, aw)
            } this._mouseDrag(aw, true);
            if (al.ui.ddmanager) {
                al.ui.ddmanager.dragStart(this, aw)
            } return true
        }, _refreshOffsets: function (aw) {
            this.offset = { top: this.positionAbs.top - this.margins.top, left: this.positionAbs.left - this.margins.left, scroll: false, parent: this._getParentOffset(), relative: this._getRelativeOffset() };
            this.offset.click = { left: aw.pageX - this.offset.left, top: aw.pageY - this.offset.top }
        }, _mouseDrag: function (aw, ay) {
            if (this.hasFixedAncestor) {
                this.offset.parent = this._getParentOffset()
            } this.position = this._generatePosition(aw, true);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!ay) {
                var ax = this._uiHash();
                if (this._trigger("drag", aw, ax) === false) {
                    this._mouseUp(new al.Event("mouseup", aw));
                    return false
                } this.position = ax.position
            } this.helper[0].style.left = this.position.left + "px";
            this.helper[0].style.top = this.position.top + "px";
            if (al.ui.ddmanager) {
                al.ui.ddmanager.drag(this, aw)
            } return false
        }, _mouseStop: function (ax) {
            var aw = this, ay = false;
            if (al.ui.ddmanager && !this.options.dropBehaviour) {
                ay = al.ui.ddmanager.drop(this, ax)
            } if (this.dropped) {
                ay = this.dropped;
                this.dropped = false
            } if ((this.options.revert === "invalid" && !ay) || (this.options.revert === "valid" && ay) || this.options.revert === true || (al.isFunction(this.options.revert) && this.options.revert.call(this.element, ay))) {
                al(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
                    if (aw._trigger("stop", ax) !== false) {
                        aw._clear()
                    }
                })
            } else {
                if (this._trigger("stop", ax) !== false) {
                    this._clear()
                }
            } return false
        }, _mouseUp: function (aw) {
            this._unblockFrames();
            if (al.ui.ddmanager) {
                al.ui.ddmanager.dragStop(this, aw)
            } if (this.handleElement.is(aw.target)) {
                this.element.trigger("focus")
            } return al.ui.mouse.prototype._mouseUp.call(this, aw)
        }, cancel: function () {
            if (this.helper.is(".ui-draggable-dragging")) {
                this._mouseUp(new al.Event("mouseup", { target: this.element[0] }))
            } else {
                this._clear()
            } return this
        }, _getHandle: function (aw) {
            return this.options.handle ? !!al(aw.target).closest(this.element.find(this.options.handle)).length : true
        }, _setHandleClassName: function () {
            this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element;
            this._addClass(this.handleElement, "ui-draggable-handle")
        }, _removeHandleClassName: function () {
            this._removeClass(this.handleElement, "ui-draggable-handle")
        }, _createHelper: function (ax) {
            var az = this.options, ay = al.isFunction(az.helper), aw = ay ? al(az.helper.apply(this.element[0], [ax])) : (az.helper === "clone" ? this.element.clone().removeAttr("id") : this.element);
            if (!aw.parents("body").length) {
                aw.appendTo((az.appendTo === "parent" ? this.element[0].parentNode : az.appendTo))
            } if (ay && aw[0] === this.element[0]) {
                this._setPositionRelative()
            } if (aw[0] !== this.element[0] && !(/(fixed|absolute)/).test(aw.css("position"))) {
                aw.css("position", "absolute")
            } return aw
        }, _setPositionRelative: function () {
            if (!(/^(?:r|a|f)/).test(this.element.css("position"))) {
                this.element[0].style.position = "relative"
            }
        }, _adjustOffsetFromHelper: function (aw) {
            if (typeof aw === "string") {
                aw = aw.split(" ")
            } if (al.isArray(aw)) {
                aw = { left: +aw[0], top: +aw[1] || 0 }
            } if ("left" in aw) {
                this.offset.click.left = aw.left + this.margins.left
            } if ("right" in aw) {
                this.offset.click.left = this.helperProportions.width - aw.right + this.margins.left
            } if ("top" in aw) {
                this.offset.click.top = aw.top + this.margins.top
            } if ("bottom" in aw) {
                this.offset.click.top = this.helperProportions.height - aw.bottom + this.margins.top
            }
        }, _isRootNode: function (aw) {
            return (/(html|body)/i).test(aw.tagName) || aw === this.document[0]
        }, _getParentOffset: function () {
            var ax = this.offsetParent.offset(), aw = this.document[0];
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== aw && al.contains(this.scrollParent[0], this.offsetParent[0])) {
                ax.left += this.scrollParent.scrollLeft();
                ax.top += this.scrollParent.scrollTop()
            } if (this._isRootNode(this.offsetParent[0])) {
                ax = { top: 0, left: 0 }
            } return { top: ax.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: ax.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) }
        }, _getRelativeOffset: function () {
            if (this.cssPosition !== "relative") {
                return { top: 0, left: 0 }
            } var aw = this.element.position(), ax = this._isRootNode(this.scrollParent[0]);
            return { top: aw.top - (parseInt(this.helper.css("top"), 10) || 0) + (!ax ? this.scrollParent.scrollTop() : 0), left: aw.left - (parseInt(this.helper.css("left"), 10) || 0) + (!ax ? this.scrollParent.scrollLeft() : 0) }
        }, _cacheMargins: function () {
            this.margins = { left: (parseInt(this.element.css("marginLeft"), 10) || 0), top: (parseInt(this.element.css("marginTop"), 10) || 0), right: (parseInt(this.element.css("marginRight"), 10) || 0), bottom: (parseInt(this.element.css("marginBottom"), 10) || 0) }
        }, _cacheHelperProportions: function () {
            this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() }
        }, _setContainment: function () {
            var ax, aA, ay, az = this.options, aw = this.document[0];
            this.relativeContainer = null;
            if (!az.containment) {
                this.containment = null;
                return
            } if (az.containment === "window") {
                this.containment = [al(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, al(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, al(window).scrollLeft() + al(window).width() - this.helperProportions.width - this.margins.left, al(window).scrollTop() + (al(window).height() || aw.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
                return
            } if (az.containment === "document") {
                this.containment = [0, 0, al(aw).width() - this.helperProportions.width - this.margins.left, (al(aw).height() || aw.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
                return
            } if (az.containment.constructor === Array) {
                this.containment = az.containment;
                return
            } if (az.containment === "parent") {
                az.containment = this.helper[0].parentNode
            } aA = al(az.containment);
            ay = aA[0];
            if (!ay) {
                return
            } ax = /(scroll|auto)/.test(aA.css("overflow"));
            this.containment = [(parseInt(aA.css("borderLeftWidth"), 10) || 0) + (parseInt(aA.css("paddingLeft"), 10) || 0), (parseInt(aA.css("borderTopWidth"), 10) || 0) + (parseInt(aA.css("paddingTop"), 10) || 0), (ax ? Math.max(ay.scrollWidth, ay.offsetWidth) : ay.offsetWidth) - (parseInt(aA.css("borderRightWidth"), 10) || 0) - (parseInt(aA.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (ax ? Math.max(ay.scrollHeight, ay.offsetHeight) : ay.offsetHeight) - (parseInt(aA.css("borderBottomWidth"), 10) || 0) - (parseInt(aA.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
            this.relativeContainer = aA
        }, _convertPositionTo: function (ax, az) {
            if (!az) {
                az = this.position
            } var aw = ax === "absolute" ? 1 : -1, ay = this._isRootNode(this.scrollParent[0]);
            return { top: (az.top + this.offset.relative.top * aw + this.offset.parent.top * aw - ((this.cssPosition === "fixed" ? -this.offset.scroll.top : (ay ? 0 : this.offset.scroll.top)) * aw)), left: (az.left + this.offset.relative.left * aw + this.offset.parent.left * aw - ((this.cssPosition === "fixed" ? -this.offset.scroll.left : (ay ? 0 : this.offset.scroll.left)) * aw)) }
        }, _generatePosition: function (ax, aD) {
            var aw, aE, aF, az, ay = this.options, aC = this._isRootNode(this.scrollParent[0]), aB = ax.pageX, aA = ax.pageY;
            if (!aC || !this.offset.scroll) {
                this.offset.scroll = { top: this.scrollParent.scrollTop(), left: this.scrollParent.scrollLeft() }
            } if (aD) {
                if (this.containment) {
                    if (this.relativeContainer) {
                        aE = this.relativeContainer.offset();
                        aw = [this.containment[0] + aE.left, this.containment[1] + aE.top, this.containment[2] + aE.left, this.containment[3] + aE.top]
                    } else {
                        aw = this.containment
                    } if (ax.pageX - this.offset.click.left < aw[0]) {
                        aB = aw[0] + this.offset.click.left
                    } if (ax.pageY - this.offset.click.top < aw[1]) {
                        aA = aw[1] + this.offset.click.top
                    } if (ax.pageX - this.offset.click.left > aw[2]) {
                        aB = aw[2] + this.offset.click.left
                    } if (ax.pageY - this.offset.click.top > aw[3]) {
                        aA = aw[3] + this.offset.click.top
                    }
                } if (ay.grid) {
                    aF = ay.grid[1] ? this.originalPageY + Math.round((aA - this.originalPageY) / ay.grid[1]) * ay.grid[1] : this.originalPageY;
                    aA = aw ? ((aF - this.offset.click.top >= aw[1] || aF - this.offset.click.top > aw[3]) ? aF : ((aF - this.offset.click.top >= aw[1]) ? aF - ay.grid[1] : aF + ay.grid[1])) : aF;
                    az = ay.grid[0] ? this.originalPageX + Math.round((aB - this.originalPageX) / ay.grid[0]) * ay.grid[0] : this.originalPageX;
                    aB = aw ? ((az - this.offset.click.left >= aw[0] || az - this.offset.click.left > aw[2]) ? az : ((az - this.offset.click.left >= aw[0]) ? az - ay.grid[0] : az + ay.grid[0])) : az
                } if (ay.axis === "y") {
                    aB = this.originalPageX
                } if (ay.axis === "x") {
                    aA = this.originalPageY
                }
            } return { top: (aA - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (this.cssPosition === "fixed" ? -this.offset.scroll.top : (aC ? 0 : this.offset.scroll.top))), left: (aB - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (this.cssPosition === "fixed" ? -this.offset.scroll.left : (aC ? 0 : this.offset.scroll.left))) }
        }, _clear: function () {
            this._removeClass(this.helper, "ui-draggable-dragging");
            if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
                this.helper.remove()
            } this.helper = null;
            this.cancelHelperRemoval = false;
            if (this.destroyOnClear) {
                this.destroy()
            }
        }, _trigger: function (aw, ax, ay) {
            ay = ay || this._uiHash();
            al.ui.plugin.call(this, aw, [ax, ay, this], true);
            if (/^(drag|start|stop)/.test(aw)) {
                this.positionAbs = this._convertPositionTo("absolute");
                ay.offset = this.positionAbs
            } return al.Widget.prototype._trigger.call(this, aw, ax, ay)
        }, plugins: {}, _uiHash: function () {
            return { helper: this.helper, position: this.position, originalPosition: this.originalPosition, offset: this.positionAbs }
        }
    });
    al.ui.plugin.add("draggable", "connectToSortable", {
        start: function (ay, az, aw) {
            var ax = al.extend({}, az, { item: aw.element });
            aw.sortables = [];
            al(aw.options.connectToSortable).each(function () {
                var aA = al(this).sortable("instance");
                if (aA && !aA.options.disabled) {
                    aw.sortables.push(aA);
                    aA.refreshPositions();
                    aA._trigger("activate", ay, ax)
                }
            })
        }, stop: function (ay, az, aw) {
            var ax = al.extend({}, az, { item: aw.element });
            aw.cancelHelperRemoval = false;
            al.each(aw.sortables, function () {
                var aA = this;
                if (aA.isOver) {
                    aA.isOver = 0;
                    aw.cancelHelperRemoval = true;
                    aA.cancelHelperRemoval = false;
                    aA._storedCSS = { position: aA.placeholder.css("position"), top: aA.placeholder.css("top"), left: aA.placeholder.css("left") };
                    aA._mouseStop(ay);
                    aA.options.helper = aA.options._helper
                } else {
                    aA.cancelHelperRemoval = true;
                    aA._trigger("deactivate", ay, ax)
                }
            })
        }, drag: function (ax, ay, aw) {
            al.each(aw.sortables, function () {
                var az = false, aA = this;
                aA.positionAbs = aw.positionAbs;
                aA.helperProportions = aw.helperProportions;
                aA.offset.click = aw.offset.click;
                if (aA._intersectsWith(aA.containerCache)) {
                    az = true;
                    al.each(aw.sortables, function () {
                        this.positionAbs = aw.positionAbs;
                        this.helperProportions = aw.helperProportions;
                        this.offset.click = aw.offset.click;
                        if (this !== aA && this._intersectsWith(this.containerCache) && al.contains(aA.element[0], this.element[0])) {
                            az = false
                        } return az
                    })
                } if (az) {
                    if (!aA.isOver) {
                        aA.isOver = 1;
                        aw._parent = ay.helper.parent();
                        aA.currentItem = ay.helper.appendTo(aA.element).data("ui-sortable-item", true);
                        aA.options._helper = aA.options.helper;
                        aA.options.helper = function () {
                            return ay.helper[0]
                        };
                        ax.target = aA.currentItem[0];
                        aA._mouseCapture(ax, true);
                        aA._mouseStart(ax, true, true);
                        aA.offset.click.top = aw.offset.click.top;
                        aA.offset.click.left = aw.offset.click.left;
                        aA.offset.parent.left -= aw.offset.parent.left - aA.offset.parent.left;
                        aA.offset.parent.top -= aw.offset.parent.top - aA.offset.parent.top;
                        aw._trigger("toSortable", ax);
                        aw.dropped = aA.element;
                        al.each(aw.sortables, function () {
                            this.refreshPositions()
                        });
                        aw.currentItem = aw.element;
                        aA.fromOutside = aw
                    } if (aA.currentItem) {
                        aA._mouseDrag(ax);
                        ay.position = aA.position
                    }
                } else {
                    if (aA.isOver) {
                        aA.isOver = 0;
                        aA.cancelHelperRemoval = true;
                        aA.options._revert = aA.options.revert;
                        aA.options.revert = false;
                        aA._trigger("out", ax, aA._uiHash(aA));
                        aA._mouseStop(ax, true);
                        aA.options.revert = aA.options._revert;
                        aA.options.helper = aA.options._helper;
                        if (aA.placeholder) {
                            aA.placeholder.remove()
                        } ay.helper.appendTo(aw._parent);
                        aw._refreshOffsets(ax);
                        ay.position = aw._generatePosition(ax, true);
                        aw._trigger("fromSortable", ax);
                        aw.dropped = false;
                        al.each(aw.sortables, function () {
                            this.refreshPositions()
                        })
                    }
                }
            })
        }
    });
    al.ui.plugin.add("draggable", "cursor", {
        start: function (ay, az, aw) {
            var ax = al("body"), aA = aw.options;
            if (ax.css("cursor")) {
                aA._cursor = ax.css("cursor")
            } ax.css("cursor", aA.cursor)
        }, stop: function (ax, ay, aw) {
            var az = aw.options;
            if (az._cursor) {
                al("body").css("cursor", az._cursor)
            }
        }
    });
    al.ui.plugin.add("draggable", "opacity", {
        start: function (ay, az, aw) {
            var ax = al(az.helper), aA = aw.options;
            if (ax.css("opacity")) {
                aA._opacity = ax.css("opacity")
            } ax.css("opacity", aA.opacity)
        }, stop: function (ax, ay, aw) {
            var az = aw.options;
            if (az._opacity) {
                al(ay.helper).css("opacity", az._opacity)
            }
        }
    });
    al.ui.plugin.add("draggable", "scroll", {
        start: function (ax, ay, aw) {
            if (!aw.scrollParentNotHidden) {
                aw.scrollParentNotHidden = aw.helper.scrollParent(false)
            } if (aw.scrollParentNotHidden[0] !== aw.document[0] && aw.scrollParentNotHidden[0].tagName !== "HTML") {
                aw.overflowOffset = aw.scrollParentNotHidden.offset()
            }
        }, drag: function (az, aA, ay) {
            var aB = ay.options, ax = false, aC = ay.scrollParentNotHidden[0], aw = ay.document[0];
            if (aC !== aw && aC.tagName !== "HTML") {
                if (!aB.axis || aB.axis !== "x") {
                    if ((ay.overflowOffset.top + aC.offsetHeight) - az.pageY < aB.scrollSensitivity) {
                        aC.scrollTop = ax = aC.scrollTop + aB.scrollSpeed
                    } else {
                        if (az.pageY - ay.overflowOffset.top < aB.scrollSensitivity) {
                            aC.scrollTop = ax = aC.scrollTop - aB.scrollSpeed
                        }
                    }
                } if (!aB.axis || aB.axis !== "y") {
                    if ((ay.overflowOffset.left + aC.offsetWidth) - az.pageX < aB.scrollSensitivity) {
                        aC.scrollLeft = ax = aC.scrollLeft + aB.scrollSpeed
                    } else {
                        if (az.pageX - ay.overflowOffset.left < aB.scrollSensitivity) {
                            aC.scrollLeft = ax = aC.scrollLeft - aB.scrollSpeed
                        }
                    }
                }
            } else {
                if (!aB.axis || aB.axis !== "x") {
                    if (az.pageY - al(aw).scrollTop() < aB.scrollSensitivity) {
                        ax = al(aw).scrollTop(al(aw).scrollTop() - aB.scrollSpeed)
                    } else {
                        if (al(window).height() - (az.pageY - al(aw).scrollTop()) < aB.scrollSensitivity) {
                            ax = al(aw).scrollTop(al(aw).scrollTop() + aB.scrollSpeed)
                        }
                    }
                } if (!aB.axis || aB.axis !== "y") {
                    if (az.pageX - al(aw).scrollLeft() < aB.scrollSensitivity) {
                        ax = al(aw).scrollLeft(al(aw).scrollLeft() - aB.scrollSpeed)
                    } else {
                        if (al(window).width() - (az.pageX - al(aw).scrollLeft()) < aB.scrollSensitivity) {
                            ax = al(aw).scrollLeft(al(aw).scrollLeft() + aB.scrollSpeed)
                        }
                    }
                }
            } if (ax !== false && al.ui.ddmanager && !aB.dropBehaviour) {
                al.ui.ddmanager.prepareOffsets(ay, az)
            }
        }
    });
    al.ui.plugin.add("draggable", "snap", {
        start: function (ax, ay, aw) {
            var az = aw.options;
            aw.snapElements = [];
            al(az.snap.constructor !== String ? (az.snap.items || ":data(ui-draggable)") : az.snap).each(function () {
                var aB = al(this), aA = aB.offset();
                if (this !== aw.element[0]) {
                    aw.snapElements.push({ item: this, width: aB.outerWidth(), height: aB.outerHeight(), top: aA.top, left: aA.left })
                }
            })
        }, drag: function (aI, aF, az) {
            var aw, aN, aB, aC, aH, aE, aD, aO, aJ, aA, aG = az.options, aM = aG.snapTolerance, aL = aF.offset.left, aK = aL + az.helperProportions.width, ay = aF.offset.top, ax = ay + az.helperProportions.height;
            for (aJ = az.snapElements.length - 1;
                aJ >= 0;
                aJ--) {
                    aH = az.snapElements[aJ].left - az.margins.left;
                aE = aH + az.snapElements[aJ].width;
                aD = az.snapElements[aJ].top - az.margins.top;
                aO = aD + az.snapElements[aJ].height;
                if (aK < aH - aM || aL > aE + aM || ax < aD - aM || ay > aO + aM || !al.contains(az.snapElements[aJ].item.ownerDocument, az.snapElements[aJ].item)) {
                    if (az.snapElements[aJ].snapping) {
                        (az.options.snap.release && az.options.snap.release.call(az.element, aI, al.extend(az._uiHash(), { snapItem: az.snapElements[aJ].item })))
                    } az.snapElements[aJ].snapping = false;
                    continue
                } if (aG.snapMode !== "inner") {
                    aw = Math.abs(aD - ax) <= aM;
                    aN = Math.abs(aO - ay) <= aM;
                    aB = Math.abs(aH - aK) <= aM;
                    aC = Math.abs(aE - aL) <= aM;
                    if (aw) {
                        aF.position.top = az._convertPositionTo("relative", { top: aD - az.helperProportions.height, left: 0 }).top
                    } if (aN) {
                        aF.position.top = az._convertPositionTo("relative", { top: aO, left: 0 }).top
                    } if (aB) {
                        aF.position.left = az._convertPositionTo("relative", { top: 0, left: aH - az.helperProportions.width }).left
                    } if (aC) {
                        aF.position.left = az._convertPositionTo("relative", { top: 0, left: aE }).left
                    }
                } aA = (aw || aN || aB || aC);
                if (aG.snapMode !== "outer") {
                    aw = Math.abs(aD - ay) <= aM;
                    aN = Math.abs(aO - ax) <= aM;
                    aB = Math.abs(aH - aL) <= aM;
                    aC = Math.abs(aE - aK) <= aM;
                    if (aw) {
                        aF.position.top = az._convertPositionTo("relative", { top: aD, left: 0 }).top
                    } if (aN) {
                        aF.position.top = az._convertPositionTo("relative", { top: aO - az.helperProportions.height, left: 0 }).top
                    } if (aB) {
                        aF.position.left = az._convertPositionTo("relative", { top: 0, left: aH }).left
                    } if (aC) {
                        aF.position.left = az._convertPositionTo("relative", { top: 0, left: aE - az.helperProportions.width }).left
                    }
                } if (!az.snapElements[aJ].snapping && (aw || aN || aB || aC || aA)) {
                    (az.options.snap.snap && az.options.snap.snap.call(az.element, aI, al.extend(az._uiHash(), { snapItem: az.snapElements[aJ].item })))
                } az.snapElements[aJ].snapping = (aw || aN || aB || aC || aA)
            }
        }
    });
    al.ui.plugin.add("draggable", "stack", {
        start: function (ay, az, aw) {
            var ax, aB = aw.options, aA = al.makeArray(al(aB.stack)).sort(function (aD, aC) {
                return (parseInt(al(aD).css("zIndex"), 10) || 0) - (parseInt(al(aC).css("zIndex"), 10) || 0)
            });
            if (!aA.length) {
                return
            } ax = parseInt(al(aA[0]).css("zIndex"), 10) || 0;
            al(aA).each(function (aC) {
                al(this).css("zIndex", ax + aC)
            });
            this.css("zIndex", (ax + aA.length))
        }
    });
    al.ui.plugin.add("draggable", "zIndex", {
        start: function (ay, az, aw) {
            var ax = al(az.helper), aA = aw.options;
            if (ax.css("zIndex")) {
                aA._zIndex = ax.css("zIndex")
            } ax.css("zIndex", aA.zIndex)
        }, stop: function (ax, ay, aw) {
            var az = aw.options;
            if (az._zIndex) {
                al(ay.helper).css("zIndex", az._zIndex)
            }
        }
    });
    var x = al.ui.draggable;
    /*!
     * jQuery UI Resizable 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.resizable", al.ui.mouse, {
        version: "1.12.1", widgetEventPrefix: "resize", options: { alsoResize: false, animate: false, animateDuration: "slow", animateEasing: "swing", aspectRatio: false, autoHide: false, classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" }, containment: false, ghost: false, grid: false, handles: "e,s,se", helper: false, maxHeight: null, maxWidth: null, minHeight: 10, minWidth: 10, zIndex: 90, resize: null, start: null, stop: null }, _num: function (aw) {
            return parseFloat(aw) || 0
        }, _isNumber: function (aw) {
            return !isNaN(parseFloat(aw))
        }, _hasScroll: function (az, ax) {
            if (al(az).css("overflow") === "hidden") {
                return false
            } var aw = (ax && ax === "left") ? "scrollLeft" : "scrollTop", ay = false;
            if (az[aw] > 0) {
                return true
            } az[aw] = 1;
            ay = (az[aw] > 0);
            az[aw] = 0;
            return ay
        }, _create: function () {
            var ax, ay = this.options, aw = this;
            this._addClass("ui-resizable");
            al.extend(this, { _aspectRatio: !!(ay.aspectRatio), aspectRatio: ay.aspectRatio, originalElement: this.element, _proportionallyResizeElements: [], _helper: ay.helper || ay.ghost || ay.animate ? ay.helper || "ui-resizable-helper" : null });
            if (this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)) {
                this.element.wrap(al("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({ position: this.element.css("position"), width: this.element.outerWidth(), height: this.element.outerHeight(), top: this.element.css("top"), left: this.element.css("left") }));
                this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance"));
                this.elementIsWrapper = true;
                ax = { marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom"), marginLeft: this.originalElement.css("marginLeft") };
                this.element.css(ax);
                this.originalElement.css("margin", 0);
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" }));
                this.originalElement.css(ax);
                this._proportionallyResize()
            } this._setupHandles();
            if (ay.autoHide) {
                al(this.element).on("mouseenter", function () {
                    if (ay.disabled) {
                        return
                    } aw._removeClass("ui-resizable-autohide");
                    aw._handles.show()
                }).on("mouseleave", function () {
                    if (ay.disabled) {
                        return
                    } if (!aw.resizing) {
                        aw._addClass("ui-resizable-autohide");
                        aw._handles.hide()
                    }
                })
            } this._mouseInit()
        }, _destroy: function () {
            this._mouseDestroy();
            var ax, aw = function (ay) {
                al(ay).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                aw(this.element);
                ax = this.element;
                this.originalElement.css({ position: ax.css("position"), width: ax.outerWidth(), height: ax.outerHeight(), top: ax.css("top"), left: ax.css("left") }).insertAfter(ax);
                ax.remove()
            } this.originalElement.css("resize", this.originalResizeStyle);
            aw(this.originalElement);
            return this
        }, _setOption: function (aw, ax) {
            this._super(aw, ax);
            switch (aw) {
                case "handles": this._removeHandles();
                    this._setupHandles();
                    break;
                default: break
            }
        }, _setupHandles: function () {
            var aB = this.options, aA, ax, aC, aw, ay, az = this;
            this.handles = aB.handles || (!al(".ui-resizable-handle", this.element).length ? "e,s,se" : { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" });
            this._handles = al();
            if (this.handles.constructor === String) {
                if (this.handles === "all") {
                    this.handles = "n,e,s,w,se,sw,ne,nw"
                } aC = this.handles.split(",");
                this.handles = {};
                for (ax = 0;
                    ax < aC.length;
                    ax++) {
                        aA = al.trim(aC[ax]);
                    aw = "ui-resizable-" + aA;
                    ay = al("<div>");
                    this._addClass(ay, "ui-resizable-handle " + aw);
                    ay.css({ zIndex: aB.zIndex });
                    this.handles[aA] = ".ui-resizable-" + aA;
                    this.element.append(ay)
                }
            } this._renderAxis = function (aH) {
                var aE, aF, aD, aG;
                aH = aH || this.element;
                for (aE in this.handles) {
                    if (this.handles[aE].constructor === String) {
                        this.handles[aE] = this.element.children(this.handles[aE]).first().show()
                    } else {
                        if (this.handles[aE].jquery || this.handles[aE].nodeType) {
                            this.handles[aE] = al(this.handles[aE]);
                            this._on(this.handles[aE], { mousedown: az._mouseDown })
                        }
                    } if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)) {
                        aF = al(this.handles[aE], this.element);
                        aG = /sw|ne|nw|se|n|s/.test(aE) ? aF.outerHeight() : aF.outerWidth();
                        aD = ["padding", /ne|nw|n/.test(aE) ? "Top" : /se|sw|s/.test(aE) ? "Bottom" : /^e$/.test(aE) ? "Right" : "Left"].join("");
                        aH.css(aD, aG);
                        this._proportionallyResize()
                    } this._handles = this._handles.add(this.handles[aE])
                }
            };
            this._renderAxis(this.element);
            this._handles = this._handles.add(this.element.find(".ui-resizable-handle"));
            this._handles.disableSelection();
            this._handles.on("mouseover", function () {
                if (!az.resizing) {
                    if (this.className) {
                        ay = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
                    } az.axis = ay && ay[1] ? ay[1] : "se"
                }
            });
            if (aB.autoHide) {
                this._handles.hide();
                this._addClass("ui-resizable-autohide")
            }
        }, _removeHandles: function () {
            this._handles.remove()
        }, _mouseCapture: function (ay) {
            var ax, az, aw = false;
            for (ax in this.handles) {
                az = al(this.handles[ax])[0];
                if (az === ay.target || al.contains(az, ay.target)) {
                    aw = true
                }
            } return !this.options.disabled && aw
        }, _mouseStart: function (ax) {
            var aB, ay, aA, az = this.options, aw = this.element;
            this.resizing = true;
            this._renderProxy();
            aB = this._num(this.helper.css("left"));
            ay = this._num(this.helper.css("top"));
            if (az.containment) {
                aB += al(az.containment).scrollLeft() || 0;
                ay += al(az.containment).scrollTop() || 0
            } this.offset = this.helper.offset();
            this.position = { left: aB, top: ay };
            this.size = this._helper ? { width: this.helper.width(), height: this.helper.height() } : { width: aw.width(), height: aw.height() };
            this.originalSize = this._helper ? { width: aw.outerWidth(), height: aw.outerHeight() } : { width: aw.width(), height: aw.height() };
            this.sizeDiff = { width: aw.outerWidth() - aw.width(), height: aw.outerHeight() - aw.height() };
            this.originalPosition = { left: aB, top: ay };
            this.originalMousePosition = { left: ax.pageX, top: ax.pageY };
            this.aspectRatio = (typeof az.aspectRatio === "number") ? az.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);
            aA = al(".ui-resizable-" + this.axis).css("cursor");
            al("body").css("cursor", aA === "auto" ? this.axis + "-resize" : aA);
            this._addClass("ui-resizable-resizing");
            this._propagate("start", ax);
            return true
        }, _mouseDrag: function (aB) {
            var aC, aA, aD = this.originalMousePosition, ax = this.axis, ay = (aB.pageX - aD.left) || 0, aw = (aB.pageY - aD.top) || 0, az = this._change[ax];
            this._updatePrevProperties();
            if (!az) {
                return false
            } aC = az.apply(this, [aB, ay, aw]);
            this._updateVirtualBoundaries(aB.shiftKey);
            if (this._aspectRatio || aB.shiftKey) {
                aC = this._updateRatio(aC, aB)
            } aC = this._respectSize(aC, aB);
            this._updateCache(aC);
            this._propagate("resize", aB);
            aA = this._applyChanges();
            if (!this._helper && this._proportionallyResizeElements.length) {
                this._proportionallyResize()
            } if (!al.isEmptyObject(aA)) {
                this._updatePrevProperties();
                this._trigger("resize", aB, this.ui());
                this._applyChanges()
            } return false
        }, _mouseStop: function (az) {
            this.resizing = false;
            var ay, aw, ax, aC, aF, aB, aE, aA = this.options, aD = this;
            if (this._helper) {
                ay = this._proportionallyResizeElements;
                aw = ay.length && (/textarea/i).test(ay[0].nodeName);
                ax = aw && this._hasScroll(ay[0], "left") ? 0 : aD.sizeDiff.height;
                aC = aw ? 0 : aD.sizeDiff.width;
                aF = { width: (aD.helper.width() - aC), height: (aD.helper.height() - ax) };
                aB = (parseFloat(aD.element.css("left")) + (aD.position.left - aD.originalPosition.left)) || null;
                aE = (parseFloat(aD.element.css("top")) + (aD.position.top - aD.originalPosition.top)) || null;
                if (!aA.animate) {
                    this.element.css(al.extend(aF, { top: aE, left: aB }))
                } aD.helper.height(aD.size.height);
                aD.helper.width(aD.size.width);
                if (this._helper && !aA.animate) {
                    this._proportionallyResize()
                }
            } al("body").css("cursor", "auto");
            this._removeClass("ui-resizable-resizing");
            this._propagate("stop", az);
            if (this._helper) {
                this.helper.remove()
            } return false
        }, _updatePrevProperties: function () {
            this.prevPosition = { top: this.position.top, left: this.position.left };
            this.prevSize = { width: this.size.width, height: this.size.height }
        }, _applyChanges: function () {
            var aw = {};
            if (this.position.top !== this.prevPosition.top) {
                aw.top = this.position.top + "px"
            } if (this.position.left !== this.prevPosition.left) {
                aw.left = this.position.left + "px"
            } if (this.size.width !== this.prevSize.width) {
                aw.width = this.size.width + "px"
            } if (this.size.height !== this.prevSize.height) {
                aw.height = this.size.height + "px"
            } this.helper.css(aw);
            return aw
        }, _updateVirtualBoundaries: function (ay) {
            var aA, az, ax, aC, aw, aB = this.options;
            aw = { minWidth: this._isNumber(aB.minWidth) ? aB.minWidth : 0, maxWidth: this._isNumber(aB.maxWidth) ? aB.maxWidth : Infinity, minHeight: this._isNumber(aB.minHeight) ? aB.minHeight : 0, maxHeight: this._isNumber(aB.maxHeight) ? aB.maxHeight : Infinity };
            if (this._aspectRatio || ay) {
                aA = aw.minHeight * this.aspectRatio;
                ax = aw.minWidth / this.aspectRatio;
                az = aw.maxHeight * this.aspectRatio;
                aC = aw.maxWidth / this.aspectRatio;
                if (aA > aw.minWidth) {
                    aw.minWidth = aA
                } if (ax > aw.minHeight) {
                    aw.minHeight = ax
                } if (az < aw.maxWidth) {
                    aw.maxWidth = az
                } if (aC < aw.maxHeight) {
                    aw.maxHeight = aC
                }
            } this._vBoundaries = aw
        }, _updateCache: function (aw) {
            this.offset = this.helper.offset();
            if (this._isNumber(aw.left)) {
                this.position.left = aw.left
            } if (this._isNumber(aw.top)) {
                this.position.top = aw.top
            } if (this._isNumber(aw.height)) {
                this.size.height = aw.height
            } if (this._isNumber(aw.width)) {
                this.size.width = aw.width
            }
        }, _updateRatio: function (ay) {
            var az = this.position, ax = this.size, aw = this.axis;
            if (this._isNumber(ay.height)) {
                ay.width = (ay.height * this.aspectRatio)
            } else {
                if (this._isNumber(ay.width)) {
                    ay.height = (ay.width / this.aspectRatio)
                }
            } if (aw === "sw") {
                ay.left = az.left + (ax.width - ay.width);
                ay.top = null
            } if (aw === "nw") {
                ay.top = az.top + (ax.height - ay.height);
                ay.left = az.left + (ax.width - ay.width)
            } return ay
        }, _respectSize: function (aB) {
            var ay = this._vBoundaries, aE = this.axis, aG = this._isNumber(aB.width) && ay.maxWidth && (ay.maxWidth < aB.width), aC = this._isNumber(aB.height) && ay.maxHeight && (ay.maxHeight < aB.height), az = this._isNumber(aB.width) && ay.minWidth && (ay.minWidth > aB.width), aF = this._isNumber(aB.height) && ay.minHeight && (ay.minHeight > aB.height), ax = this.originalPosition.left + this.originalSize.width, aD = this.originalPosition.top + this.originalSize.height, aA = /sw|nw|w/.test(aE), aw = /nw|ne|n/.test(aE);
            if (az) {
                aB.width = ay.minWidth
            } if (aF) {
                aB.height = ay.minHeight
            } if (aG) {
                aB.width = ay.maxWidth
            } if (aC) {
                aB.height = ay.maxHeight
            } if (az && aA) {
                aB.left = ax - ay.minWidth
            } if (aG && aA) {
                aB.left = ax - ay.maxWidth
            } if (aF && aw) {
                aB.top = aD - ay.minHeight
            } if (aC && aw) {
                aB.top = aD - ay.maxHeight
            } if (!aB.width && !aB.height && !aB.left && aB.top) {
                aB.top = null
            } else {
                if (!aB.width && !aB.height && !aB.top && aB.left) {
                    aB.left = null
                }
            } return aB
        }, _getPaddingPlusBorderDimensions: function (ay) {
            var ax = 0, az = [], aA = [ay.css("borderTopWidth"), ay.css("borderRightWidth"), ay.css("borderBottomWidth"), ay.css("borderLeftWidth")], aw = [ay.css("paddingTop"), ay.css("paddingRight"), ay.css("paddingBottom"), ay.css("paddingLeft")];
            for (;
                ax < 4;
                ax++) {
                    az[ax] = (parseFloat(aA[ax]) || 0);
                az[ax] += (parseFloat(aw[ax]) || 0)
            } return { height: az[0] + az[2], width: az[1] + az[3] }
        }, _proportionallyResize: function () {
            if (!this._proportionallyResizeElements.length) {
                return
            } var ay, ax = 0, aw = this.helper || this.element;
            for (;
                ax < this._proportionallyResizeElements.length;
                ax++) {
                    ay = this._proportionallyResizeElements[ax];
                if (!this.outerDimensions) {
                    this.outerDimensions = this._getPaddingPlusBorderDimensions(ay)
                } ay.css({ height: (aw.height() - this.outerDimensions.height) || 0, width: (aw.width() - this.outerDimensions.width) || 0 })
            }
        }, _renderProxy: function () {
            var aw = this.element, ax = this.options;
            this.elementOffset = aw.offset();
            if (this._helper) {
                this.helper = this.helper || al("<div style='overflow:hidden;'></div>");
                this._addClass(this.helper, this._helper);
                this.helper.css({ width: this.element.outerWidth(), height: this.element.outerHeight(), position: "absolute", left: this.elementOffset.left + "px", top: this.elementOffset.top + "px", zIndex: ++ax.zIndex });
                this.helper.appendTo("body").disableSelection()
            } else {
                this.helper = this.element
            }
        }, _change: {
            e: function (ax, aw) {
                return { width: this.originalSize.width + aw }
            }, w: function (ay, aw) {
                var ax = this.originalSize, az = this.originalPosition;
                return { left: az.left + aw, width: ax.width - aw }
            }, n: function (az, ax, aw) {
                var ay = this.originalSize, aA = this.originalPosition;
                return { top: aA.top + aw, height: ay.height - aw }
            }, s: function (ay, ax, aw) {
                return { height: this.originalSize.height + aw }
            }, se: function (ay, ax, aw) {
                return al.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [ay, ax, aw]))
            }, sw: function (ay, ax, aw) {
                return al.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [ay, ax, aw]))
            }, ne: function (ay, ax, aw) {
                return al.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [ay, ax, aw]))
            }, nw: function (ay, ax, aw) {
                return al.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [ay, ax, aw]))
            }
        }, _propagate: function (ax, aw) {
            al.ui.plugin.call(this, ax, [aw, this.ui()]);
            (ax !== "resize" && this._trigger(ax, aw, this.ui()))
        }, plugins: {}, ui: function () {
            return { originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition }
        }
    });
    al.ui.plugin.add("resizable", "animate", {
        stop: function (az) {
            var aE = al(this).resizable("instance"), aB = aE.options, ay = aE._proportionallyResizeElements, aw = ay.length && (/textarea/i).test(ay[0].nodeName), ax = aw && aE._hasScroll(ay[0], "left") ? 0 : aE.sizeDiff.height, aD = aw ? 0 : aE.sizeDiff.width, aA = { width: (aE.size.width - aD), height: (aE.size.height - ax) }, aC = (parseFloat(aE.element.css("left")) + (aE.position.left - aE.originalPosition.left)) || null, aF = (parseFloat(aE.element.css("top")) + (aE.position.top - aE.originalPosition.top)) || null;
            aE.element.animate(al.extend(aA, aF && aC ? { top: aF, left: aC } : {}), {
                duration: aB.animateDuration, easing: aB.animateEasing, step: function () {
                    var aG = { width: parseFloat(aE.element.css("width")), height: parseFloat(aE.element.css("height")), top: parseFloat(aE.element.css("top")), left: parseFloat(aE.element.css("left")) };
                    if (ay && ay.length) {
                        al(ay[0]).css({ width: aG.width, height: aG.height })
                    } aE._updateCache(aG);
                    aE._propagate("resize", az)
                }
            })
        }
    });
    al.ui.plugin.add("resizable", "containment", {
        start: function () {
            var aE, ay, aG, aw, aD, az, aH, aF = al(this).resizable("instance"), aC = aF.options, aB = aF.element, ax = aC.containment, aA = (ax instanceof al) ? ax.get(0) : (/parent/.test(ax)) ? aB.parent().get(0) : ax;
            if (!aA) {
                return
            } aF.containerElement = al(aA);
            if (/document/.test(ax) || ax === document) {
                aF.containerOffset = { left: 0, top: 0 };
                aF.containerPosition = { left: 0, top: 0 };
                aF.parentData = { element: al(document), left: 0, top: 0, width: al(document).width(), height: al(document).height() || document.body.parentNode.scrollHeight }
            } else {
                aE = al(aA);
                ay = [];
                al(["Top", "Right", "Left", "Bottom"]).each(function (aJ, aI) {
                    ay[aJ] = aF._num(aE.css("padding" + aI))
                });
                aF.containerOffset = aE.offset();
                aF.containerPosition = aE.position();
                aF.containerSize = { height: (aE.innerHeight() - ay[3]), width: (aE.innerWidth() - ay[1]) };
                aG = aF.containerOffset;
                aw = aF.containerSize.height;
                aD = aF.containerSize.width;
                az = (aF._hasScroll(aA, "left") ? aA.scrollWidth : aD);
                aH = (aF._hasScroll(aA) ? aA.scrollHeight : aw);
                aF.parentData = { element: aA, left: aG.left, top: aG.top, width: az, height: aH }
            }
        }, resize: function (ax) {
            var aD, aI, aC, aA, aE = al(this).resizable("instance"), az = aE.options, aG = aE.containerOffset, aF = aE.position, aH = aE._aspectRatio || ax.shiftKey, aw = { top: 0, left: 0 }, ay = aE.containerElement, aB = true;
            if (ay[0] !== document && (/static/).test(ay.css("position"))) {
                aw = aG
            } if (aF.left < (aE._helper ? aG.left : 0)) {
                aE.size.width = aE.size.width + (aE._helper ? (aE.position.left - aG.left) : (aE.position.left - aw.left));
                if (aH) {
                    aE.size.height = aE.size.width / aE.aspectRatio;
                    aB = false
                } aE.position.left = az.helper ? aG.left : 0
            } if (aF.top < (aE._helper ? aG.top : 0)) {
                aE.size.height = aE.size.height + (aE._helper ? (aE.position.top - aG.top) : aE.position.top);
                if (aH) {
                    aE.size.width = aE.size.height * aE.aspectRatio;
                    aB = false
                } aE.position.top = aE._helper ? aG.top : 0
            } aC = aE.containerElement.get(0) === aE.element.parent().get(0);
            aA = /relative|absolute/.test(aE.containerElement.css("position"));
            if (aC && aA) {
                aE.offset.left = aE.parentData.left + aE.position.left;
                aE.offset.top = aE.parentData.top + aE.position.top
            } else {
                aE.offset.left = aE.element.offset().left;
                aE.offset.top = aE.element.offset().top
            } aD = Math.abs(aE.sizeDiff.width + (aE._helper ? aE.offset.left - aw.left : (aE.offset.left - aG.left)));
            aI = Math.abs(aE.sizeDiff.height + (aE._helper ? aE.offset.top - aw.top : (aE.offset.top - aG.top)));
            if (aD + aE.size.width >= aE.parentData.width) {
                aE.size.width = aE.parentData.width - aD;
                if (aH) {
                    aE.size.height = aE.size.width / aE.aspectRatio;
                    aB = false
                }
            } if (aI + aE.size.height >= aE.parentData.height) {
                aE.size.height = aE.parentData.height - aI;
                if (aH) {
                    aE.size.width = aE.size.height * aE.aspectRatio;
                    aB = false
                }
            } if (!aB) {
                aE.position.left = aE.prevPosition.left;
                aE.position.top = aE.prevPosition.top;
                aE.size.width = aE.prevSize.width;
                aE.size.height = aE.prevSize.height
            }
        }, stop: function () {
            var aB = al(this).resizable("instance"), ax = aB.options, aC = aB.containerOffset, aw = aB.containerPosition, ay = aB.containerElement, az = al(aB.helper), aE = az.offset(), aD = az.outerWidth() - aB.sizeDiff.width, aA = az.outerHeight() - aB.sizeDiff.height;
            if (aB._helper && !ax.animate && (/relative/).test(ay.css("position"))) {
                al(this).css({ left: aE.left - aw.left - aC.left, width: aD, height: aA })
            } if (aB._helper && !ax.animate && (/static/).test(ay.css("position"))) {
                al(this).css({ left: aE.left - aw.left - aC.left, width: aD, height: aA })
            }
        }
    });
    al.ui.plugin.add("resizable", "alsoResize", {
        start: function () {
            var aw = al(this).resizable("instance"), ax = aw.options;
            al(ax.alsoResize).each(function () {
                var ay = al(this);
                ay.data("ui-resizable-alsoresize", { width: parseFloat(ay.width()), height: parseFloat(ay.height()), left: parseFloat(ay.css("left")), top: parseFloat(ay.css("top")) })
            })
        }, resize: function (ax, az) {
            var aw = al(this).resizable("instance"), aA = aw.options, ay = aw.originalSize, aC = aw.originalPosition, aB = { height: (aw.size.height - ay.height) || 0, width: (aw.size.width - ay.width) || 0, top: (aw.position.top - aC.top) || 0, left: (aw.position.left - aC.left) || 0 };
            al(aA.alsoResize).each(function () {
                var aF = al(this), aG = al(this).data("ui-resizable-alsoresize"), aE = {}, aD = aF.parents(az.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                al.each(aD, function (aH, aJ) {
                    var aI = (aG[aJ] || 0) + (aB[aJ] || 0);
                    if (aI && aI >= 0) {
                        aE[aJ] = aI || null
                    }
                });
                aF.css(aE)
            })
        }, stop: function () {
            al(this).removeData("ui-resizable-alsoresize")
        }
    });
    al.ui.plugin.add("resizable", "ghost", {
        start: function () {
            var ax = al(this).resizable("instance"), aw = ax.size;
            ax.ghost = ax.originalElement.clone();
            ax.ghost.css({ opacity: 0.25, display: "block", position: "relative", height: aw.height, width: aw.width, margin: 0, left: 0, top: 0 });
            ax._addClass(ax.ghost, "ui-resizable-ghost");
            if (al.uiBackCompat !== false && typeof ax.options.ghost === "string") {
                ax.ghost.addClass(this.options.ghost)
            } ax.ghost.appendTo(ax.helper)
        }, resize: function () {
            var aw = al(this).resizable("instance");
            if (aw.ghost) {
                aw.ghost.css({ position: "relative", height: aw.size.height, width: aw.size.width })
            }
        }, stop: function () {
            var aw = al(this).resizable("instance");
            if (aw.ghost && aw.helper) {
                aw.helper.get(0).removeChild(aw.ghost.get(0))
            }
        }
    });
    al.ui.plugin.add("resizable", "grid", {
        resize: function () {
            var az, aE = al(this).resizable("instance"), aI = aE.options, aC = aE.size, aD = aE.originalSize, aF = aE.originalPosition, aN = aE.axis, aw = typeof aI.grid === "number" ? [aI.grid, aI.grid] : aI.grid, aL = (aw[0] || 1), aK = (aw[1] || 1), aB = Math.round((aC.width - aD.width) / aL) * aL, aA = Math.round((aC.height - aD.height) / aK) * aK, aG = aD.width + aB, aJ = aD.height + aA, ay = aI.maxWidth && (aI.maxWidth < aG), aH = aI.maxHeight && (aI.maxHeight < aJ), aM = aI.minWidth && (aI.minWidth > aG), ax = aI.minHeight && (aI.minHeight > aJ);
            aI.grid = aw;
            if (aM) {
                aG += aL
            } if (ax) {
                aJ += aK
            } if (ay) {
                aG -= aL
            } if (aH) {
                aJ -= aK
            } if (/^(se|s|e)$/.test(aN)) {
                aE.size.width = aG;
                aE.size.height = aJ
            } else {
                if (/^(ne)$/.test(aN)) {
                    aE.size.width = aG;
                    aE.size.height = aJ;
                    aE.position.top = aF.top - aA
                } else {
                    if (/^(sw)$/.test(aN)) {
                        aE.size.width = aG;
                        aE.size.height = aJ;
                        aE.position.left = aF.left - aB
                    } else {
                        if (aJ - aK <= 0 || aG - aL <= 0) {
                            az = aE._getPaddingPlusBorderDimensions(this)
                        } if (aJ - aK > 0) {
                            aE.size.height = aJ;
                            aE.position.top = aF.top - aA
                        } else {
                            aJ = aK - az.height;
                            aE.size.height = aJ;
                            aE.position.top = aF.top + aD.height - aJ
                        } if (aG - aL > 0) {
                            aE.size.width = aG;
                            aE.position.left = aF.left - aB
                        } else {
                            aG = aL - az.width;
                            aE.size.width = aG;
                            aE.position.left = aF.left + aD.width - aG
                        }
                    }
                }
            }
        }
    });
    var C = al.ui.resizable;
    /*!
     * jQuery UI Dialog 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.dialog", {
        version: "1.12.1", options: {
            appendTo: "body", autoOpen: true, buttons: [], classes: { "ui-dialog": "ui-corner-all", "ui-dialog-titlebar": "ui-corner-all" }, closeOnEscape: true, closeText: "Close", draggable: true, hide: null, height: "auto", maxHeight: null, maxWidth: null, minHeight: 150, minWidth: 150, modal: false, position: {
                my: "center", at: "center", of: window, collision: "fit", using: function (ax) {
                    var aw = al(this).css(ax).offset().top;
                    if (aw < 0) {
                        al(this).css("top", ax.top - aw)
                    }
                }
            }, resizable: true, show: null, title: null, width: 300, beforeClose: null, close: null, drag: null, dragStart: null, dragStop: null, focus: null, open: null, resize: null, resizeStart: null, resizeStop: null
        }, sizeRelatedOptions: { buttons: true, height: true, maxHeight: true, maxWidth: true, minHeight: true, minWidth: true, width: true }, resizableRelatedOptions: { maxHeight: true, maxWidth: true, minHeight: true, minWidth: true }, _create: function () {
            this.originalCss = { display: this.element[0].style.display, width: this.element[0].style.width, minHeight: this.element[0].style.minHeight, maxHeight: this.element[0].style.maxHeight, height: this.element[0].style.height };
            this.originalPosition = { parent: this.element.parent(), index: this.element.parent().children().index(this.element) };
            this.originalTitle = this.element.attr("title");
            if (this.options.title == null && this.originalTitle != null) {
                this.options.title = this.originalTitle
            } if (this.options.disabled) {
                this.options.disabled = false
            } this._createWrapper();
            this.element.show().removeAttr("title").appendTo(this.uiDialog);
            this._addClass("ui-dialog-content", "ui-widget-content");
            this._createTitlebar();
            this._createButtonPane();
            if (this.options.draggable && al.fn.draggable) {
                this._makeDraggable()
            } if (this.options.resizable && al.fn.resizable) {
                this._makeResizable()
            } this._isOpen = false;
            this._trackFocus()
        }, _init: function () {
            if (this.options.autoOpen) {
                this.open()
            }
        }, _appendTo: function () {
            var aw = this.options.appendTo;
            if (aw && (aw.jquery || aw.nodeType)) {
                return al(aw)
            } return this.document.find(aw || "body").eq(0)
        }, _destroy: function () {
            var ax, aw = this.originalPosition;
            this._untrackInstance();
            this._destroyOverlay();
            this.element.removeUniqueId().css(this.originalCss).detach();
            this.uiDialog.remove();
            if (this.originalTitle) {
                this.element.attr("title", this.originalTitle)
            } ax = aw.parent.children().eq(aw.index);
            if (ax.length && ax[0] !== this.element[0]) {
                ax.before(this.element)
            } else {
                aw.parent.append(this.element)
            }
        }, widget: function () {
            return this.uiDialog
        }, disable: al.noop, enable: al.noop, close: function (ax) {
            var aw = this;
            if (!this._isOpen || this._trigger("beforeClose", ax) === false) {
                return
            } this._isOpen = false;
            this._focusedElement = null;
            this._destroyOverlay();
            this._untrackInstance();
            if (!this.opener.filter(":focusable").trigger("focus").length) {
                al.ui.safeBlur(al.ui.safeActiveElement(this.document[0]))
            } this._hide(this.uiDialog, this.options.hide, function () {
                aw._trigger("close", ax)
            })
        }, isOpen: function () {
            return this._isOpen
        }, moveToTop: function () {
            this._moveToTop()
        }, _moveToTop: function (aA, aw) {
            var az = false, ay = this.uiDialog.siblings(".ui-front:visible").map(function () {
                return +al(this).css("z-index")
            }).get(), ax = Math.max.apply(null, ay);
            if (ax >= +this.uiDialog.css("z-index")) {
                this.uiDialog.css("z-index", ax + 1);
                az = true
            } if (az && !aw) {
                this._trigger("focus", aA)
            } return az
        }, open: function () {
            var aw = this;
            if (this._isOpen) {
                if (this._moveToTop()) {
                    this._focusTabbable()
                } return
            } this._isOpen = true;
            this.opener = al(al.ui.safeActiveElement(this.document[0]));
            this._size();
            this._position();
            this._createOverlay();
            this._moveToTop(null, true);
            if (this.overlay) {
                this.overlay.css("z-index", this.uiDialog.css("z-index") - 1)
            } this._show(this.uiDialog, this.options.show, function () {
                aw._focusTabbable();
                aw._trigger("focus")
            });
            this._makeFocusTarget();
            this._trigger("open")
        }, _focusTabbable: function () {
            var aw = this._focusedElement;
            if (!aw) {
                aw = this.element.find("[autofocus]")
            } if (!aw.length) {
                aw = this.element.find(":tabbable")
            } if (!aw.length) {
                aw = this.uiDialogButtonPane.find(":tabbable")
            } if (!aw.length) {
                aw = this.uiDialogTitlebarClose.filter(":tabbable")
            } if (!aw.length) {
                aw = this.uiDialog
            } aw.eq(0).trigger("focus")
        }, _keepFocus: function (aw) {
            function ax() {
                var az = al.ui.safeActiveElement(this.document[0]), ay = this.uiDialog[0] === az || al.contains(this.uiDialog[0], az);
                if (!ay) {
                    this._focusTabbable()
                }
            } aw.preventDefault();
            ax.call(this);
            this._delay(ax)
        }, _createWrapper: function () {
            this.uiDialog = al("<div>").hide().attr({ tabIndex: -1, role: "dialog" }).appendTo(this._appendTo());
            this._addClass(this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front");
            this._on(this.uiDialog, {
                keydown: function (ay) {
                    if (this.options.closeOnEscape && !ay.isDefaultPrevented() && ay.keyCode && ay.keyCode === al.ui.keyCode.ESCAPE) {
                        ay.preventDefault();
                        this.close(ay);
                        return
                    } if (ay.keyCode !== al.ui.keyCode.TAB || ay.isDefaultPrevented()) {
                        return
                    } var ax = this.uiDialog.find(":tabbable"), az = ax.filter(":first"), aw = ax.filter(":last");
                    if ((ay.target === aw[0] || ay.target === this.uiDialog[0]) && !ay.shiftKey) {
                        this._delay(function () {
                            az.trigger("focus")
                        });
                        ay.preventDefault()
                    } else {
                        if ((ay.target === az[0] || ay.target === this.uiDialog[0]) && ay.shiftKey) {
                            this._delay(function () {
                                aw.trigger("focus")
                            });
                            ay.preventDefault()
                        }
                    }
                }, mousedown: function (aw) {
                    if (this._moveToTop(aw)) {
                        this._focusTabbable()
                    }
                }
            });
            if (!this.element.find("[aria-describedby]").length) {
                this.uiDialog.attr({ "aria-describedby": this.element.uniqueId().attr("id") })
            }
        }, _createTitlebar: function () {
            var aw;
            this.uiDialogTitlebar = al("<div>");
            this._addClass(this.uiDialogTitlebar, "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix");
            this._on(this.uiDialogTitlebar, {
                mousedown: function (ax) {
                    if (!al(ax.target).closest(".ui-dialog-titlebar-close")) {
                        this.uiDialog.trigger("focus")
                    }
                }
            });
            this.uiDialogTitlebarClose = al("<button type='button'></button>").button({ label: al("<a>").text(this.options.closeText).html(), icon: "ui-icon-closethick", showLabel: false }).appendTo(this.uiDialogTitlebar);
            this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close");
            this._on(this.uiDialogTitlebarClose, {
                click: function (ax) {
                    ax.preventDefault();
                    this.close(ax)
                }
            });
            aw = al("<span>").uniqueId().prependTo(this.uiDialogTitlebar);
            this._addClass(aw, "ui-dialog-title");
            this._title(aw);
            this.uiDialogTitlebar.prependTo(this.uiDialog);
            this.uiDialog.attr({ "aria-labelledby": aw.attr("id") })
        }, _title: function (aw) {
            if (this.options.title) {
                aw.text(this.options.title)
            } else {
                aw.html("&#160;")
            }
        }, _createButtonPane: function () {
            this.uiDialogButtonPane = al("<div>");
            this._addClass(this.uiDialogButtonPane, "ui-dialog-buttonpane", "ui-widget-content ui-helper-clearfix");
            this.uiButtonSet = al("<div>").appendTo(this.uiDialogButtonPane);
            this._addClass(this.uiButtonSet, "ui-dialog-buttonset");
            this._createButtons()
        }, _createButtons: function () {
            var ax = this, aw = this.options.buttons;
            this.uiDialogButtonPane.remove();
            this.uiButtonSet.empty();
            if (al.isEmptyObject(aw) || (al.isArray(aw) && !aw.length)) {
                this._removeClass(this.uiDialog, "ui-dialog-buttons");
                return
            } al.each(aw, function (ay, az) {
                var aA, aB;
                az = al.isFunction(az) ? { click: az, text: ay } : az;
                az = al.extend({ type: "button" }, az);
                aA = az.click;
                aB = { icon: az.icon, iconPosition: az.iconPosition, showLabel: az.showLabel, icons: az.icons, text: az.text };
                delete az.click;
                delete az.icon;
                delete az.iconPosition;
                delete az.showLabel;
                delete az.icons;
                if (typeof az.text === "boolean") {
                    delete az.text
                } al("<button></button>", az).button(aB).appendTo(ax.uiButtonSet).on("click", function () {
                    aA.apply(ax.element[0], arguments)
                })
            });
            this._addClass(this.uiDialog, "ui-dialog-buttons");
            this.uiDialogButtonPane.appendTo(this.uiDialog)
        }, _makeDraggable: function () {
            var ay = this, ax = this.options;
            function aw(az) {
                return { position: az.position, offset: az.offset }
            } this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close", handle: ".ui-dialog-titlebar", containment: "document", start: function (az, aA) {
                    ay._addClass(al(this), "ui-dialog-dragging");
                    ay._blockFrames();
                    ay._trigger("dragStart", az, aw(aA))
                }, drag: function (az, aA) {
                    ay._trigger("drag", az, aw(aA))
                }, stop: function (az, aA) {
                    var aC = aA.offset.left - ay.document.scrollLeft(), aB = aA.offset.top - ay.document.scrollTop();
                    ax.position = { my: "left top", at: "left" + (aC >= 0 ? "+" : "") + aC + " top" + (aB >= 0 ? "+" : "") + aB, of: ay.window };
                    ay._removeClass(al(this), "ui-dialog-dragging");
                    ay._unblockFrames();
                    ay._trigger("dragStop", az, aw(aA))
                }
            })
        }, _makeResizable: function () {
            var aB = this, az = this.options, aA = az.resizable, aw = this.uiDialog.css("position"), ay = typeof aA === "string" ? aA : "n,e,s,w,se,sw,ne,nw";
            function ax(aC) {
                return { originalPosition: aC.originalPosition, originalSize: aC.originalSize, position: aC.position, size: aC.size }
            } this.uiDialog.resizable({
                cancel: ".ui-dialog-content", containment: "document", alsoResize: this.element, maxWidth: az.maxWidth, maxHeight: az.maxHeight, minWidth: az.minWidth, minHeight: this._minHeight(), handles: ay, start: function (aC, aD) {
                    aB._addClass(al(this), "ui-dialog-resizing");
                    aB._blockFrames();
                    aB._trigger("resizeStart", aC, ax(aD))
                }, resize: function (aC, aD) {
                    aB._trigger("resize", aC, ax(aD))
                }, stop: function (aC, aD) {
                    var aG = aB.uiDialog.offset(), aF = aG.left - aB.document.scrollLeft(), aE = aG.top - aB.document.scrollTop();
                    az.height = aB.uiDialog.height();
                    az.width = aB.uiDialog.width();
                    az.position = { my: "left top", at: "left" + (aF >= 0 ? "+" : "") + aF + " top" + (aE >= 0 ? "+" : "") + aE, of: aB.window };
                    aB._removeClass(al(this), "ui-dialog-resizing");
                    aB._unblockFrames();
                    aB._trigger("resizeStop", aC, ax(aD))
                }
            }).css("position", aw)
        }, _trackFocus: function () {
            this._on(this.widget(), {
                focusin: function (aw) {
                    this._makeFocusTarget();
                    this._focusedElement = al(aw.target)
                }
            })
        }, _makeFocusTarget: function () {
            this._untrackInstance();
            this._trackingInstances().unshift(this)
        }, _untrackInstance: function () {
            var ax = this._trackingInstances(), aw = al.inArray(this, ax);
            if (aw !== -1) {
                ax.splice(aw, 1)
            }
        }, _trackingInstances: function () {
            var aw = this.document.data("ui-dialog-instances");
            if (!aw) {
                aw = [];
                this.document.data("ui-dialog-instances", aw)
            } return aw
        }, _minHeight: function () {
            var aw = this.options;
            return aw.height === "auto" ? aw.minHeight : Math.min(aw.minHeight, aw.height)
        }, _position: function () {
            var aw = this.uiDialog.is(":visible");
            if (!aw) {
                this.uiDialog.show()
            } this.uiDialog.position(this.options.position);
            if (!aw) {
                this.uiDialog.hide()
            }
        }, _setOptions: function (ay) {
            var az = this, ax = false, aw = {};
            al.each(ay, function (aA, aB) {
                az._setOption(aA, aB);
                if (aA in az.sizeRelatedOptions) {
                    ax = true
                } if (aA in az.resizableRelatedOptions) {
                    aw[aA] = aB
                }
            });
            if (ax) {
                this._size();
                this._position()
            } if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", aw)
            }
        }, _setOption: function (ay, az) {
            var ax, aA, aw = this.uiDialog;
            if (ay === "disabled") {
                return
            } this._super(ay, az);
            if (ay === "appendTo") {
                this.uiDialog.appendTo(this._appendTo())
            } if (ay === "buttons") {
                this._createButtons()
            } if (ay === "closeText") {
                this.uiDialogTitlebarClose.button({ label: al("<a>").text("" + this.options.closeText).html() })
            } if (ay === "draggable") {
                ax = aw.is(":data(ui-draggable)");
                if (ax && !az) {
                    aw.draggable("destroy")
                } if (!ax && az) {
                    this._makeDraggable()
                }
            } if (ay === "position") {
                this._position()
            } if (ay === "resizable") {
                aA = aw.is(":data(ui-resizable)");
                if (aA && !az) {
                    aw.resizable("destroy")
                } if (aA && typeof az === "string") {
                    aw.resizable("option", "handles", az)
                } if (!aA && az !== false) {
                    this._makeResizable()
                }
            } if (ay === "title") {
                this._title(this.uiDialogTitlebar.find(".ui-dialog-title"))
            }
        }, _size: function () {
            var aw, ay, az, ax = this.options;
            this.element.show().css({ width: "auto", minHeight: 0, maxHeight: "none", height: 0 });
            if (ax.minWidth > ax.width) {
                ax.width = ax.minWidth
            } aw = this.uiDialog.css({ height: "auto", width: ax.width }).outerHeight();
            ay = Math.max(0, ax.minHeight - aw);
            az = typeof ax.maxHeight === "number" ? Math.max(0, ax.maxHeight - aw) : "none";
            if (ax.height === "auto") {
                this.element.css({ minHeight: ay, maxHeight: az, height: "auto" })
            } else {
                this.element.height(Math.max(0, ax.height - aw))
            } if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", "minHeight", this._minHeight())
            }
        }, _blockFrames: function () {
            this.iframeBlocks = this.document.find("iframe").map(function () {
                var aw = al(this);
                return al("<div>").css({ position: "absolute", width: aw.outerWidth(), height: aw.outerHeight() }).appendTo(aw.parent()).offset(aw.offset())[0]
            })
        }, _unblockFrames: function () {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks
            }
        }, _allowInteraction: function (aw) {
            if (al(aw.target).closest(".ui-dialog").length) {
                return true
            } return !!al(aw.target).closest(".ui-datepicker").length
        }, _createOverlay: function () {
            if (!this.options.modal) {
                return
            } var aw = true;
            this._delay(function () {
                aw = false
            });
            if (!this.document.data("ui-dialog-overlays")) {
                this._on(this.document, {
                    focusin: function (ax) {
                        if (aw) {
                            return
                        } if (!this._allowInteraction(ax)) {
                            ax.preventDefault();
                            this._trackingInstances()[0]._focusTabbable()
                        }
                    }
                })
            } this.overlay = al("<div>").appendTo(this._appendTo());
            this._addClass(this.overlay, null, "ui-widget-overlay ui-front");
            this._on(this.overlay, { mousedown: "_keepFocus" });
            this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1)
        }, _destroyOverlay: function () {
            if (!this.options.modal) {
                return
            } if (this.overlay) {
                var aw = this.document.data("ui-dialog-overlays") - 1;
                if (!aw) {
                    this._off(this.document, "focusin");
                    this.document.removeData("ui-dialog-overlays")
                } else {
                    this.document.data("ui-dialog-overlays", aw)
                } this.overlay.remove();
                this.overlay = null
            }
        }
    });
    if (al.uiBackCompat !== false) {
        al.widget("ui.dialog", al.ui.dialog, {
            options: { dialogClass: "" }, _createWrapper: function () {
                this._super();
                this.uiDialog.addClass(this.options.dialogClass)
            }, _setOption: function (aw, ax) {
                if (aw === "dialogClass") {
                    this.uiDialog.removeClass(this.options.dialogClass).addClass(ax)
                } this._superApply(arguments)
            }
        })
    } var ad = al.ui.dialog;
    /*!
     * jQuery UI Droppable 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.droppable", {
        version: "1.12.1", widgetEventPrefix: "drop", options: { accept: "*", addClasses: true, greedy: false, scope: "default", tolerance: "intersect", activate: null, deactivate: null, drop: null, out: null, over: null }, _create: function () {
            var ax, ay = this.options, aw = ay.accept;
            this.isover = false;
            this.isout = true;
            this.accept = al.isFunction(aw) ? aw : function (az) {
                return az.is(aw)
            };
            this.proportions = function () {
                if (arguments.length) {
                    ax = arguments[0]
                } else {
                    return ax ? ax : ax = { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight }
                }
            };
            this._addToManager(ay.scope);
            ay.addClasses && this._addClass("ui-droppable")
        }, _addToManager: function (aw) {
            al.ui.ddmanager.droppables[aw] = al.ui.ddmanager.droppables[aw] || [];
            al.ui.ddmanager.droppables[aw].push(this)
        }, _splice: function (aw) {
            var ax = 0;
            for (;
                ax < aw.length;
                ax++) {
                    if (aw[ax] === this) {
                        aw.splice(ax, 1)
                    }
            }
        }, _destroy: function () {
            var aw = al.ui.ddmanager.droppables[this.options.scope];
            this._splice(aw)
        }, _setOption: function (ax, ay) {
            if (ax === "accept") {
                this.accept = al.isFunction(ay) ? ay : function (az) {
                    return az.is(ay)
                }
            } else {
                if (ax === "scope") {
                    var aw = al.ui.ddmanager.droppables[this.options.scope];
                    this._splice(aw);
                    this._addToManager(ay)
                }
            } this._super(ax, ay)
        }, _activate: function (ax) {
            var aw = al.ui.ddmanager.current;
            this._addActiveClass();
            if (aw) {
                this._trigger("activate", ax, this.ui(aw))
            }
        }, _deactivate: function (ax) {
            var aw = al.ui.ddmanager.current;
            this._removeActiveClass();
            if (aw) {
                this._trigger("deactivate", ax, this.ui(aw))
            }
        }, _over: function (ax) {
            var aw = al.ui.ddmanager.current;
            if (!aw || (aw.currentItem || aw.element)[0] === this.element[0]) {
                return
            } if (this.accept.call(this.element[0], (aw.currentItem || aw.element))) {
                this._addHoverClass();
                this._trigger("over", ax, this.ui(aw))
            }
        }, _out: function (ax) {
            var aw = al.ui.ddmanager.current;
            if (!aw || (aw.currentItem || aw.element)[0] === this.element[0]) {
                return
            } if (this.accept.call(this.element[0], (aw.currentItem || aw.element))) {
                this._removeHoverClass();
                this._trigger("out", ax, this.ui(aw))
            }
        }, _drop: function (ax, ay) {
            var aw = ay || al.ui.ddmanager.current, az = false;
            if (!aw || (aw.currentItem || aw.element)[0] === this.element[0]) {
                return false
            } this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function () {
                var aA = al(this).droppable("instance");
                if (aA.options.greedy && !aA.options.disabled && aA.options.scope === aw.options.scope && aA.accept.call(aA.element[0], (aw.currentItem || aw.element)) && t(aw, al.extend(aA, { offset: aA.element.offset() }), aA.options.tolerance, ax)) {
                    az = true;
                    return false
                }
            });
            if (az) {
                return false
            } if (this.accept.call(this.element[0], (aw.currentItem || aw.element))) {
                this._removeActiveClass();
                this._removeHoverClass();
                this._trigger("drop", ax, this.ui(aw));
                return this.element
            } return false
        }, ui: function (aw) {
            return { draggable: (aw.currentItem || aw.element), helper: aw.helper, position: aw.position, offset: aw.positionAbs }
        }, _addHoverClass: function () {
            this._addClass("ui-droppable-hover")
        }, _removeHoverClass: function () {
            this._removeClass("ui-droppable-hover")
        }, _addActiveClass: function () {
            this._addClass("ui-droppable-active")
        }, _removeActiveClass: function () {
            this._removeClass("ui-droppable-active")
        }
    });
    var t = al.ui.intersect = (function () {
        function aw(ay, ax, az) {
            return (ay >= ax) && (ay < (ax + az))
        } return function (aI, aC, aG, ay) {
            if (!aC.offset) {
                return false
            } var aA = (aI.positionAbs || aI.position.absolute).left + aI.margins.left, aF = (aI.positionAbs || aI.position.absolute).top + aI.margins.top, az = aA + aI.helperProportions.width, aE = aF + aI.helperProportions.height, aB = aC.offset.left, aH = aC.offset.top, ax = aB + aC.proportions().width, aD = aH + aC.proportions().height;
            switch (aG) {
                case "fit": return (aB <= aA && az <= ax && aH <= aF && aE <= aD);
                case "intersect": return (aB < aA + (aI.helperProportions.width / 2) && az - (aI.helperProportions.width / 2) < ax && aH < aF + (aI.helperProportions.height / 2) && aE - (aI.helperProportions.height / 2) < aD);
                case "pointer": return aw(ay.pageY, aH, aC.proportions().height) && aw(ay.pageX, aB, aC.proportions().width);
                case "touch": return ((aF >= aH && aF <= aD) || (aE >= aH && aE <= aD) || (aF < aH && aE > aD)) && ((aA >= aB && aA <= ax) || (az >= aB && az <= ax) || (aA < aB && az > ax));
                default: return false
            }
        }
    })();
    al.ui.ddmanager = {
        current: null, droppables: { "default": [] }, prepareOffsets: function (az, aB) {
            var ay, ax, aw = al.ui.ddmanager.droppables[az.options.scope] || [], aA = aB ? aB.type : null, aC = (az.currentItem || az.element).find(":data(ui-droppable)").addBack();
            droppablesLoop: for (ay = 0;
                ay < aw.length;
                ay++) {
                    if (aw[ay].options.disabled || (az && !aw[ay].accept.call(aw[ay].element[0], (az.currentItem || az.element)))) {
                        continue
                    } for (ax = 0;
                    ax < aC.length;
                    ax++) {
                        if (aC[ax] === aw[ay].element[0]) {
                            aw[ay].proportions().height = 0;
                            continue droppablesLoop
                        }
                } aw[ay].visible = aw[ay].element.css("display") !== "none";
                if (!aw[ay].visible) {
                    continue
                } if (aA === "mousedown") {
                    aw[ay]._activate.call(aw[ay], aB)
                } aw[ay].offset = aw[ay].element.offset();
                aw[ay].proportions({ width: aw[ay].element[0].offsetWidth, height: aw[ay].element[0].offsetHeight })
            }
        }, drop: function (aw, ax) {
            var ay = false;
            al.each((al.ui.ddmanager.droppables[aw.options.scope] || []).slice(), function () {
                if (!this.options) {
                    return
                } if (!this.options.disabled && this.visible && t(aw, this, this.options.tolerance, ax)) {
                    ay = this._drop.call(this, ax) || ay
                } if (!this.options.disabled && this.visible && this.accept.call(this.element[0], (aw.currentItem || aw.element))) {
                    this.isout = true;
                    this.isover = false;
                    this._deactivate.call(this, ax)
                }
            });
            return ay
        }, dragStart: function (aw, ax) {
            aw.element.parentsUntil("body").on("scroll.droppable", function () {
                if (!aw.options.refreshPositions) {
                    al.ui.ddmanager.prepareOffsets(aw, ax)
                }
            })
        }, drag: function (aw, ax) {
            if (aw.options.refreshPositions) {
                al.ui.ddmanager.prepareOffsets(aw, ax)
            } al.each(al.ui.ddmanager.droppables[aw.options.scope] || [], function () {
                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return
                } var aB, az, ay, aA = t(aw, this, this.options.tolerance, ax), aC = !aA && this.isover ? "isout" : (aA && !this.isover ? "isover" : null);
                if (!aC) {
                    return
                } if (this.options.greedy) {
                    az = this.options.scope;
                    ay = this.element.parents(":data(ui-droppable)").filter(function () {
                        return al(this).droppable("instance").options.scope === az
                    });
                    if (ay.length) {
                        aB = al(ay[0]).droppable("instance");
                        aB.greedyChild = (aC === "isover")
                    }
                } if (aB && aC === "isover") {
                    aB.isover = false;
                    aB.isout = true;
                    aB._out.call(aB, ax)
                } this[aC] = true;
                this[aC === "isout" ? "isover" : "isout"] = false;
                this[aC === "isover" ? "_over" : "_out"].call(this, ax);
                if (aB && aC === "isout") {
                    aB.isout = false;
                    aB.isover = true;
                    aB._over.call(aB, ax)
                }
            })
        }, dragStop: function (aw, ax) {
            aw.element.parentsUntil("body").off("scroll.droppable");
            if (!aw.options.refreshPositions) {
                al.ui.ddmanager.prepareOffsets(aw, ax)
            }
        }
    };
    if (al.uiBackCompat !== false) {
        al.widget("ui.droppable", al.ui.droppable, {
            options: { hoverClass: false, activeClass: false }, _addActiveClass: function () {
                this._super();
                if (this.options.activeClass) {
                    this.element.addClass(this.options.activeClass)
                }
            }, _removeActiveClass: function () {
                this._super();
                if (this.options.activeClass) {
                    this.element.removeClass(this.options.activeClass)
                }
            }, _addHoverClass: function () {
                this._super();
                if (this.options.hoverClass) {
                    this.element.addClass(this.options.hoverClass)
                }
            }, _removeHoverClass: function () {
                this._super();
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                }
            }
        })
    } var X = al.ui.droppable;
    /*!
     * jQuery UI Progressbar 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var Z = al.widget("ui.progressbar", {
        version: "1.12.1", options: { classes: { "ui-progressbar": "ui-corner-all", "ui-progressbar-value": "ui-corner-left", "ui-progressbar-complete": "ui-corner-right" }, max: 100, value: 0, change: null, complete: null }, min: 0, _create: function () {
            this.oldValue = this.options.value = this._constrainedValue();
            this.element.attr({ role: "progressbar", "aria-valuemin": this.min });
            this._addClass("ui-progressbar", "ui-widget ui-widget-content");
            this.valueDiv = al("<div>").appendTo(this.element);
            this._addClass(this.valueDiv, "ui-progressbar-value", "ui-widget-header");
            this._refreshValue()
        }, _destroy: function () {
            this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow");
            this.valueDiv.remove()
        }, value: function (aw) {
            if (aw === undefined) {
                return this.options.value
            } this.options.value = this._constrainedValue(aw);
            this._refreshValue()
        }, _constrainedValue: function (aw) {
            if (aw === undefined) {
                aw = this.options.value
            } this.indeterminate = aw === false;
            if (typeof aw !== "number") {
                aw = 0
            } return this.indeterminate ? false : Math.min(this.options.max, Math.max(this.min, aw))
        }, _setOptions: function (aw) {
            var ax = aw.value;
            delete aw.value;
            this._super(aw);
            this.options.value = this._constrainedValue(ax);
            this._refreshValue()
        }, _setOption: function (aw, ax) {
            if (aw === "max") {
                ax = Math.max(this.min, ax)
            } this._super(aw, ax)
        }, _setOptionDisabled: function (aw) {
            this._super(aw);
            this.element.attr("aria-disabled", aw);
            this._toggleClass(null, "ui-state-disabled", !!aw)
        }, _percentage: function () {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
        }, _refreshValue: function () {
            var ax = this.options.value, aw = this._percentage();
            this.valueDiv.toggle(this.indeterminate || ax > this.min).width(aw.toFixed(0) + "%");
            this._toggleClass(this.valueDiv, "ui-progressbar-complete", null, ax === this.options.max)._toggleClass("ui-progressbar-indeterminate", null, this.indeterminate);
            if (this.indeterminate) {
                this.element.removeAttr("aria-valuenow");
                if (!this.overlayDiv) {
                    this.overlayDiv = al("<div>").appendTo(this.valueDiv);
                    this._addClass(this.overlayDiv, "ui-progressbar-overlay")
                }
            } else {
                this.element.attr({ "aria-valuemax": this.options.max, "aria-valuenow": ax });
                if (this.overlayDiv) {
                    this.overlayDiv.remove();
                    this.overlayDiv = null
                }
            } if (this.oldValue !== ax) {
                this.oldValue = ax;
                this._trigger("change")
            } if (ax === this.options.max) {
                this._trigger("complete")
            }
        }
    });
    /*!
     * jQuery UI Selectable 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var s = al.widget("ui.selectable", al.ui.mouse, {
        version: "1.12.1", options: { appendTo: "body", autoRefresh: true, distance: 0, filter: "*", tolerance: "touch", selected: null, selecting: null, start: null, stop: null, unselected: null, unselecting: null }, _create: function () {
            var aw = this;
            this._addClass("ui-selectable");
            this.dragged = false;
            this.refresh = function () {
                aw.elementPos = al(aw.element[0]).offset();
                aw.selectees = al(aw.options.filter, aw.element[0]);
                aw._addClass(aw.selectees, "ui-selectee");
                aw.selectees.each(function () {
                    var ay = al(this), ax = ay.offset(), az = { left: ax.left - aw.elementPos.left, top: ax.top - aw.elementPos.top };
                    al.data(this, "selectable-item", { element: this, $element: ay, left: az.left, top: az.top, right: az.left + ay.outerWidth(), bottom: az.top + ay.outerHeight(), startselected: false, selected: ay.hasClass("ui-selected"), selecting: ay.hasClass("ui-selecting"), unselecting: ay.hasClass("ui-unselecting") })
                })
            };
            this.refresh();
            this._mouseInit();
            this.helper = al("<div>");
            this._addClass(this.helper, "ui-selectable-helper")
        }, _destroy: function () {
            this.selectees.removeData("selectable-item");
            this._mouseDestroy()
        }, _mouseStart: function (ay) {
            var ax = this, aw = this.options;
            this.opos = [ay.pageX, ay.pageY];
            this.elementPos = al(this.element[0]).offset();
            if (this.options.disabled) {
                return
            } this.selectees = al(aw.filter, this.element[0]);
            this._trigger("start", ay);
            al(aw.appendTo).append(this.helper);
            this.helper.css({ left: ay.pageX, top: ay.pageY, width: 0, height: 0 });
            if (aw.autoRefresh) {
                this.refresh()
            } this.selectees.filter(".ui-selected").each(function () {
                var az = al.data(this, "selectable-item");
                az.startselected = true;
                if (!ay.metaKey && !ay.ctrlKey) {
                    ax._removeClass(az.$element, "ui-selected");
                    az.selected = false;
                    ax._addClass(az.$element, "ui-unselecting");
                    az.unselecting = true;
                    ax._trigger("unselecting", ay, { unselecting: az.element })
                }
            });
            al(ay.target).parents().addBack().each(function () {
                var az, aA = al.data(this, "selectable-item");
                if (aA) {
                    az = (!ay.metaKey && !ay.ctrlKey) || !aA.$element.hasClass("ui-selected");
                    ax._removeClass(aA.$element, az ? "ui-unselecting" : "ui-selected")._addClass(aA.$element, az ? "ui-selecting" : "ui-unselecting");
                    aA.unselecting = !az;
                    aA.selecting = az;
                    aA.selected = az;
                    if (az) {
                        ax._trigger("selecting", ay, { selecting: aA.element })
                    } else {
                        ax._trigger("unselecting", ay, { unselecting: aA.element })
                    } return false
                }
            })
        }, _mouseDrag: function (aD) {
            this.dragged = true;
            if (this.options.disabled) {
                return
            } var aA, aC = this, ay = this.options, ax = this.opos[0], aB = this.opos[1], aw = aD.pageX, az = aD.pageY;
            if (ax > aw) {
                aA = aw;
                aw = ax;
                ax = aA
            } if (aB > az) {
                aA = az;
                az = aB;
                aB = aA
            } this.helper.css({ left: ax, top: aB, width: aw - ax, height: az - aB });
            this.selectees.each(function () {
                var aE = al.data(this, "selectable-item"), aF = false, aG = {};
                if (!aE || aE.element === aC.element[0]) {
                    return
                } aG.left = aE.left + aC.elementPos.left;
                aG.right = aE.right + aC.elementPos.left;
                aG.top = aE.top + aC.elementPos.top;
                aG.bottom = aE.bottom + aC.elementPos.top;
                if (ay.tolerance === "touch") {
                    aF = (!(aG.left > aw || aG.right < ax || aG.top > az || aG.bottom < aB))
                } else {
                    if (ay.tolerance === "fit") {
                        aF = (aG.left > ax && aG.right < aw && aG.top > aB && aG.bottom < az)
                    }
                } if (aF) {
                    if (aE.selected) {
                        aC._removeClass(aE.$element, "ui-selected");
                        aE.selected = false
                    } if (aE.unselecting) {
                        aC._removeClass(aE.$element, "ui-unselecting");
                        aE.unselecting = false
                    } if (!aE.selecting) {
                        aC._addClass(aE.$element, "ui-selecting");
                        aE.selecting = true;
                        aC._trigger("selecting", aD, { selecting: aE.element })
                    }
                } else {
                    if (aE.selecting) {
                        if ((aD.metaKey || aD.ctrlKey) && aE.startselected) {
                            aC._removeClass(aE.$element, "ui-selecting");
                            aE.selecting = false;
                            aC._addClass(aE.$element, "ui-selected");
                            aE.selected = true
                        } else {
                            aC._removeClass(aE.$element, "ui-selecting");
                            aE.selecting = false;
                            if (aE.startselected) {
                                aC._addClass(aE.$element, "ui-unselecting");
                                aE.unselecting = true
                            } aC._trigger("unselecting", aD, { unselecting: aE.element })
                        }
                    } if (aE.selected) {
                        if (!aD.metaKey && !aD.ctrlKey && !aE.startselected) {
                            aC._removeClass(aE.$element, "ui-selected");
                            aE.selected = false;
                            aC._addClass(aE.$element, "ui-unselecting");
                            aE.unselecting = true;
                            aC._trigger("unselecting", aD, { unselecting: aE.element })
                        }
                    }
                }
            });
            return false
        }, _mouseStop: function (ax) {
            var aw = this;
            this.dragged = false;
            al(".ui-unselecting", this.element[0]).each(function () {
                var ay = al.data(this, "selectable-item");
                aw._removeClass(ay.$element, "ui-unselecting");
                ay.unselecting = false;
                ay.startselected = false;
                aw._trigger("unselected", ax, { unselected: ay.element })
            });
            al(".ui-selecting", this.element[0]).each(function () {
                var ay = al.data(this, "selectable-item");
                aw._removeClass(ay.$element, "ui-selecting")._addClass(ay.$element, "ui-selected");
                ay.selecting = false;
                ay.selected = true;
                ay.startselected = true;
                aw._trigger("selected", ax, { selected: ay.element })
            });
            this._trigger("stop", ax);
            this.helper.remove();
            return false
        }
    });
    /*!
     * jQuery UI Selectmenu 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var e = al.widget("ui.selectmenu", [al.ui.formResetMixin, {
        version: "1.12.1", defaultElement: "<select>", options: { appendTo: null, classes: { "ui-selectmenu-button-open": "ui-corner-top", "ui-selectmenu-button-closed": "ui-corner-all" }, disabled: null, icons: { button: "ui-icon-triangle-1-s" }, position: { my: "left top", at: "left bottom", collision: "none" }, width: false, change: null, close: null, focus: null, open: null, select: null }, _create: function () {
            var aw = this.element.uniqueId().attr("id");
            this.ids = { element: aw, button: aw + "-button", menu: aw + "-menu" };
            this._drawButton();
            this._drawMenu();
            this._bindFormResetHandler();
            this._rendered = false;
            this.menuItems = al()
        }, _drawButton: function () {
            var aw, ay = this, ax = this._parseOption(this.element.find("option:selected"), this.element[0].selectedIndex);
            this.labels = this.element.labels().attr("for", this.ids.button);
            this._on(this.labels, {
                click: function (az) {
                    this.button.focus();
                    az.preventDefault()
                }
            });
            this.element.hide();
            this.button = al("<span>", { tabindex: this.options.disabled ? -1 : 0, id: this.ids.button, role: "combobox", "aria-expanded": "false", "aria-autocomplete": "list", "aria-owns": this.ids.menu, "aria-haspopup": "true", title: this.element.attr("title") }).insertAfter(this.element);
            this._addClass(this.button, "ui-selectmenu-button ui-selectmenu-button-closed", "ui-button ui-widget");
            aw = al("<span>").appendTo(this.button);
            this._addClass(aw, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button);
            this.buttonItem = this._renderButtonItem(ax).appendTo(this.button);
            if (this.options.width !== false) {
                this._resizeButton()
            } this._on(this.button, this._buttonEvents);
            this.button.one("focusin", function () {
                if (!ay._rendered) {
                    ay._refreshMenu()
                }
            })
        }, _drawMenu: function () {
            var aw = this;
            this.menu = al("<ul>", { "aria-hidden": "true", "aria-labelledby": this.ids.button, id: this.ids.menu });
            this.menuWrap = al("<div>").append(this.menu);
            this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front");
            this.menuWrap.appendTo(this._appendTo());
            this.menuInstance = this.menu.menu({
                classes: { "ui-menu": "ui-corner-bottom" }, role: "listbox", select: function (ax, ay) {
                    ax.preventDefault();
                    aw._setSelection();
                    aw._select(ay.item.data("ui-selectmenu-item"), ax)
                }, focus: function (ay, az) {
                    var ax = az.item.data("ui-selectmenu-item");
                    if (aw.focusIndex != null && ax.index !== aw.focusIndex) {
                        aw._trigger("focus", ay, { item: ax });
                        if (!aw.isOpen) {
                            aw._select(ax, ay)
                        }
                    } aw.focusIndex = ax.index;
                    aw.button.attr("aria-activedescendant", aw.menuItems.eq(ax.index).attr("id"))
                }
            }).menu("instance");
            this.menuInstance._off(this.menu, "mouseleave");
            this.menuInstance._closeOnDocumentClick = function () {
                return false
            };
            this.menuInstance._isDivider = function () {
                return false
            }
        }, refresh: function () {
            this._refreshMenu();
            this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item") || {}));
            if (this.options.width === null) {
                this._resizeButton()
            }
        }, _refreshMenu: function () {
            var ax, aw = this.element.find("option");
            this.menu.empty();
            this._parseOptions(aw);
            this._renderMenu(this.menu, this.items);
            this.menuInstance.refresh();
            this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper");
            this._rendered = true;
            if (!aw.length) {
                return
            } ax = this._getSelectedItem();
            this.menuInstance.focus(null, ax);
            this._setAria(ax.data("ui-selectmenu-item"));
            this._setOption("disabled", this.element.prop("disabled"))
        }, open: function (aw) {
            if (this.options.disabled) {
                return
            } if (!this._rendered) {
                this._refreshMenu()
            } else {
                this._removeClass(this.menu.find(".ui-state-active"), null, "ui-state-active");
                this.menuInstance.focus(null, this._getSelectedItem())
            } if (!this.menuItems.length) {
                return
            } this.isOpen = true;
            this._toggleAttr();
            this._resizeMenu();
            this._position();
            this._on(this.document, this._documentClick);
            this._trigger("open", aw)
        }, _position: function () {
            this.menuWrap.position(al.extend({ of: this.button }, this.options.position))
        }, close: function (aw) {
            if (!this.isOpen) {
                return
            } this.isOpen = false;
            this._toggleAttr();
            this.range = null;
            this._off(this.document);
            this._trigger("close", aw)
        }, widget: function () {
            return this.button
        }, menuWidget: function () {
            return this.menu
        }, _renderButtonItem: function (ax) {
            var aw = al("<span>");
            this._setText(aw, ax.label);
            this._addClass(aw, "ui-selectmenu-text");
            return aw
        }, _renderMenu: function (ay, ax) {
            var az = this, aw = "";
            al.each(ax, function (aB, aC) {
                var aA;
                if (aC.optgroup !== aw) {
                    aA = al("<li>", { text: aC.optgroup });
                    az._addClass(aA, "ui-selectmenu-optgroup", "ui-menu-divider" + (aC.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : ""));
                    aA.appendTo(ay);
                    aw = aC.optgroup
                } az._renderItemData(ay, aC)
            })
        }, _renderItemData: function (aw, ax) {
            return this._renderItem(aw, ax).data("ui-selectmenu-item", ax)
        }, _renderItem: function (ax, ay) {
            var aw = al("<li>"), az = al("<div>", { title: ay.element.attr("title") });
            if (ay.disabled) {
                this._addClass(aw, null, "ui-state-disabled")
            } this._setText(az, ay.label);
            return aw.append(az).appendTo(ax)
        }, _setText: function (aw, ax) {
            if (ax) {
                aw.text(ax)
            } else {
                aw.html("&#160;")
            }
        }, _move: function (aA, az) {
            var ay, ax, aw = ".ui-menu-item";
            if (this.isOpen) {
                ay = this.menuItems.eq(this.focusIndex).parent("li")
            } else {
                ay = this.menuItems.eq(this.element[0].selectedIndex).parent("li");
                aw += ":not(.ui-state-disabled)"
            } if (aA === "first" || aA === "last") {
                ax = ay[aA === "first" ? "prevAll" : "nextAll"](aw).eq(-1)
            } else {
                ax = ay[aA + "All"](aw).eq(0)
            } if (ax.length) {
                this.menuInstance.focus(az, ax)
            }
        }, _getSelectedItem: function () {
            return this.menuItems.eq(this.element[0].selectedIndex).parent("li")
        }, _toggle: function (aw) {
            this[this.isOpen ? "close" : "open"](aw)
        }, _setSelection: function () {
            var aw;
            if (!this.range) {
                return
            } if (window.getSelection) {
                aw = window.getSelection();
                aw.removeAllRanges();
                aw.addRange(this.range)
            } else {
                this.range.select()
            } this.button.focus()
        }, _documentClick: {
            mousedown: function (aw) {
                if (!this.isOpen) {
                    return
                } if (!al(aw.target).closest(".ui-selectmenu-menu, #" + al.ui.escapeSelector(this.ids.button)).length) {
                    this.close(aw)
                }
            }
        }, _buttonEvents: {
            mousedown: function () {
                var aw;
                if (window.getSelection) {
                    aw = window.getSelection();
                    if (aw.rangeCount) {
                        this.range = aw.getRangeAt(0)
                    }
                } else {
                    this.range = document.selection.createRange()
                }
            }, click: function (aw) {
                this._setSelection();
                this._toggle(aw)
            }, keydown: function (ax) {
                var aw = true;
                switch (ax.keyCode) {
                    case al.ui.keyCode.TAB: case al.ui.keyCode.ESCAPE: this.close(ax);
                        aw = false;
                        break;
                    case al.ui.keyCode.ENTER: if (this.isOpen) {
                        this._selectFocusedItem(ax)
                    } break;
                    case al.ui.keyCode.UP: if (ax.altKey) {
                        this._toggle(ax)
                    } else {
                        this._move("prev", ax)
                    } break;
                    case al.ui.keyCode.DOWN: if (ax.altKey) {
                        this._toggle(ax)
                    } else {
                        this._move("next", ax)
                    } break;
                    case al.ui.keyCode.SPACE: if (this.isOpen) {
                        this._selectFocusedItem(ax)
                    } else {
                        this._toggle(ax)
                    } break;
                    case al.ui.keyCode.LEFT: this._move("prev", ax);
                        break;
                    case al.ui.keyCode.RIGHT: this._move("next", ax);
                        break;
                    case al.ui.keyCode.HOME: case al.ui.keyCode.PAGE_UP: this._move("first", ax);
                        break;
                    case al.ui.keyCode.END: case al.ui.keyCode.PAGE_DOWN: this._move("last", ax);
                        break;
                    default: this.menu.trigger(ax);
                        aw = false
                }if (aw) {
                    ax.preventDefault()
                }
            }
        }, _selectFocusedItem: function (ax) {
            var aw = this.menuItems.eq(this.focusIndex).parent("li");
            if (!aw.hasClass("ui-state-disabled")) {
                this._select(aw.data("ui-selectmenu-item"), ax)
            }
        }, _select: function (ax, aw) {
            var ay = this.element[0].selectedIndex;
            this.element[0].selectedIndex = ax.index;
            this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(ax));
            this._setAria(ax);
            this._trigger("select", aw, { item: ax });
            if (ax.index !== ay) {
                this._trigger("change", aw, { item: ax })
            } this.close(aw)
        }, _setAria: function (aw) {
            var ax = this.menuItems.eq(aw.index).attr("id");
            this.button.attr({ "aria-labelledby": ax, "aria-activedescendant": ax });
            this.menu.attr("aria-activedescendant", ax)
        }, _setOption: function (aw, ay) {
            if (aw === "icons") {
                var ax = this.button.find("span.ui-icon");
                this._removeClass(ax, null, this.options.icons.button)._addClass(ax, null, ay.button)
            } this._super(aw, ay);
            if (aw === "appendTo") {
                this.menuWrap.appendTo(this._appendTo())
            } if (aw === "width") {
                this._resizeButton()
            }
        }, _setOptionDisabled: function (aw) {
            this._super(aw);
            this.menuInstance.option("disabled", aw);
            this.button.attr("aria-disabled", aw);
            this._toggleClass(this.button, null, "ui-state-disabled", aw);
            this.element.prop("disabled", aw);
            if (aw) {
                this.button.attr("tabindex", -1);
                this.close()
            } else {
                this.button.attr("tabindex", 0)
            }
        }, _appendTo: function () {
            var aw = this.options.appendTo;
            if (aw) {
                aw = aw.jquery || aw.nodeType ? al(aw) : this.document.find(aw).eq(0)
            } if (!aw || !aw[0]) {
                aw = this.element.closest(".ui-front, dialog")
            } if (!aw.length) {
                aw = this.document[0].body
            } return aw
        }, _toggleAttr: function () {
            this.button.attr("aria-expanded", this.isOpen);
            this._removeClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open"))._addClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed"))._toggleClass(this.menuWrap, "ui-selectmenu-open", null, this.isOpen);
            this.menu.attr("aria-hidden", !this.isOpen)
        }, _resizeButton: function () {
            var aw = this.options.width;
            if (aw === false) {
                this.button.css("width", "");
                return
            } if (aw === null) {
                aw = this.element.show().outerWidth();
                this.element.hide()
            } this.button.outerWidth(aw)
        }, _resizeMenu: function () {
            this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1))
        }, _getCreateOptions: function () {
            var aw = this._super();
            aw.disabled = this.element.prop("disabled");
            return aw
        }, _parseOptions: function (aw) {
            var ax = this, ay = [];
            aw.each(function (az, aA) {
                ay.push(ax._parseOption(al(aA), az))
            });
            this.items = ay
        }, _parseOption: function (ay, ax) {
            var aw = ay.parent("optgroup");
            return { element: ay, index: ax, value: ay.val(), label: ay.text(), optgroup: aw.attr("label") || "", disabled: aw.prop("disabled") || ay.prop("disabled") }
        }, _destroy: function () {
            this._unbindFormResetHandler();
            this.menuWrap.remove();
            this.button.remove();
            this.element.show();
            this.element.removeUniqueId();
            this.labels.attr("for", this.ids.element)
        }
    }]);
    /*!
     * jQuery UI Slider 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var R = al.widget("ui.slider", al.ui.mouse, {
        version: "1.12.1", widgetEventPrefix: "slide", options: { animate: false, classes: { "ui-slider": "ui-corner-all", "ui-slider-handle": "ui-corner-all", "ui-slider-range": "ui-corner-all ui-widget-header" }, distance: 0, max: 100, min: 0, orientation: "horizontal", range: false, step: 1, value: 0, values: null, change: null, slide: null, start: null, stop: null }, numPages: 5, _create: function () {
            this._keySliding = false;
            this._mouseSliding = false;
            this._animateOff = true;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this._calculateNewMax();
            this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content");
            this._refresh();
            this._animateOff = false
        }, _refresh: function () {
            this._createRange();
            this._createHandles();
            this._setupEvents();
            this._refreshValue()
        }, _createHandles: function () {
            var az, aw, ax = this.options, aB = this.element.find(".ui-slider-handle"), aA = "<span tabindex='0'></span>", ay = [];
            aw = (ax.values && ax.values.length) || 1;
            if (aB.length > aw) {
                aB.slice(aw).remove();
                aB = aB.slice(0, aw)
            } for (az = aB.length;
                az < aw;
                az++) {
                    ay.push(aA)
            } this.handles = aB.add(al(ay.join("")).appendTo(this.element));
            this._addClass(this.handles, "ui-slider-handle", "ui-state-default");
            this.handle = this.handles.eq(0);
            this.handles.each(function (aC) {
                al(this).data("ui-slider-handle-index", aC).attr("tabIndex", 0)
            })
        }, _createRange: function () {
            var aw = this.options;
            if (aw.range) {
                if (aw.range === true) {
                    if (!aw.values) {
                        aw.values = [this._valueMin(), this._valueMin()]
                    } else {
                        if (aw.values.length && aw.values.length !== 2) {
                            aw.values = [aw.values[0], aw.values[0]]
                        } else {
                            if (al.isArray(aw.values)) {
                                aw.values = aw.values.slice(0)
                            }
                        }
                    }
                } if (!this.range || !this.range.length) {
                    this.range = al("<div>").appendTo(this.element);
                    this._addClass(this.range, "ui-slider-range")
                } else {
                    this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max");
                    this.range.css({ left: "", bottom: "" })
                } if (aw.range === "min" || aw.range === "max") {
                    this._addClass(this.range, "ui-slider-range-" + aw.range)
                }
            } else {
                if (this.range) {
                    this.range.remove()
                } this.range = null
            }
        }, _setupEvents: function () {
            this._off(this.handles);
            this._on(this.handles, this._handleEvents);
            this._hoverable(this.handles);
            this._focusable(this.handles)
        }, _destroy: function () {
            this.handles.remove();
            if (this.range) {
                this.range.remove()
            } this._mouseDestroy()
        }, _mouseCapture: function (ay) {
            var aC, aF, ax, aA, aE, aG, aB, aw, aD = this, az = this.options;
            if (az.disabled) {
                return false
            } this.elementSize = { width: this.element.outerWidth(), height: this.element.outerHeight() };
            this.elementOffset = this.element.offset();
            aC = { x: ay.pageX, y: ay.pageY };
            aF = this._normValueFromMouse(aC);
            ax = this._valueMax() - this._valueMin() + 1;
            this.handles.each(function (aH) {
                var aI = Math.abs(aF - aD.values(aH));
                if ((ax > aI) || (ax === aI && (aH === aD._lastChangedValue || aD.values(aH) === az.min))) {
                    ax = aI;
                    aA = al(this);
                    aE = aH
                }
            });
            aG = this._start(ay, aE);
            if (aG === false) {
                return false
            } this._mouseSliding = true;
            this._handleIndex = aE;
            this._addClass(aA, null, "ui-state-active");
            aA.trigger("focus");
            aB = aA.offset();
            aw = !al(ay.target).parents().addBack().is(".ui-slider-handle");
            this._clickOffset = aw ? { left: 0, top: 0 } : { left: ay.pageX - aB.left - (aA.width() / 2), top: ay.pageY - aB.top - (aA.height() / 2) - (parseInt(aA.css("borderTopWidth"), 10) || 0) - (parseInt(aA.css("borderBottomWidth"), 10) || 0) + (parseInt(aA.css("marginTop"), 10) || 0) };
            if (!this.handles.hasClass("ui-state-hover")) {
                this._slide(ay, aE, aF)
            } this._animateOff = true;
            return true
        }, _mouseStart: function () {
            return true
        }, _mouseDrag: function (ay) {
            var aw = { x: ay.pageX, y: ay.pageY }, ax = this._normValueFromMouse(aw);
            this._slide(ay, this._handleIndex, ax);
            return false
        }, _mouseStop: function (aw) {
            this._removeClass(this.handles, null, "ui-state-active");
            this._mouseSliding = false;
            this._stop(aw, this._handleIndex);
            this._change(aw, this._handleIndex);
            this._handleIndex = null;
            this._clickOffset = null;
            this._animateOff = false;
            return false
        }, _detectOrientation: function () {
            this.orientation = (this.options.orientation === "vertical") ? "vertical" : "horizontal"
        }, _normValueFromMouse: function (ax) {
            var aw, aA, az, ay, aB;
            if (this.orientation === "horizontal") {
                aw = this.elementSize.width;
                aA = ax.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
            } else {
                aw = this.elementSize.height;
                aA = ax.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
            } az = (aA / aw);
            if (az > 1) {
                az = 1
            } if (az < 0) {
                az = 0
            } if (this.orientation === "vertical") {
                az = 1 - az
            } ay = this._valueMax() - this._valueMin();
            aB = this._valueMin() + az * ay;
            return this._trimAlignValue(aB)
        }, _uiHash: function (ay, az, aw) {
            var ax = { handle: this.handles[ay], handleIndex: ay, value: az !== undefined ? az : this.value() };
            if (this._hasMultipleValues()) {
                ax.value = az !== undefined ? az : this.values(ay);
                ax.values = aw || this.values()
            } return ax
        }, _hasMultipleValues: function () {
            return this.options.values && this.options.values.length
        }, _start: function (ax, aw) {
            return this._trigger("start", ax, this._uiHash(aw))
        }, _slide: function (aB, az, ay) {
            var aC, aw, aA = this.value(), ax = this.values();
            if (this._hasMultipleValues()) {
                aw = this.values(az ? 0 : 1);
                aA = this.values(az);
                if (this.options.values.length === 2 && this.options.range === true) {
                    ay = az === 0 ? Math.min(aw, ay) : Math.max(aw, ay)
                } ax[az] = ay
            } if (ay === aA) {
                return
            } aC = this._trigger("slide", aB, this._uiHash(az, ay, ax));
            if (aC === false) {
                return
            } if (this._hasMultipleValues()) {
                this.values(az, ay)
            } else {
                this.value(ay)
            }
        }, _stop: function (ax, aw) {
            this._trigger("stop", ax, this._uiHash(aw))
        }, _change: function (ax, aw) {
            if (!this._keySliding && !this._mouseSliding) {
                this._lastChangedValue = aw;
                this._trigger("change", ax, this._uiHash(aw))
            }
        }, value: function (aw) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(aw);
                this._refreshValue();
                this._change(null, 0);
                return
            } return this._value()
        }, values: function (ax, aA) {
            var az, aw, ay;
            if (arguments.length > 1) {
                this.options.values[ax] = this._trimAlignValue(aA);
                this._refreshValue();
                this._change(null, ax);
                return
            } if (arguments.length) {
                if (al.isArray(arguments[0])) {
                    az = this.options.values;
                    aw = arguments[0];
                    for (ay = 0;
                        ay < az.length;
                        ay += 1) {
                            az[ay] = this._trimAlignValue(aw[ay]);
                        this._change(null, ay)
                    } this._refreshValue()
                } else {
                    if (this._hasMultipleValues()) {
                        return this._values(ax)
                    } else {
                        return this.value()
                    }
                }
            } else {
                return this._values()
            }
        }, _setOption: function (ax, ay) {
            var aw, az = 0;
            if (ax === "range" && this.options.range === true) {
                if (ay === "min") {
                    this.options.value = this._values(0);
                    this.options.values = null
                } else {
                    if (ay === "max") {
                        this.options.value = this._values(this.options.values.length - 1);
                        this.options.values = null
                    }
                }
            } if (al.isArray(this.options.values)) {
                az = this.options.values.length
            } this._super(ax, ay);
            switch (ax) {
                case "orientation": this._detectOrientation();
                    this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation);
                    this._refreshValue();
                    if (this.options.range) {
                        this._refreshRange(ay)
                    } this.handles.css(ay === "horizontal" ? "bottom" : "left", "");
                    break;
                case "value": this._animateOff = true;
                    this._refreshValue();
                    this._change(null, 0);
                    this._animateOff = false;
                    break;
                case "values": this._animateOff = true;
                    this._refreshValue();
                    for (aw = az - 1;
                        aw >= 0;
                        aw--) {
                            this._change(null, aw)
                    } this._animateOff = false;
                    break;
                case "step": case "min": case "max": this._animateOff = true;
                    this._calculateNewMax();
                    this._refreshValue();
                    this._animateOff = false;
                    break;
                case "range": this._animateOff = true;
                    this._refresh();
                    this._animateOff = false;
                    break
            }
        }, _setOptionDisabled: function (aw) {
            this._super(aw);
            this._toggleClass(null, "ui-state-disabled", !!aw)
        }, _value: function () {
            var aw = this.options.value;
            aw = this._trimAlignValue(aw);
            return aw
        }, _values: function (aw) {
            var az, ay, ax;
            if (arguments.length) {
                az = this.options.values[aw];
                az = this._trimAlignValue(az);
                return az
            } else {
                if (this._hasMultipleValues()) {
                    ay = this.options.values.slice();
                    for (ax = 0;
                        ax < ay.length;
                        ax += 1) {
                            ay[ax] = this._trimAlignValue(ay[ax])
                    } return ay
                } else {
                    return []
                }
            }
        }, _trimAlignValue: function (az) {
            if (az <= this._valueMin()) {
                return this._valueMin()
            } if (az >= this._valueMax()) {
                return this._valueMax()
            } var aw = (this.options.step > 0) ? this.options.step : 1, ay = (az - this._valueMin()) % aw, ax = az - ay;
            if (Math.abs(ay) * 2 >= aw) {
                ax += (ay > 0) ? aw : (-aw)
            } return parseFloat(ax.toFixed(5))
        }, _calculateNewMax: function () {
            var aw = this.options.max, ax = this._valueMin(), ay = this.options.step, az = Math.round((aw - ax) / ay) * ay;
            aw = az + ax;
            if (aw > this.options.max) {
                aw -= ay
            } this.max = parseFloat(aw.toFixed(this._precision()))
        }, _precision: function () {
            var aw = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                aw = Math.max(aw, this._precisionOf(this.options.min))
            } return aw
        }, _precisionOf: function (ax) {
            var ay = ax.toString(), aw = ay.indexOf(".");
            return aw === -1 ? 0 : ay.length - aw - 1
        }, _valueMin: function () {
            return this.options.min
        }, _valueMax: function () {
            return this.max
        }, _refreshRange: function (aw) {
            if (aw === "vertical") {
                this.range.css({ width: "", left: "" })
            } if (aw === "horizontal") {
                this.range.css({ height: "", bottom: "" })
            }
        }, _refreshValue: function () {
            var aB, aA, aE, aC, aF, az = this.options.range, ay = this.options, aD = this, ax = (!this._animateOff) ? ay.animate : false, aw = {};
            if (this._hasMultipleValues()) {
                this.handles.each(function (aG) {
                    aA = (aD.values(aG) - aD._valueMin()) / (aD._valueMax() - aD._valueMin()) * 100;
                    aw[aD.orientation === "horizontal" ? "left" : "bottom"] = aA + "%";
                    al(this).stop(1, 1)[ax ? "animate" : "css"](aw, ay.animate);
                    if (aD.options.range === true) {
                        if (aD.orientation === "horizontal") {
                            if (aG === 0) {
                                aD.range.stop(1, 1)[ax ? "animate" : "css"]({ left: aA + "%" }, ay.animate)
                            } if (aG === 1) {
                                aD.range[ax ? "animate" : "css"]({ width: (aA - aB) + "%" }, { queue: false, duration: ay.animate })
                            }
                        } else {
                            if (aG === 0) {
                                aD.range.stop(1, 1)[ax ? "animate" : "css"]({ bottom: (aA) + "%" }, ay.animate)
                            } if (aG === 1) {
                                aD.range[ax ? "animate" : "css"]({ height: (aA - aB) + "%" }, { queue: false, duration: ay.animate })
                            }
                        }
                    } aB = aA
                })
            } else {
                aE = this.value();
                aC = this._valueMin();
                aF = this._valueMax();
                aA = (aF !== aC) ? (aE - aC) / (aF - aC) * 100 : 0;
                aw[this.orientation === "horizontal" ? "left" : "bottom"] = aA + "%";
                this.handle.stop(1, 1)[ax ? "animate" : "css"](aw, ay.animate);
                if (az === "min" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[ax ? "animate" : "css"]({ width: aA + "%" }, ay.animate)
                } if (az === "max" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[ax ? "animate" : "css"]({ width: (100 - aA) + "%" }, ay.animate)
                } if (az === "min" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[ax ? "animate" : "css"]({ height: aA + "%" }, ay.animate)
                } if (az === "max" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[ax ? "animate" : "css"]({ height: (100 - aA) + "%" }, ay.animate)
                }
            }
        }, _handleEvents: {
            keydown: function (aA) {
                var aB, ay, ax, az, aw = al(aA.target).data("ui-slider-handle-index");
                switch (aA.keyCode) {
                    case al.ui.keyCode.HOME: case al.ui.keyCode.END: case al.ui.keyCode.PAGE_UP: case al.ui.keyCode.PAGE_DOWN: case al.ui.keyCode.UP: case al.ui.keyCode.RIGHT: case al.ui.keyCode.DOWN: case al.ui.keyCode.LEFT: aA.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = true;
                            this._addClass(al(aA.target), null, "ui-state-active");
                            aB = this._start(aA, aw);
                            if (aB === false) {
                                return
                            }
                        } break
                }az = this.options.step;
                if (this._hasMultipleValues()) {
                    ay = ax = this.values(aw)
                } else {
                    ay = ax = this.value()
                } switch (aA.keyCode) {
                    case al.ui.keyCode.HOME: ax = this._valueMin();
                        break;
                    case al.ui.keyCode.END: ax = this._valueMax();
                        break;
                    case al.ui.keyCode.PAGE_UP: ax = this._trimAlignValue(ay + ((this._valueMax() - this._valueMin()) / this.numPages));
                        break;
                    case al.ui.keyCode.PAGE_DOWN: ax = this._trimAlignValue(ay - ((this._valueMax() - this._valueMin()) / this.numPages));
                        break;
                    case al.ui.keyCode.UP: case al.ui.keyCode.RIGHT: if (ay === this._valueMax()) {
                        return
                    } ax = this._trimAlignValue(ay + az);
                        break;
                    case al.ui.keyCode.DOWN: case al.ui.keyCode.LEFT: if (ay === this._valueMin()) {
                        return
                    } ax = this._trimAlignValue(ay - az);
                        break
                }this._slide(aA, aw, ax)
            }, keyup: function (ax) {
                var aw = al(ax.target).data("ui-slider-handle-index");
                if (this._keySliding) {
                    this._keySliding = false;
                    this._stop(ax, aw);
                    this._change(ax, aw);
                    this._removeClass(al(ax.target), null, "ui-state-active")
                }
            }
        }
    });
    /*!
     * jQuery UI Sortable 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    var U = al.widget("ui.sortable", al.ui.mouse, {
        version: "1.12.1", widgetEventPrefix: "sort", ready: false, options: { appendTo: "parent", axis: false, connectWith: false, containment: false, cursor: "auto", cursorAt: false, dropOnEmpty: true, forcePlaceholderSize: false, forceHelperSize: false, grid: false, handle: false, helper: "original", items: "> *", opacity: false, placeholder: false, revert: false, scroll: true, scrollSensitivity: 20, scrollSpeed: 20, scope: "default", tolerance: "intersect", zIndex: 1000, activate: null, beforeStop: null, change: null, deactivate: null, out: null, over: null, receive: null, remove: null, sort: null, start: null, stop: null, update: null }, _isOverAxis: function (ax, aw, ay) {
            return (ax >= aw) && (ax < (aw + ay))
        }, _isFloating: function (aw) {
            return (/left|right/).test(aw.css("float")) || (/inline|table-cell/).test(aw.css("display"))
        }, _create: function () {
            this.containerCache = {};
            this._addClass("ui-sortable");
            this.refresh();
            this.offset = this.element.offset();
            this._mouseInit();
            this._setHandleClassName();
            this.ready = true
        }, _setOption: function (aw, ax) {
            this._super(aw, ax);
            if (aw === "handle") {
                this._setHandleClassName()
            }
        }, _setHandleClassName: function () {
            var aw = this;
            this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle");
            al.each(this.items, function () {
                aw._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, "ui-sortable-handle")
            })
        }, _destroy: function () {
            this._mouseDestroy();
            for (var aw = this.items.length - 1;
                aw >= 0;
                aw--) {
                    this.items[aw].item.removeData(this.widgetName + "-item")
            } return this
        }, _mouseCapture: function (ay, az) {
            var aw = null, aA = false, ax = this;
            if (this.reverting) {
                return false
            } if (this.options.disabled || this.options.type === "static") {
                return false
            } this._refreshItems(ay);
            al(ay.target).parents().each(function () {
                if (al.data(this, ax.widgetName + "-item") === ax) {
                    aw = al(this);
                    return false
                }
            });
            if (al.data(ay.target, ax.widgetName + "-item") === ax) {
                aw = al(ay.target)
            } if (!aw) {
                return false
            } if (this.options.handle && !az) {
                al(this.options.handle, aw).find("*").addBack().each(function () {
                    if (this === ay.target) {
                        aA = true
                    }
                });
                if (!aA) {
                    return false
                }
            } this.currentItem = aw;
            this._removeCurrentsFromItems();
            return true
        }, _mouseStart: function (az, aA, ax) {
            var ay, aw, aB = this.options;
            this.currentContainer = this;
            this.refreshPositions();
            this.helper = this._createHelper(az);
            this._cacheHelperProportions();
            this._cacheMargins();
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.currentItem.offset();
            this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left };
            al.extend(this.offset, { click: { left: az.pageX - this.offset.left, top: az.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() });
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");
            this.originalPosition = this._generatePosition(az);
            this.originalPageX = az.pageX;
            this.originalPageY = az.pageY;
            (aB.cursorAt && this._adjustOffsetFromHelper(aB.cursorAt));
            this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] };
            if (this.helper[0] !== this.currentItem[0]) {
                this.currentItem.hide()
            } this._createPlaceholder();
            if (aB.containment) {
                this._setContainment()
            } if (aB.cursor && aB.cursor !== "auto") {
                aw = this.document.find("body");
                this.storedCursor = aw.css("cursor");
                aw.css("cursor", aB.cursor);
                this.storedStylesheet = al("<style>*{ cursor: " + aB.cursor + " !important; }</style>").appendTo(aw)
            } if (aB.opacity) {
                if (this.helper.css("opacity")) {
                    this._storedOpacity = this.helper.css("opacity")
                } this.helper.css("opacity", aB.opacity)
            } if (aB.zIndex) {
                if (this.helper.css("zIndex")) {
                    this._storedZIndex = this.helper.css("zIndex")
                } this.helper.css("zIndex", aB.zIndex)
            } if (this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== "HTML") {
                this.overflowOffset = this.scrollParent.offset()
            } this._trigger("start", az, this._uiHash());
            if (!this._preserveHelperProportions) {
                this._cacheHelperProportions()
            } if (!ax) {
                for (ay = this.containers.length - 1;
                    ay >= 0;
                    ay--) {
                        this.containers[ay]._trigger("activate", az, this._uiHash(this))
                }
            } if (al.ui.ddmanager) {
                al.ui.ddmanager.current = this
            } if (al.ui.ddmanager && !aB.dropBehaviour) {
                al.ui.ddmanager.prepareOffsets(this, az)
            } this.dragging = true;
            this._addClass(this.helper, "ui-sortable-helper");
            this._mouseDrag(az);
            return true
        }, _mouseDrag: function (aA) {
            var ay, az, ax, aC, aB = this.options, aw = false;
            this.position = this._generatePosition(aA);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.lastPositionAbs) {
                this.lastPositionAbs = this.positionAbs
            } if (this.options.scroll) {
                if (this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== "HTML") {
                    if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - aA.pageY < aB.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = aw = this.scrollParent[0].scrollTop + aB.scrollSpeed
                    } else {
                        if (aA.pageY - this.overflowOffset.top < aB.scrollSensitivity) {
                            this.scrollParent[0].scrollTop = aw = this.scrollParent[0].scrollTop - aB.scrollSpeed
                        }
                    } if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - aA.pageX < aB.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = aw = this.scrollParent[0].scrollLeft + aB.scrollSpeed
                    } else {
                        if (aA.pageX - this.overflowOffset.left < aB.scrollSensitivity) {
                            this.scrollParent[0].scrollLeft = aw = this.scrollParent[0].scrollLeft - aB.scrollSpeed
                        }
                    }
                } else {
                    if (aA.pageY - this.document.scrollTop() < aB.scrollSensitivity) {
                        aw = this.document.scrollTop(this.document.scrollTop() - aB.scrollSpeed)
                    } else {
                        if (this.window.height() - (aA.pageY - this.document.scrollTop()) < aB.scrollSensitivity) {
                            aw = this.document.scrollTop(this.document.scrollTop() + aB.scrollSpeed)
                        }
                    } if (aA.pageX - this.document.scrollLeft() < aB.scrollSensitivity) {
                        aw = this.document.scrollLeft(this.document.scrollLeft() - aB.scrollSpeed)
                    } else {
                        if (this.window.width() - (aA.pageX - this.document.scrollLeft()) < aB.scrollSensitivity) {
                            aw = this.document.scrollLeft(this.document.scrollLeft() + aB.scrollSpeed)
                        }
                    }
                } if (aw !== false && al.ui.ddmanager && !aB.dropBehaviour) {
                    al.ui.ddmanager.prepareOffsets(this, aA)
                }
            } this.positionAbs = this._convertPositionTo("absolute");
            if (!this.options.axis || this.options.axis !== "y") {
                this.helper[0].style.left = this.position.left + "px"
            } if (!this.options.axis || this.options.axis !== "x") {
                this.helper[0].style.top = this.position.top + "px"
            } for (ay = this.items.length - 1;
                ay >= 0;
                ay--) {
                    az = this.items[ay];
                ax = az.item[0];
                aC = this._intersectsWithPointer(az);
                if (!aC) {
                    continue
                } if (az.instance !== this.currentContainer) {
                    continue
                } if (ax !== this.currentItem[0] && this.placeholder[aC === 1 ? "next" : "prev"]()[0] !== ax && !al.contains(this.placeholder[0], ax) && (this.options.type === "semi-dynamic" ? !al.contains(this.element[0], ax) : true)) {
                    this.direction = aC === 1 ? "down" : "up";
                    if (this.options.tolerance === "pointer" || this._intersectsWithSides(az)) {
                        this._rearrange(aA, az)
                    } else {
                        break
                    } this._trigger("change", aA, this._uiHash());
                    break
                }
            } this._contactContainers(aA);
            if (al.ui.ddmanager) {
                al.ui.ddmanager.drag(this, aA)
            } this._trigger("sort", aA, this._uiHash());
            this.lastPositionAbs = this.positionAbs;
            return false
        }, _mouseStop: function (ay, aA) {
            if (!ay) {
                return
            } if (al.ui.ddmanager && !this.options.dropBehaviour) {
                al.ui.ddmanager.drop(this, ay)
            } if (this.options.revert) {
                var ax = this, aB = this.placeholder.offset(), aw = this.options.axis, az = {};
                if (!aw || aw === "x") {
                    az.left = aB.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)
                } if (!aw || aw === "y") {
                    az.top = aB.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)
                } this.reverting = true;
                al(this.helper).animate(az, parseInt(this.options.revert, 10) || 500, function () {
                    ax._clear(ay)
                })
            } else {
                this._clear(ay, aA)
            } return false
        }, cancel: function () {
            if (this.dragging) {
                this._mouseUp(new al.Event("mouseup", { target: null }));
                if (this.options.helper === "original") {
                    this.currentItem.css(this._storedCSS);
                    this._removeClass(this.currentItem, "ui-sortable-helper")
                } else {
                    this.currentItem.show()
                } for (var aw = this.containers.length - 1;
                    aw >= 0;
                    aw--) {
                        this.containers[aw]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[aw].containerCache.over) {
                        this.containers[aw]._trigger("out", null, this._uiHash(this));
                        this.containers[aw].containerCache.over = 0
                    }
                }
            } if (this.placeholder) {
                if (this.placeholder[0].parentNode) {
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0])
                } if (this.options.helper !== "original" && this.helper && this.helper[0].parentNode) {
                    this.helper.remove()
                } al.extend(this, { helper: null, dragging: false, reverting: false, _noFinalSort: null });
                if (this.domPosition.prev) {
                    al(this.domPosition.prev).after(this.currentItem)
                } else {
                    al(this.domPosition.parent).prepend(this.currentItem)
                }
            } return this
        }, serialize: function (ay) {
            var aw = this._getItemsAsjQuery(ay && ay.connected), ax = [];
            ay = ay || {};
            al(aw).each(function () {
                var az = (al(ay.item || this).attr(ay.attribute || "id") || "").match(ay.expression || (/(.+)[\-=_](.+)/));
                if (az) {
                    ax.push((ay.key || az[1] + "[]") + "=" + (ay.key && ay.expression ? az[1] : az[2]))
                }
            });
            if (!ax.length && ay.key) {
                ax.push(ay.key + "=")
            } return ax.join("&")
        }, toArray: function (ay) {
            var aw = this._getItemsAsjQuery(ay && ay.connected), ax = [];
            ay = ay || {};
            aw.each(function () {
                ax.push(al(ay.item || this).attr(ay.attribute || "id") || "")
            });
            return ax
        }, _intersectsWith: function (aH) {
            var ay = this.positionAbs.left, ax = ay + this.helperProportions.width, aF = this.positionAbs.top, aE = aF + this.helperProportions.height, az = aH.left, aw = az + aH.width, aI = aH.top, aD = aI + aH.height, aJ = this.offset.click.top, aC = this.offset.click.left, aB = (this.options.axis === "x") || ((aF + aJ) > aI && (aF + aJ) < aD), aG = (this.options.axis === "y") || ((ay + aC) > az && (ay + aC) < aw), aA = aB && aG;
            if (this.options.tolerance === "pointer" || this.options.forcePointerForContainers || (this.options.tolerance !== "pointer" && this.helperProportions[this.floating ? "width" : "height"] > aH[this.floating ? "width" : "height"])) {
                return aA
            } else {
                return (az < ay + (this.helperProportions.width / 2) && ax - (this.helperProportions.width / 2) < aw && aI < aF + (this.helperProportions.height / 2) && aE - (this.helperProportions.height / 2) < aD)
            }
        }, _intersectsWithPointer: function (ay) {
            var ax, aB, az = (this.options.axis === "x") || this._isOverAxis(this.positionAbs.top + this.offset.click.top, ay.top, ay.height), aw = (this.options.axis === "y") || this._isOverAxis(this.positionAbs.left + this.offset.click.left, ay.left, ay.width), aA = az && aw;
            if (!aA) {
                return false
            } ax = this._getDragVerticalDirection();
            aB = this._getDragHorizontalDirection();
            return this.floating ? ((aB === "right" || ax === "down") ? 2 : 1) : (ax && (ax === "down" ? 2 : 1))
        }, _intersectsWithSides: function (az) {
            var ax = this._isOverAxis(this.positionAbs.top + this.offset.click.top, az.top + (az.height / 2), az.height), ay = this._isOverAxis(this.positionAbs.left + this.offset.click.left, az.left + (az.width / 2), az.width), aw = this._getDragVerticalDirection(), aA = this._getDragHorizontalDirection();
            if (this.floating && aA) {
                return ((aA === "right" && ay) || (aA === "left" && !ay))
            } else {
                return aw && ((aw === "down" && ax) || (aw === "up" && !ax))
            }
        }, _getDragVerticalDirection: function () {
            var aw = this.positionAbs.top - this.lastPositionAbs.top;
            return aw !== 0 && (aw > 0 ? "down" : "up")
        }, _getDragHorizontalDirection: function () {
            var aw = this.positionAbs.left - this.lastPositionAbs.left;
            return aw !== 0 && (aw > 0 ? "right" : "left")
        }, refresh: function (aw) {
            this._refreshItems(aw);
            this._setHandleClassName();
            this.refreshPositions();
            return this
        }, _connectWith: function () {
            var aw = this.options;
            return aw.connectWith.constructor === String ? [aw.connectWith] : aw.connectWith
        }, _getItemsAsjQuery: function (aw) {
            var ay, ax, aD, aA, aB = [], az = [], aC = this._connectWith();
            if (aC && aw) {
                for (ay = aC.length - 1;
                    ay >= 0;
                    ay--) {
                        aD = al(aC[ay], this.document[0]);
                    for (ax = aD.length - 1;
                        ax >= 0;
                        ax--) {
                            aA = al.data(aD[ax], this.widgetFullName);
                        if (aA && aA !== this && !aA.options.disabled) {
                            az.push([al.isFunction(aA.options.items) ? aA.options.items.call(aA.element) : al(aA.options.items, aA.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), aA])
                        }
                    }
                }
            } az.push([al.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : al(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
            function aE() {
                aB.push(this)
            } for (ay = az.length - 1;
                ay >= 0;
                ay--) {
                    az[ay][0].each(aE)
            } return al(aB)
        }, _removeCurrentsFromItems: function () {
            var aw = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = al.grep(this.items, function (ay) {
                for (var ax = 0;
                    ax < aw.length;
                    ax++) {
                        if (aw[ax] === ay.item[0]) {
                            return false
                        }
                } return true
            })
        }, _refreshItems: function (aw) {
            this.items = [];
            this.containers = [this];
            var aA, ay, aF, aB, aE, ax, aH, aG, aC = this.items, az = [[al.isFunction(this.options.items) ? this.options.items.call(this.element[0], aw, { item: this.currentItem }) : al(this.options.items, this.element), this]], aD = this._connectWith();
            if (aD && this.ready) {
                for (aA = aD.length - 1;
                    aA >= 0;
                    aA--) {
                        aF = al(aD[aA], this.document[0]);
                    for (ay = aF.length - 1;
                        ay >= 0;
                        ay--) {
                            aB = al.data(aF[ay], this.widgetFullName);
                        if (aB && aB !== this && !aB.options.disabled) {
                            az.push([al.isFunction(aB.options.items) ? aB.options.items.call(aB.element[0], aw, { item: this.currentItem }) : al(aB.options.items, aB.element), aB]);
                            this.containers.push(aB)
                        }
                    }
                }
            } for (aA = az.length - 1;
                aA >= 0;
                aA--) {
                    aE = az[aA][1];
                ax = az[aA][0];
                for (ay = 0, aG = ax.length;
                    ay < aG;
                    ay++) {
                        aH = al(ax[ay]);
                    aH.data(this.widgetName + "-item", aE);
                    aC.push({ item: aH, instance: aE, width: 0, height: 0, left: 0, top: 0 })
                }
            }
        }, refreshPositions: function (aw) {
            this.floating = this.items.length ? this.options.axis === "x" || this._isFloating(this.items[0].item) : false;
            if (this.offsetParent && this.helper) {
                this.offset.parent = this._getParentOffset()
            } var ay, az, ax, aA;
            for (ay = this.items.length - 1;
                ay >= 0;
                ay--) {
                    az = this.items[ay];
                if (az.instance !== this.currentContainer && this.currentContainer && az.item[0] !== this.currentItem[0]) {
                    continue
                } ax = this.options.toleranceElement ? al(this.options.toleranceElement, az.item) : az.item;
                if (!aw) {
                    az.width = ax.outerWidth();
                    az.height = ax.outerHeight()
                } aA = ax.offset();
                az.left = aA.left;
                az.top = aA.top
            } if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this)
            } else {
                for (ay = this.containers.length - 1;
                    ay >= 0;
                    ay--) {
                        aA = this.containers[ay].element.offset();
                    this.containers[ay].containerCache.left = aA.left;
                    this.containers[ay].containerCache.top = aA.top;
                    this.containers[ay].containerCache.width = this.containers[ay].element.outerWidth();
                    this.containers[ay].containerCache.height = this.containers[ay].element.outerHeight()
                }
            } return this
        }, _createPlaceholder: function (ax) {
            ax = ax || this;
            var aw, ay = ax.options;
            if (!ay.placeholder || ay.placeholder.constructor === String) {
                aw = ay.placeholder;
                ay.placeholder = {
                    element: function () {
                        var aA = ax.currentItem[0].nodeName.toLowerCase(), az = al("<" + aA + ">", ax.document[0]);
                        ax._addClass(az, "ui-sortable-placeholder", aw || ax.currentItem[0].className)._removeClass(az, "ui-sortable-helper");
                        if (aA === "tbody") {
                            ax._createTrPlaceholder(ax.currentItem.find("tr").eq(0), al("<tr>", ax.document[0]).appendTo(az))
                        } else {
                            if (aA === "tr") {
                                ax._createTrPlaceholder(ax.currentItem, az)
                            } else {
                                if (aA === "img") {
                                    az.attr("src", ax.currentItem.attr("src"))
                                }
                            }
                        } if (!aw) {
                            az.css("visibility", "hidden")
                        } return az
                    }, update: function (az, aA) {
                        if (aw && !ay.forcePlaceholderSize) {
                            return
                        } if (!aA.height()) {
                            aA.height(ax.currentItem.innerHeight() - parseInt(ax.currentItem.css("paddingTop") || 0, 10) - parseInt(ax.currentItem.css("paddingBottom") || 0, 10))
                        } if (!aA.width()) {
                            aA.width(ax.currentItem.innerWidth() - parseInt(ax.currentItem.css("paddingLeft") || 0, 10) - parseInt(ax.currentItem.css("paddingRight") || 0, 10))
                        }
                    }
                }
            } ax.placeholder = al(ay.placeholder.element.call(ax.element, ax.currentItem));
            ax.currentItem.after(ax.placeholder);
            ay.placeholder.update(ax, ax.placeholder)
        }, _createTrPlaceholder: function (ax, aw) {
            var ay = this;
            ax.children().each(function () {
                al("<td>&#160;</td>", ay.document[0]).attr("colspan", al(this).attr("colspan") || 1).appendTo(aw)
            })
        }, _contactContainers: function (aw) {
            var aB, az, aF, aC, aD, aH, aI, aA, aE, ay, ax = null, aG = null;
            for (aB = this.containers.length - 1;
                aB >= 0;
                aB--) {
                    if (al.contains(this.currentItem[0], this.containers[aB].element[0])) {
                        continue
                    } if (this._intersectsWith(this.containers[aB].containerCache)) {
                        if (ax && al.contains(this.containers[aB].element[0], ax.element[0])) {
                            continue
                        } ax = this.containers[aB];
                        aG = aB
                    } else {
                        if (this.containers[aB].containerCache.over) {
                            this.containers[aB]._trigger("out", aw, this._uiHash(this));
                            this.containers[aB].containerCache.over = 0
                        }
                }
            } if (!ax) {
                return
            } if (this.containers.length === 1) {
                if (!this.containers[aG].containerCache.over) {
                    this.containers[aG]._trigger("over", aw, this._uiHash(this));
                    this.containers[aG].containerCache.over = 1
                }
            } else {
                aF = 10000;
                aC = null;
                aE = ax.floating || this._isFloating(this.currentItem);
                aD = aE ? "left" : "top";
                aH = aE ? "width" : "height";
                ay = aE ? "pageX" : "pageY";
                for (az = this.items.length - 1;
                    az >= 0;
                    az--) {
                        if (!al.contains(this.containers[aG].element[0], this.items[az].item[0])) {
                            continue
                        } if (this.items[az].item[0] === this.currentItem[0]) {
                            continue
                        } aI = this.items[az].item.offset()[aD];
                    aA = false;
                    if (aw[ay] - aI > this.items[az][aH] / 2) {
                        aA = true
                    } if (Math.abs(aw[ay] - aI) < aF) {
                        aF = Math.abs(aw[ay] - aI);
                        aC = this.items[az];
                        this.direction = aA ? "up" : "down"
                    }
                } if (!aC && !this.options.dropOnEmpty) {
                    return
                } if (this.currentContainer === this.containers[aG]) {
                    if (!this.currentContainer.containerCache.over) {
                        this.containers[aG]._trigger("over", aw, this._uiHash());
                        this.currentContainer.containerCache.over = 1
                    } return
                } aC ? this._rearrange(aw, aC, null, true) : this._rearrange(aw, null, this.containers[aG].element, true);
                this._trigger("change", aw, this._uiHash());
                this.containers[aG]._trigger("change", aw, this._uiHash(this));
                this.currentContainer = this.containers[aG];
                this.options.placeholder.update(this.currentContainer, this.placeholder);
                this.containers[aG]._trigger("over", aw, this._uiHash(this));
                this.containers[aG].containerCache.over = 1
            }
        }, _createHelper: function (ax) {
            var ay = this.options, aw = al.isFunction(ay.helper) ? al(ay.helper.apply(this.element[0], [ax, this.currentItem])) : (ay.helper === "clone" ? this.currentItem.clone() : this.currentItem);
            if (!aw.parents("body").length) {
                al(ay.appendTo !== "parent" ? ay.appendTo : this.currentItem[0].parentNode)[0].appendChild(aw[0])
            } if (aw[0] === this.currentItem[0]) {
                this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") }
            } if (!aw[0].style.width || ay.forceHelperSize) {
                aw.width(this.currentItem.width())
            } if (!aw[0].style.height || ay.forceHelperSize) {
                aw.height(this.currentItem.height())
            } return aw
        }, _adjustOffsetFromHelper: function (aw) {
            if (typeof aw === "string") {
                aw = aw.split(" ")
            } if (al.isArray(aw)) {
                aw = { left: +aw[0], top: +aw[1] || 0 }
            } if ("left" in aw) {
                this.offset.click.left = aw.left + this.margins.left
            } if ("right" in aw) {
                this.offset.click.left = this.helperProportions.width - aw.right + this.margins.left
            } if ("top" in aw) {
                this.offset.click.top = aw.top + this.margins.top
            } if ("bottom" in aw) {
                this.offset.click.top = this.helperProportions.height - aw.bottom + this.margins.top
            }
        }, _getParentOffset: function () {
            this.offsetParent = this.helper.offsetParent();
            var aw = this.offsetParent.offset();
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== this.document[0] && al.contains(this.scrollParent[0], this.offsetParent[0])) {
                aw.left += this.scrollParent.scrollLeft();
                aw.top += this.scrollParent.scrollTop()
            } if (this.offsetParent[0] === this.document[0].body || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && al.ui.ie)) {
                aw = { top: 0, left: 0 }
            } return { top: aw.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: aw.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) }
        }, _getRelativeOffset: function () {
            if (this.cssPosition === "relative") {
                var aw = this.currentItem.position();
                return { top: aw.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: aw.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() }
            } else {
                return { top: 0, left: 0 }
            }
        }, _cacheMargins: function () {
            this.margins = { left: (parseInt(this.currentItem.css("marginLeft"), 10) || 0), top: (parseInt(this.currentItem.css("marginTop"), 10) || 0) }
        }, _cacheHelperProportions: function () {
            this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() }
        }, _setContainment: function () {
            var ax, az, aw, ay = this.options;
            if (ay.containment === "parent") {
                ay.containment = this.helper[0].parentNode
            } if (ay.containment === "document" || ay.containment === "window") {
                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, ay.containment === "document" ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, (ay.containment === "document" ? (this.document.height() || document.body.parentNode.scrollHeight) : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            } if (!(/^(document|window|parent)$/).test(ay.containment)) {
                ax = al(ay.containment)[0];
                az = al(ay.containment).offset();
                aw = (al(ax).css("overflow") !== "hidden");
                this.containment = [az.left + (parseInt(al(ax).css("borderLeftWidth"), 10) || 0) + (parseInt(al(ax).css("paddingLeft"), 10) || 0) - this.margins.left, az.top + (parseInt(al(ax).css("borderTopWidth"), 10) || 0) + (parseInt(al(ax).css("paddingTop"), 10) || 0) - this.margins.top, az.left + (aw ? Math.max(ax.scrollWidth, ax.offsetWidth) : ax.offsetWidth) - (parseInt(al(ax).css("borderLeftWidth"), 10) || 0) - (parseInt(al(ax).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, az.top + (aw ? Math.max(ax.scrollHeight, ax.offsetHeight) : ax.offsetHeight) - (parseInt(al(ax).css("borderTopWidth"), 10) || 0) - (parseInt(al(ax).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            }
        }, _convertPositionTo: function (ay, aA) {
            if (!aA) {
                aA = this.position
            } var ax = ay === "absolute" ? 1 : -1, aw = this.cssPosition === "absolute" && !(this.scrollParent[0] !== this.document[0] && al.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, az = (/(html|body)/i).test(aw[0].tagName);
            return { top: (aA.top + this.offset.relative.top * ax + this.offset.parent.top * ax - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : (az ? 0 : aw.scrollTop())) * ax)), left: (aA.left + this.offset.relative.left * ax + this.offset.parent.left * ax - ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : az ? 0 : aw.scrollLeft()) * ax)) }
        }, _generatePosition: function (az) {
            var aB, aA, aC = this.options, ay = az.pageX, ax = az.pageY, aw = this.cssPosition === "absolute" && !(this.scrollParent[0] !== this.document[0] && al.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, aD = (/(html|body)/i).test(aw[0].tagName);
            if (this.cssPosition === "relative" && !(this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0])) {
                this.offset.relative = this._getRelativeOffset()
            } if (this.originalPosition) {
                if (this.containment) {
                    if (az.pageX - this.offset.click.left < this.containment[0]) {
                        ay = this.containment[0] + this.offset.click.left
                    } if (az.pageY - this.offset.click.top < this.containment[1]) {
                        ax = this.containment[1] + this.offset.click.top
                    } if (az.pageX - this.offset.click.left > this.containment[2]) {
                        ay = this.containment[2] + this.offset.click.left
                    } if (az.pageY - this.offset.click.top > this.containment[3]) {
                        ax = this.containment[3] + this.offset.click.top
                    }
                } if (aC.grid) {
                    aB = this.originalPageY + Math.round((ax - this.originalPageY) / aC.grid[1]) * aC.grid[1];
                    ax = this.containment ? ((aB - this.offset.click.top >= this.containment[1] && aB - this.offset.click.top <= this.containment[3]) ? aB : ((aB - this.offset.click.top >= this.containment[1]) ? aB - aC.grid[1] : aB + aC.grid[1])) : aB;
                    aA = this.originalPageX + Math.round((ay - this.originalPageX) / aC.grid[0]) * aC.grid[0];
                    ay = this.containment ? ((aA - this.offset.click.left >= this.containment[0] && aA - this.offset.click.left <= this.containment[2]) ? aA : ((aA - this.offset.click.left >= this.containment[0]) ? aA - aC.grid[0] : aA + aC.grid[0])) : aA
                }
            } return { top: (ax - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ((this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : (aD ? 0 : aw.scrollTop())))), left: (ay - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ((this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : aD ? 0 : aw.scrollLeft()))) }
        }, _rearrange: function (aA, az, ax, ay) {
            ax ? ax[0].appendChild(this.placeholder[0]) : az.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction === "down" ? az.item[0] : az.item[0].nextSibling));
            this.counter = this.counter ? ++this.counter : 1;
            var aw = this.counter;
            this._delay(function () {
                if (aw === this.counter) {
                    this.refreshPositions(!ay)
                }
            })
        }, _clear: function (ax, az) {
            this.reverting = false;
            var aw, aA = [];
            if (!this._noFinalSort && this.currentItem.parent().length) {
                this.placeholder.before(this.currentItem)
            } this._noFinalSort = null;
            if (this.helper[0] === this.currentItem[0]) {
                for (aw in this._storedCSS) {
                    if (this._storedCSS[aw] === "auto" || this._storedCSS[aw] === "static") {
                        this._storedCSS[aw] = ""
                    }
                } this.currentItem.css(this._storedCSS);
                this._removeClass(this.currentItem, "ui-sortable-helper")
            } else {
                this.currentItem.show()
            } if (this.fromOutside && !az) {
                aA.push(function (aB) {
                    this._trigger("receive", aB, this._uiHash(this.fromOutside))
                })
            } if ((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !az) {
                aA.push(function (aB) {
                    this._trigger("update", aB, this._uiHash())
                })
            } if (this !== this.currentContainer) {
                if (!az) {
                    aA.push(function (aB) {
                        this._trigger("remove", aB, this._uiHash())
                    });
                    aA.push((function (aB) {
                        return function (aC) {
                            aB._trigger("receive", aC, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer));
                    aA.push((function (aB) {
                        return function (aC) {
                            aB._trigger("update", aC, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer))
                }
            } function ay(aD, aB, aC) {
                return function (aE) {
                    aC._trigger(aD, aE, aB._uiHash(aB))
                }
            } for (aw = this.containers.length - 1;
                aw >= 0;
                aw--) {
                    if (!az) {
                        aA.push(ay("deactivate", this, this.containers[aw]))
                    } if (this.containers[aw].containerCache.over) {
                        aA.push(ay("out", this, this.containers[aw]));
                        this.containers[aw].containerCache.over = 0
                    }
            } if (this.storedCursor) {
                this.document.find("body").css("cursor", this.storedCursor);
                this.storedStylesheet.remove()
            } if (this._storedOpacity) {
                this.helper.css("opacity", this._storedOpacity)
            } if (this._storedZIndex) {
                this.helper.css("zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex)
            } this.dragging = false;
            if (!az) {
                this._trigger("beforeStop", ax, this._uiHash())
            } this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
            if (!this.cancelHelperRemoval) {
                if (this.helper[0] !== this.currentItem[0]) {
                    this.helper.remove()
                } this.helper = null
            } if (!az) {
                for (aw = 0;
                    aw < aA.length;
                    aw++) {
                        aA[aw].call(this, ax)
                } this._trigger("stop", ax, this._uiHash())
            } this.fromOutside = false;
            return !this.cancelHelperRemoval
        }, _trigger: function () {
            if (al.Widget.prototype._trigger.apply(this, arguments) === false) {
                this.cancel()
            }
        }, _uiHash: function (aw) {
            var ax = aw || this;
            return { helper: ax.helper, placeholder: ax.placeholder || al([]), position: ax.position, originalPosition: ax.originalPosition, offset: ax.positionAbs, item: ax.currentItem, sender: aw ? aw.element : null }
        }
    });
    /*!
     * jQuery UI Spinner 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    function V(aw) {
        return function () {
            var ax = this.element.val();
            aw.apply(this, arguments);
            this._refresh();
            if (ax !== this.element.val()) {
                this._trigger("change")
            }
        }
    } al.widget("ui.spinner", {
        version: "1.12.1", defaultElement: "<input>", widgetEventPrefix: "spin", options: { classes: { "ui-spinner": "ui-corner-all", "ui-spinner-down": "ui-corner-br", "ui-spinner-up": "ui-corner-tr" }, culture: null, icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" }, incremental: true, max: null, min: null, numberFormat: null, page: 10, step: 1, change: null, spin: null, start: null, stop: null }, _create: function () {
            this._setOption("max", this.options.max);
            this._setOption("min", this.options.min);
            this._setOption("step", this.options.step);
            if (this.value() !== "") {
                this._value(this.element.val(), true)
            } this._draw();
            this._on(this._events);
            this._refresh();
            this._on(this.window, {
                beforeunload: function () {
                    this.element.removeAttr("autocomplete")
                }
            })
        }, _getCreateOptions: function () {
            var aw = this._super();
            var ax = this.element;
            al.each(["min", "max", "step"], function (ay, az) {
                var aA = ax.attr(az);
                if (aA != null && aA.length) {
                    aw[az] = aA
                }
            });
            return aw
        }, _events: {
            keydown: function (aw) {
                if (this._start(aw) && this._keydown(aw)) {
                    aw.preventDefault()
                }
            }, keyup: "_stop", focus: function () {
                this.previous = this.element.val()
            }, blur: function (aw) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return
                } this._stop();
                this._refresh();
                if (this.previous !== this.element.val()) {
                    this._trigger("change", aw)
                }
            }, mousewheel: function (aw, ax) {
                if (!ax) {
                    return
                } if (!this.spinning && !this._start(aw)) {
                    return false
                } this._spin((ax > 0 ? 1 : -1) * this.options.step, aw);
                clearTimeout(this.mousewheelTimer);
                this.mousewheelTimer = this._delay(function () {
                    if (this.spinning) {
                        this._stop(aw)
                    }
                }, 100);
                aw.preventDefault()
            }, "mousedown .ui-spinner-button": function (ax) {
                var aw;
                aw = this.element[0] === al.ui.safeActiveElement(this.document[0]) ? this.previous : this.element.val();
                function ay() {
                    var az = this.element[0] === al.ui.safeActiveElement(this.document[0]);
                    if (!az) {
                        this.element.trigger("focus");
                        this.previous = aw;
                        this._delay(function () {
                            this.previous = aw
                        })
                    }
                } ax.preventDefault();
                ay.call(this);
                this.cancelBlur = true;
                this._delay(function () {
                    delete this.cancelBlur;
                    ay.call(this)
                });
                if (this._start(ax) === false) {
                    return
                } this._repeat(null, al(ax.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, ax)
            }, "mouseup .ui-spinner-button": "_stop", "mouseenter .ui-spinner-button": function (aw) {
                if (!al(aw.currentTarget).hasClass("ui-state-active")) {
                    return
                } if (this._start(aw) === false) {
                    return false
                } this._repeat(null, al(aw.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, aw)
            }, "mouseleave .ui-spinner-button": "_stop"
        }, _enhance: function () {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap("<span>").parent().append("<a></a><a></a>")
        }, _draw: function () {
            this._enhance();
            this._addClass(this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content");
            this._addClass("ui-spinner-input");
            this.element.attr("role", "spinbutton");
            this.buttons = this.uiSpinner.children("a").attr("tabIndex", -1).attr("aria-hidden", true).button({ classes: { "ui-button": "" } });
            this._removeClass(this.buttons, "ui-corner-all");
            this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up");
            this._addClass(this.buttons.last(), "ui-spinner-button ui-spinner-down");
            this.buttons.first().button({ icon: this.options.icons.up, showLabel: false });
            this.buttons.last().button({ icon: this.options.icons.down, showLabel: false });
            if (this.buttons.height() > Math.ceil(this.uiSpinner.height() * 0.5) && this.uiSpinner.height() > 0) {
                this.uiSpinner.height(this.uiSpinner.height())
            }
        }, _keydown: function (ax) {
            var aw = this.options, ay = al.ui.keyCode;
            switch (ax.keyCode) {
                case ay.UP: this._repeat(null, 1, ax);
                    return true;
                case ay.DOWN: this._repeat(null, -1, ax);
                    return true;
                case ay.PAGE_UP: this._repeat(null, aw.page, ax);
                    return true;
                case ay.PAGE_DOWN: this._repeat(null, -aw.page, ax);
                    return true
            }return false
        }, _start: function (aw) {
            if (!this.spinning && this._trigger("start", aw) === false) {
                return false
            } if (!this.counter) {
                this.counter = 1
            } this.spinning = true;
            return true
        }, _repeat: function (ax, aw, ay) {
            ax = ax || 500;
            clearTimeout(this.timer);
            this.timer = this._delay(function () {
                this._repeat(40, aw, ay)
            }, ax);
            this._spin(aw * this.options.step, ay)
        }, _spin: function (ax, aw) {
            var ay = this.value() || 0;
            if (!this.counter) {
                this.counter = 1
            } ay = this._adjustValue(ay + ax * this._increment(this.counter));
            if (!this.spinning || this._trigger("spin", aw, { value: ay }) !== false) {
                this._value(ay);
                this.counter++
            }
        }, _increment: function (aw) {
            var ax = this.options.incremental;
            if (ax) {
                return al.isFunction(ax) ? ax(aw) : Math.floor(aw * aw * aw / 50000 - aw * aw / 500 + 17 * aw / 200 + 1)
            } return 1
        }, _precision: function () {
            var aw = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                aw = Math.max(aw, this._precisionOf(this.options.min))
            } return aw
        }, _precisionOf: function (ax) {
            var ay = ax.toString(), aw = ay.indexOf(".");
            return aw === -1 ? 0 : ay.length - aw - 1
        }, _adjustValue: function (ay) {
            var ax, az, aw = this.options;
            ax = aw.min !== null ? aw.min : 0;
            az = ay - ax;
            az = Math.round(az / aw.step) * aw.step;
            ay = ax + az;
            ay = parseFloat(ay.toFixed(this._precision()));
            if (aw.max !== null && ay > aw.max) {
                return aw.max
            } if (aw.min !== null && ay < aw.min) {
                return aw.min
            } return ay
        }, _stop: function (aw) {
            if (!this.spinning) {
                return
            } clearTimeout(this.timer);
            clearTimeout(this.mousewheelTimer);
            this.counter = 0;
            this.spinning = false;
            this._trigger("stop", aw)
        }, _setOption: function (aw, ay) {
            var az, aA, ax;
            if (aw === "culture" || aw === "numberFormat") {
                az = this._parse(this.element.val());
                this.options[aw] = ay;
                this.element.val(this._format(az));
                return
            } if (aw === "max" || aw === "min" || aw === "step") {
                if (typeof ay === "string") {
                    ay = this._parse(ay)
                }
            } if (aw === "icons") {
                aA = this.buttons.first().find(".ui-icon");
                this._removeClass(aA, null, this.options.icons.up);
                this._addClass(aA, null, ay.up);
                ax = this.buttons.last().find(".ui-icon");
                this._removeClass(ax, null, this.options.icons.down);
                this._addClass(ax, null, ay.down)
            } this._super(aw, ay)
        }, _setOptionDisabled: function (aw) {
            this._super(aw);
            this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!aw);
            this.element.prop("disabled", !!aw);
            this.buttons.button(aw ? "disable" : "enable")
        }, _setOptions: V(function (aw) {
            this._super(aw)
        }), _parse: function (aw) {
            if (typeof aw === "string" && aw !== "") {
                aw = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(aw, 10, this.options.culture) : +aw
            } return aw === "" || isNaN(aw) ? null : aw
        }, _format: function (aw) {
            if (aw === "") {
                return ""
            } return window.Globalize && this.options.numberFormat ? Globalize.format(aw, this.options.numberFormat, this.options.culture) : aw
        }, _refresh: function () {
            this.element.attr({ "aria-valuemin": this.options.min, "aria-valuemax": this.options.max, "aria-valuenow": this._parse(this.element.val()) })
        }, isValid: function () {
            var aw = this.value();
            if (aw === null) {
                return false
            } return aw === this._adjustValue(aw)
        }, _value: function (ay, aw) {
            var ax;
            if (ay !== "") {
                ax = this._parse(ay);
                if (ax !== null) {
                    if (!aw) {
                        ax = this._adjustValue(ax)
                    } ay = this._format(ax)
                }
            } this.element.val(ay);
            this._refresh()
        }, _destroy: function () {
            this.element.prop("disabled", false).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow");
            this.uiSpinner.replaceWith(this.element)
        }, stepUp: V(function (aw) {
            this._stepUp(aw)
        }), _stepUp: function (aw) {
            if (this._start()) {
                this._spin((aw || 1) * this.options.step);
                this._stop()
            }
        }, stepDown: V(function (aw) {
            this._stepDown(aw)
        }), _stepDown: function (aw) {
            if (this._start()) {
                this._spin((aw || 1) * -this.options.step);
                this._stop()
            }
        }, pageUp: V(function (aw) {
            this._stepUp((aw || 1) * this.options.page)
        }), pageDown: V(function (aw) {
            this._stepDown((aw || 1) * this.options.page)
        }), value: function (aw) {
            if (!arguments.length) {
                return this._parse(this.element.val())
            } V(this._value).call(this, aw)
        }, widget: function () {
            return this.uiSpinner
        }
    });
    if (al.uiBackCompat !== false) {
        al.widget("ui.spinner", al.ui.spinner, {
            _enhance: function () {
                this.uiSpinner = this.element.attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())
            }, _uiSpinnerHtml: function () {
                return "<span>"
            }, _buttonHtml: function () {
                return "<a></a><a></a>"
            }
        })
    } var ah = al.ui.spinner;
    /*!
     * jQuery UI Tabs 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.tabs", {
        version: "1.12.1", delay: 300, options: { active: null, classes: { "ui-tabs": "ui-corner-all", "ui-tabs-nav": "ui-corner-all", "ui-tabs-panel": "ui-corner-bottom", "ui-tabs-tab": "ui-corner-top" }, collapsible: false, event: "click", heightStyle: "content", hide: null, show: null, activate: null, beforeActivate: null, beforeLoad: null, load: null }, _isLocal: (function () {
            var aw = /#.*$/;
            return function (ay) {
                var aA, az;
                aA = ay.href.replace(aw, "");
                az = location.href.replace(aw, "");
                try {
                    aA = decodeURIComponent(aA)
                } catch (ax) { } try {
                    az = decodeURIComponent(az)
                } catch (ax) { } return ay.hash.length > 1 && aA === az
            }
        })(), _create: function () {
            var ax = this, aw = this.options;
            this.running = false;
            this._addClass("ui-tabs", "ui-widget ui-widget-content");
            this._toggleClass("ui-tabs-collapsible", null, aw.collapsible);
            this._processTabs();
            aw.active = this._initialActive();
            if (al.isArray(aw.disabled)) {
                aw.disabled = al.unique(aw.disabled.concat(al.map(this.tabs.filter(".ui-state-disabled"), function (ay) {
                    return ax.tabs.index(ay)
                }))).sort()
            } if (this.options.active !== false && this.anchors.length) {
                this.active = this._findActive(aw.active)
            } else {
                this.active = al()
            } this._refresh();
            if (this.active.length) {
                this.load(aw.active)
            }
        }, _initialActive: function () {
            var ax = this.options.active, aw = this.options.collapsible, ay = location.hash.substring(1);
            if (ax === null) {
                if (ay) {
                    this.tabs.each(function (az, aA) {
                        if (al(aA).attr("aria-controls") === ay) {
                            ax = az;
                            return false
                        }
                    })
                } if (ax === null) {
                    ax = this.tabs.index(this.tabs.filter(".ui-tabs-active"))
                } if (ax === null || ax === -1) {
                    ax = this.tabs.length ? 0 : false
                }
            } if (ax !== false) {
                ax = this.tabs.index(this.tabs.eq(ax));
                if (ax === -1) {
                    ax = aw ? false : 0
                }
            } if (!aw && ax === false && this.anchors.length) {
                ax = 0
            } return ax
        }, _getCreateEventData: function () {
            return { tab: this.active, panel: !this.active.length ? al() : this._getPanelForTab(this.active) }
        }, _tabKeydown: function (ay) {
            var ax = al(al.ui.safeActiveElement(this.document[0])).closest("li"), aw = this.tabs.index(ax), az = true;
            if (this._handlePageNav(ay)) {
                return
            } switch (ay.keyCode) {
                case al.ui.keyCode.RIGHT: case al.ui.keyCode.DOWN: aw++;
                    break;
                case al.ui.keyCode.UP: case al.ui.keyCode.LEFT: az = false;
                    aw--;
                    break;
                case al.ui.keyCode.END: aw = this.anchors.length - 1;
                    break;
                case al.ui.keyCode.HOME: aw = 0;
                    break;
                case al.ui.keyCode.SPACE: ay.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(aw);
                    return;
                case al.ui.keyCode.ENTER: ay.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(aw === this.options.active ? false : aw);
                    return;
                default: return
            }ay.preventDefault();
            clearTimeout(this.activating);
            aw = this._focusNextTab(aw, az);
            if (!ay.ctrlKey && !ay.metaKey) {
                ax.attr("aria-selected", "false");
                this.tabs.eq(aw).attr("aria-selected", "true");
                this.activating = this._delay(function () {
                    this.option("active", aw)
                }, this.delay)
            }
        }, _panelKeydown: function (aw) {
            if (this._handlePageNav(aw)) {
                return
            } if (aw.ctrlKey && aw.keyCode === al.ui.keyCode.UP) {
                aw.preventDefault();
                this.active.trigger("focus")
            }
        }, _handlePageNav: function (aw) {
            if (aw.altKey && aw.keyCode === al.ui.keyCode.PAGE_UP) {
                this._activate(this._focusNextTab(this.options.active - 1, false));
                return true
            } if (aw.altKey && aw.keyCode === al.ui.keyCode.PAGE_DOWN) {
                this._activate(this._focusNextTab(this.options.active + 1, true));
                return true
            }
        }, _findNextTab: function (ax, ay) {
            var aw = this.tabs.length - 1;
            function az() {
                if (ax > aw) {
                    ax = 0
                } if (ax < 0) {
                    ax = aw
                } return ax
            } while (al.inArray(az(), this.options.disabled) !== -1) {
                ax = ay ? ax + 1 : ax - 1
            } return ax
        }, _focusNextTab: function (aw, ax) {
            aw = this._findNextTab(aw, ax);
            this.tabs.eq(aw).trigger("focus");
            return aw
        }, _setOption: function (aw, ax) {
            if (aw === "active") {
                this._activate(ax);
                return
            } this._super(aw, ax);
            if (aw === "collapsible") {
                this._toggleClass("ui-tabs-collapsible", null, ax);
                if (!ax && this.options.active === false) {
                    this._activate(0)
                }
            } if (aw === "event") {
                this._setupEvents(ax)
            } if (aw === "heightStyle") {
                this._setupHeightStyle(ax)
            }
        }, _sanitizeSelector: function (aw) {
            return aw ? aw.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        }, refresh: function () {
            var ax = this.options, aw = this.tablist.children(":has(a[href])");
            ax.disabled = al.map(aw.filter(".ui-state-disabled"), function (ay) {
                return aw.index(ay)
            });
            this._processTabs();
            if (ax.active === false || !this.anchors.length) {
                ax.active = false;
                this.active = al()
            } else {
                if (this.active.length && !al.contains(this.tablist[0], this.active[0])) {
                    if (this.tabs.length === ax.disabled.length) {
                        ax.active = false;
                        this.active = al()
                    } else {
                        this._activate(this._findNextTab(Math.max(0, ax.active - 1), false))
                    }
                } else {
                    ax.active = this.tabs.index(this.active)
                }
            } this._refresh()
        }, _refresh: function () {
            this._setOptionDisabled(this.options.disabled);
            this._setupEvents(this.options.event);
            this._setupHeightStyle(this.options.heightStyle);
            this.tabs.not(this.active).attr({ "aria-selected": "false", "aria-expanded": "false", tabIndex: -1 });
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({ "aria-hidden": "true" });
            if (!this.active.length) {
                this.tabs.eq(0).attr("tabIndex", 0)
            } else {
                this.active.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 });
                this._addClass(this.active, "ui-tabs-active", "ui-state-active");
                this._getPanelForTab(this.active).show().attr({ "aria-hidden": "false" })
            }
        }, _processTabs: function () {
            var ay = this, az = this.tabs, ax = this.anchors, aw = this.panels;
            this.tablist = this._getList().attr("role", "tablist");
            this._addClass(this.tablist, "ui-tabs-nav", "ui-helper-reset ui-helper-clearfix ui-widget-header");
            this.tablist.on("mousedown" + this.eventNamespace, "> li", function (aA) {
                if (al(this).is(".ui-state-disabled")) {
                    aA.preventDefault()
                }
            }).on("focus" + this.eventNamespace, ".ui-tabs-anchor", function () {
                if (al(this).closest("li").is(".ui-state-disabled")) {
                    this.blur()
                }
            });
            this.tabs = this.tablist.find("> li:has(a[href])").attr({ role: "tab", tabIndex: -1 });
            this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default");
            this.anchors = this.tabs.map(function () {
                return al("a", this)[0]
            }).attr({ role: "presentation", tabIndex: -1 });
            this._addClass(this.anchors, "ui-tabs-anchor");
            this.panels = al();
            this.anchors.each(function (aF, aD) {
                var aA, aB, aE, aC = al(aD).uniqueId().attr("id"), aG = al(aD).closest("li"), aH = aG.attr("aria-controls");
                if (ay._isLocal(aD)) {
                    aA = aD.hash;
                    aE = aA.substring(1);
                    aB = ay.element.find(ay._sanitizeSelector(aA))
                } else {
                    aE = aG.attr("aria-controls") || al({}).uniqueId()[0].id;
                    aA = "#" + aE;
                    aB = ay.element.find(aA);
                    if (!aB.length) {
                        aB = ay._createPanel(aE);
                        aB.insertAfter(ay.panels[aF - 1] || ay.tablist)
                    } aB.attr("aria-live", "polite")
                } if (aB.length) {
                    ay.panels = ay.panels.add(aB)
                } if (aH) {
                    aG.data("ui-tabs-aria-controls", aH)
                } aG.attr({ "aria-controls": aE, "aria-labelledby": aC });
                aB.attr("aria-labelledby", aC)
            });
            this.panels.attr("role", "tabpanel");
            this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content");
            if (az) {
                this._off(az.not(this.tabs));
                this._off(ax.not(this.anchors));
                this._off(aw.not(this.panels))
            }
        }, _getList: function () {
            return this.tablist || this.element.find("ol, ul").eq(0)
        }, _createPanel: function (aw) {
            return al("<div>").attr("id", aw).data("ui-tabs-destroy", true)
        }, _setOptionDisabled: function (az) {
            var ay, aw, ax;
            if (al.isArray(az)) {
                if (!az.length) {
                    az = false
                } else {
                    if (az.length === this.anchors.length) {
                        az = true
                    }
                }
            } for (ax = 0;
                (aw = this.tabs[ax]);
                ax++) {
                    ay = al(aw);
                if (az === true || al.inArray(ax, az) !== -1) {
                    ay.attr("aria-disabled", "true");
                    this._addClass(ay, null, "ui-state-disabled")
                } else {
                    ay.removeAttr("aria-disabled");
                    this._removeClass(ay, null, "ui-state-disabled")
                }
            } this.options.disabled = az;
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, az === true)
        }, _setupEvents: function (ax) {
            var aw = {};
            if (ax) {
                al.each(ax.split(" "), function (az, ay) {
                    aw[ay] = "_eventHandler"
                })
            } this._off(this.anchors.add(this.tabs).add(this.panels));
            this._on(true, this.anchors, {
                click: function (ay) {
                    ay.preventDefault()
                }
            });
            this._on(this.anchors, aw);
            this._on(this.tabs, { keydown: "_tabKeydown" });
            this._on(this.panels, { keydown: "_panelKeydown" });
            this._focusable(this.tabs);
            this._hoverable(this.tabs)
        }, _setupHeightStyle: function (aw) {
            var ay, ax = this.element.parent();
            if (aw === "fill") {
                ay = ax.height();
                ay -= this.element.outerHeight() - this.element.height();
                this.element.siblings(":visible").each(function () {
                    var aA = al(this), az = aA.css("position");
                    if (az === "absolute" || az === "fixed") {
                        return
                    } ay -= aA.outerHeight(true)
                });
                this.element.children().not(this.panels).each(function () {
                    ay -= al(this).outerHeight(true)
                });
                this.panels.each(function () {
                    al(this).height(Math.max(0, ay - al(this).innerHeight() + al(this).height()))
                }).css("overflow", "auto")
            } else {
                if (aw === "auto") {
                    ay = 0;
                    this.panels.each(function () {
                        ay = Math.max(ay, al(this).height("").height())
                    }).height(ay)
                }
            }
        }, _eventHandler: function (aw) {
            var aF = this.options, aA = this.active, aB = al(aw.currentTarget), az = aB.closest("li"), aD = az[0] === aA[0], ax = aD && aF.collapsible, ay = ax ? al() : this._getPanelForTab(az), aC = !aA.length ? al() : this._getPanelForTab(aA), aE = { oldTab: aA, oldPanel: aC, newTab: ax ? al() : az, newPanel: ay };
            aw.preventDefault();
            if (az.hasClass("ui-state-disabled") || az.hasClass("ui-tabs-loading") || this.running || (aD && !aF.collapsible) || (this._trigger("beforeActivate", aw, aE) === false)) {
                return
            } aF.active = ax ? false : this.tabs.index(az);
            this.active = aD ? al() : az;
            if (this.xhr) {
                this.xhr.abort()
            } if (!aC.length && !ay.length) {
                al.error("jQuery UI Tabs: Mismatching fragment identifier.")
            } if (ay.length) {
                this.load(this.tabs.index(az), aw)
            } this._toggle(aw, aE)
        }, _toggle: function (aC, aB) {
            var aA = this, aw = aB.newPanel, az = aB.oldPanel;
            this.running = true;
            function ay() {
                aA.running = false;
                aA._trigger("activate", aC, aB)
            } function ax() {
                aA._addClass(aB.newTab.closest("li"), "ui-tabs-active", "ui-state-active");
                if (aw.length && aA.options.show) {
                    aA._show(aw, aA.options.show, ay)
                } else {
                    aw.show();
                    ay()
                }
            } if (az.length && this.options.hide) {
                this._hide(az, this.options.hide, function () {
                    aA._removeClass(aB.oldTab.closest("li"), "ui-tabs-active", "ui-state-active");
                    ax()
                })
            } else {
                this._removeClass(aB.oldTab.closest("li"), "ui-tabs-active", "ui-state-active");
                az.hide();
                ax()
            } az.attr("aria-hidden", "true");
            aB.oldTab.attr({ "aria-selected": "false", "aria-expanded": "false" });
            if (aw.length && az.length) {
                aB.oldTab.attr("tabIndex", -1)
            } else {
                if (aw.length) {
                    this.tabs.filter(function () {
                        return al(this).attr("tabIndex") === 0
                    }).attr("tabIndex", -1)
                }
            } aw.attr("aria-hidden", "false");
            aB.newTab.attr({ "aria-selected": "true", "aria-expanded": "true", tabIndex: 0 })
        }, _activate: function (ax) {
            var aw, ay = this._findActive(ax);
            if (ay[0] === this.active[0]) {
                return
            } if (!ay.length) {
                ay = this.active
            } aw = ay.find(".ui-tabs-anchor")[0];
            this._eventHandler({ target: aw, currentTarget: aw, preventDefault: al.noop })
        }, _findActive: function (aw) {
            return aw === false ? al() : this.tabs.eq(aw)
        }, _getIndex: function (aw) {
            if (typeof aw === "string") {
                aw = this.anchors.index(this.anchors.filter("[href$='" + al.ui.escapeSelector(aw) + "']"))
            } return aw
        }, _destroy: function () {
            if (this.xhr) {
                this.xhr.abort()
            } this.tablist.removeAttr("role").off(this.eventNamespace);
            this.anchors.removeAttr("role tabIndex").removeUniqueId();
            this.tabs.add(this.panels).each(function () {
                if (al.data(this, "ui-tabs-destroy")) {
                    al(this).remove()
                } else {
                    al(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")
                }
            });
            this.tabs.each(function () {
                var aw = al(this), ax = aw.data("ui-tabs-aria-controls");
                if (ax) {
                    aw.attr("aria-controls", ax).removeData("ui-tabs-aria-controls")
                } else {
                    aw.removeAttr("aria-controls")
                }
            });
            this.panels.show();
            if (this.options.heightStyle !== "content") {
                this.panels.css("height", "")
            }
        }, enable: function (aw) {
            var ax = this.options.disabled;
            if (ax === false) {
                return
            } if (aw === undefined) {
                ax = false
            } else {
                aw = this._getIndex(aw);
                if (al.isArray(ax)) {
                    ax = al.map(ax, function (ay) {
                        return ay !== aw ? ay : null
                    })
                } else {
                    ax = al.map(this.tabs, function (ay, az) {
                        return az !== aw ? az : null
                    })
                }
            } this._setOptionDisabled(ax)
        }, disable: function (aw) {
            var ax = this.options.disabled;
            if (ax === true) {
                return
            } if (aw === undefined) {
                ax = true
            } else {
                aw = this._getIndex(aw);
                if (al.inArray(aw, ax) !== -1) {
                    return
                } if (al.isArray(ax)) {
                    ax = al.merge([aw], ax).sort()
                } else {
                    ax = [aw]
                }
            } this._setOptionDisabled(ax)
        }, load: function (az, aD) {
            az = this._getIndex(az);
            var aC = this, aA = this.tabs.eq(az), ay = aA.find(".ui-tabs-anchor"), ax = this._getPanelForTab(aA), aB = { tab: aA, panel: ax }, aw = function (aF, aE) {
                if (aE === "abort") {
                    aC.panels.stop(false, true)
                } aC._removeClass(aA, "ui-tabs-loading");
                ax.removeAttr("aria-busy");
                if (aF === aC.xhr) {
                    delete aC.xhr
                }
            };
            if (this._isLocal(ay[0])) {
                return
            } this.xhr = al.ajax(this._ajaxSettings(ay, aD, aB));
            if (this.xhr && this.xhr.statusText !== "canceled") {
                this._addClass(aA, "ui-tabs-loading");
                ax.attr("aria-busy", "true");
                this.xhr.done(function (aF, aE, aG) {
                    setTimeout(function () {
                        ax.html(aF);
                        aC._trigger("load", aD, aB);
                        aw(aG, aE)
                    }, 1)
                }).fail(function (aF, aE) {
                    setTimeout(function () {
                        aw(aF, aE)
                    }, 1)
                })
            }
        }, _ajaxSettings: function (aw, az, ay) {
            var ax = this;
            return {
                url: aw.attr("href").replace(/#.*$/, ""), beforeSend: function (aB, aA) {
                    return ax._trigger("beforeLoad", az, al.extend({ jqXHR: aB, ajaxSettings: aA }, ay))
                }
            }
        }, _getPanelForTab: function (aw) {
            var ax = al(aw).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + ax))
        }
    });
    if (al.uiBackCompat !== false) {
        al.widget("ui.tabs", al.ui.tabs, {
            _processTabs: function () {
                this._superApply(arguments);
                this._addClass(this.tabs, "ui-tab")
            }
        })
    } var S = al.ui.tabs;
    /*!
     * jQuery UI Tooltip 1.12.1
     * http://jqueryui.com
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
    ;
    al.widget("ui.tooltip", {
        version: "1.12.1", options: {
            classes: { "ui-tooltip": "ui-corner-all ui-widget-shadow" }, content: function () {
                var aw = al(this).attr("title") || "";
                return al("<a>").text(aw).html()
            }, hide: true, items: "[title]:not([disabled])", position: { my: "left top+15", at: "left bottom", collision: "flipfit flip" }, show: true, track: false, close: null, open: null
        }, _addDescribedBy: function (ax, ay) {
            var aw = (ax.attr("aria-describedby") || "").split(/\s+/);
            aw.push(ay);
            ax.data("ui-tooltip-id", ay).attr("aria-describedby", al.trim(aw.join(" ")))
        }, _removeDescribedBy: function (ay) {
            var az = ay.data("ui-tooltip-id"), ax = (ay.attr("aria-describedby") || "").split(/\s+/), aw = al.inArray(az, ax);
            if (aw !== -1) {
                ax.splice(aw, 1)
            } ay.removeData("ui-tooltip-id");
            ax = al.trim(ax.join(" "));
            if (ax) {
                ay.attr("aria-describedby", ax)
            } else {
                ay.removeAttr("aria-describedby")
            }
        }, _create: function () {
            this._on({ mouseover: "open", focusin: "open" });
            this.tooltips = {};
            this.parents = {};
            this.liveRegion = al("<div>").attr({ role: "log", "aria-live": "assertive", "aria-relevant": "additions" }).appendTo(this.document[0].body);
            this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible");
            this.disabledTitles = al([])
        }, _setOption: function (aw, ay) {
            var ax = this;
            this._super(aw, ay);
            if (aw === "content") {
                al.each(this.tooltips, function (aA, az) {
                    ax._updateContent(az.element)
                })
            }
        }, _setOptionDisabled: function (aw) {
            this[aw ? "_disable" : "_enable"]()
        }, _disable: function () {
            var aw = this;
            al.each(this.tooltips, function (az, ay) {
                var ax = al.Event("blur");
                ax.target = ax.currentTarget = ay.element[0];
                aw.close(ax, true)
            });
            this.disabledTitles = this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function () {
                var ax = al(this);
                if (ax.is("[title]")) {
                    return ax.data("ui-tooltip-title", ax.attr("title")).removeAttr("title")
                }
            }))
        }, _enable: function () {
            this.disabledTitles.each(function () {
                var aw = al(this);
                if (aw.data("ui-tooltip-title")) {
                    aw.attr("title", aw.data("ui-tooltip-title"))
                }
            });
            this.disabledTitles = al([])
        }, open: function (ax) {
            var aw = this, ay = al(ax ? ax.target : this.element).closest(this.options.items);
            if (!ay.length || ay.data("ui-tooltip-id")) {
                return
            } if (ay.attr("title")) {
                ay.data("ui-tooltip-title", ay.attr("title"))
            } ay.data("ui-tooltip-open", true);
            if (ax && ax.type === "mouseover") {
                ay.parents().each(function () {
                    var aA = al(this), az;
                    if (aA.data("ui-tooltip-open")) {
                        az = al.Event("blur");
                        az.target = az.currentTarget = this;
                        aw.close(az, true)
                    } if (aA.attr("title")) {
                        aA.uniqueId();
                        aw.parents[this.id] = { element: this, title: aA.attr("title") };
                        aA.attr("title", "")
                    }
                })
            } this._registerCloseHandlers(ax, ay);
            this._updateContent(ay, ax)
        }, _updateContent: function (aB, aA) {
            var az, aw = this.options.content, ay = this, ax = aA ? aA.type : null;
            if (typeof aw === "string" || aw.nodeType || aw.jquery) {
                return this._open(aA, aB, aw)
            } az = aw.call(aB[0], function (aC) {
                ay._delay(function () {
                    if (!aB.data("ui-tooltip-open")) {
                        return
                    } if (aA) {
                        aA.type = ax
                    } this._open(aA, aB, aC)
                })
            });
            if (az) {
                this._open(aA, aB, az)
            }
        }, _open: function (ax, aA, aB) {
            var aw, aE, aD, ay, aC = al.extend({}, this.options.position);
            if (!aB) {
                return
            } aw = this._find(aA);
            if (aw) {
                aw.tooltip.find(".ui-tooltip-content").html(aB);
                return
            } if (aA.is("[title]")) {
                if (ax && ax.type === "mouseover") {
                    aA.attr("title", "")
                } else {
                    aA.removeAttr("title")
                }
            } aw = this._tooltip(aA);
            aE = aw.tooltip;
            this._addDescribedBy(aA, aE.attr("id"));
            aE.find(".ui-tooltip-content").html(aB);
            this.liveRegion.children().hide();
            ay = al("<div>").html(aE.find(".ui-tooltip-content").html());
            ay.removeAttr("name").find("[name]").removeAttr("name");
            ay.removeAttr("id").find("[id]").removeAttr("id");
            ay.appendTo(this.liveRegion);
            function az(aF) {
                aC.of = aF;
                if (aE.is(":hidden")) {
                    return
                } aE.position(aC)
            } if (this.options.track && ax && /^mouse/.test(ax.type)) {
                this._on(this.document, { mousemove: az });
                az(ax)
            } else {
                aE.position(al.extend({ of: aA }, this.options.position))
            } aE.hide();
            this._show(aE, this.options.show);
            if (this.options.track && this.options.show && this.options.show.delay) {
                aD = this.delayedShow = setInterval(function () {
                    if (aE.is(":visible")) {
                        az(aC.of);
                        clearInterval(aD)
                    }
                }, al.fx.interval)
            } this._trigger("open", ax, { tooltip: aE })
        }, _registerCloseHandlers: function (ax, ay) {
            var aw = {
                keyup: function (az) {
                    if (az.keyCode === al.ui.keyCode.ESCAPE) {
                        var aA = al.Event(az);
                        aA.currentTarget = ay[0];
                        this.close(aA, true)
                    }
                }
            };
            if (ay[0] !== this.element[0]) {
                aw.remove = function () {
                    this._removeTooltip(this._find(ay).tooltip)
                }
            } if (!ax || ax.type === "mouseover") {
                aw.mouseleave = "close"
            } if (!ax || ax.type === "focusin") {
                aw.focusout = "close"
            } this._on(true, ay, aw)
        }, close: function (ax) {
            var az, aw = this, aA = al(ax ? ax.currentTarget : this.element), ay = this._find(aA);
            if (!ay) {
                aA.removeData("ui-tooltip-open");
                return
            } az = ay.tooltip;
            if (ay.closing) {
                return
            } clearInterval(this.delayedShow);
            if (aA.data("ui-tooltip-title") && !aA.attr("title")) {
                aA.attr("title", aA.data("ui-tooltip-title"))
            } this._removeDescribedBy(aA);
            ay.hiding = true;
            az.stop(true);
            this._hide(az, this.options.hide, function () {
                aw._removeTooltip(al(this))
            });
            aA.removeData("ui-tooltip-open");
            this._off(aA, "mouseleave focusout keyup");
            if (aA[0] !== this.element[0]) {
                this._off(aA, "remove")
            } this._off(this.document, "mousemove");
            if (ax && ax.type === "mouseleave") {
                al.each(this.parents, function (aC, aB) {
                    al(aB.element).attr("title", aB.title);
                    delete aw.parents[aC]
                })
            } ay.closing = true;
            this._trigger("close", ax, { tooltip: az });
            if (!ay.hiding) {
                ay.closing = false
            }
        }, _tooltip: function (aw) {
            var ay = al("<div>").attr("role", "tooltip"), ax = al("<div>").appendTo(ay), az = ay.uniqueId().attr("id");
            this._addClass(ax, "ui-tooltip-content");
            this._addClass(ay, "ui-tooltip", "ui-widget ui-widget-content");
            ay.appendTo(this._appendTo(aw));
            return this.tooltips[az] = { element: aw, tooltip: ay }
        }, _find: function (aw) {
            var ax = aw.data("ui-tooltip-id");
            return ax ? this.tooltips[ax] : null
        }, _removeTooltip: function (aw) {
            aw.remove();
            delete this.tooltips[aw.attr("id")]
        }, _appendTo: function (ax) {
            var aw = ax.closest(".ui-front, dialog");
            if (!aw.length) {
                aw = this.document[0].body
            } return aw
        }, _destroy: function () {
            var aw = this;
            al.each(this.tooltips, function (aA, az) {
                var ay = al.Event("blur"), ax = az.element;
                ay.target = ay.currentTarget = ax[0];
                aw.close(ay, true);
                al("#" + aA).remove();
                if (ax.data("ui-tooltip-title")) {
                    if (!ax.attr("title")) {
                        ax.attr("title", ax.data("ui-tooltip-title"))
                    } ax.removeData("ui-tooltip-title")
                }
            });
            this.liveRegion.remove()
        }
    });
    if (al.uiBackCompat !== false) {
        al.widget("ui.tooltip", al.ui.tooltip, {
            options: { tooltipClass: null }, _tooltip: function () {
                var aw = this._superApply(arguments);
                if (this.options.tooltipClass) {
                    aw.tooltip.addClass(this.options.tooltipClass)
                } return aw
            }
        })
    } var E = al.ui.tooltip
}));
(function (d) {
    d.widget("ui.widget", {
        yield: null, returnValues: {}, before: function (h, g) {
            var e = this[h];
            this[h] = function () {
                g.apply(this, arguments);
                return e.apply(this, arguments)
            }
        }, after: function (h, g) {
            var e = this[h];
            this[h] = function () {
                this.returnValues[h] = e.apply(this, arguments);
                return g.apply(this, arguments)
            }
        }, around: function (h, g) {
            var e = this[h];
            this[h] = function () {
                var j = this["yield"];
                this["yield"] = e;
                var f = g.apply(this, arguments);
                this["yield"] = j;
                return f
            }
        }
    });
    var c = (function (e) {
        return (function (f) {
            e.prototype = f;
            return new e()
        })
    })(function () { });
    var a = /xyz/.test(function () {
        xyz
    }) ? /\b_super\b/ : /.*/;
    d.ui.widget.subclass = function b(f) {
        d.widget(f);
        f = f.split(".");
        var g = d[f[0]][f[1]], l = this, e = l.prototype;
        var h = arguments[0] = g.prototype = c(e);
        d.extend.apply(null, arguments);
        g.subclass = b;
        for (key in h) {
            if (h.hasOwnProperty(key)) {
                switch (key) {
                    case "_create": var j = h._create;
                        h._create = function () {
                            e._create.apply(this);
                            j.apply(this)
                        };
                        break;
                    case "_init": var m = h._init;
                        h._init = function () {
                            e._init.apply(this);
                            m.apply(this)
                        };
                        break;
                    case "destroy": var k = h.destroy;
                        h.destroy = function () {
                            k.apply(this);
                            e.destroy.apply(this)
                        };
                        break;
                    case "options": var n = h.options;
                        h.options = d.extend({}, e.options, n);
                        break;
                    default: if (d.isFunction(h[key]) && d.isFunction(e[key]) && a.test(h[key])) {
                        h[key] = (function (o, p) {
                            return function () {
                                var r = this._super;
                                this._super = e[o];
                                try {
                                    var q = p.apply(this, arguments)
                                } finally {
                                    this._super = r
                                } return q
                            }
                        })(key, h[key])
                    } break
                }
            }
        }
    }
})(jQuery);
(function (b, a) {
    (function (l, h) {
        var w = l.fn.domManip, k = "_tmplitem", x = /^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /, s = {}, g = {}, B, A = { key: 0, data: {} }, z = 0, t = 0, j = [];
        function n(E, D, G, H) {
            var F = { data: H || (D ? D.data : {}), _wrap: D ? D._wrap : null, tmpl: null, parent: D || null, nodes: [], calls: e, nest: d, wrap: q, html: u, update: C };
            if (E) {
                l.extend(F, E, { nodes: [], parent: D })
            } if (G) {
                F.tmpl = G;
                F._ctnt = F._ctnt || F.tmpl(l, F);
                F.key = ++z;
                (j.length ? g : s)[z] = F
            } return F
        } l.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (D, E) {
            l.fn[D] = function (F) {
                var I = [], L = l(F), H, J, G, M, K = this.length === 1 && this[0].parentNode;
                B = s || {};
                if (K && K.nodeType === 11 && K.childNodes.length === 1 && L.length === 1) {
                    L[E](this[0]);
                    I = this
                } else {
                    for (J = 0, G = L.length;
                        J < G;
                        J++) {
                            t = J;
                        H = (J > 0 ? this.clone(true) : this).get();
                        l.fn[E].apply(l(L[J]), H);
                        I = I.concat(H)
                    } t = 0;
                    I = this.pushStack(I, D, L.selector)
                } M = B;
                B = null;
                l.tmpl.complete(M);
                return I
            }
        });
        l.fn.extend({
            tmpl: function (F, E, D) {
                return l.tmpl(this[0], F, E, D)
            }, tmplItem: function () {
                return l.tmplItem(this[0])
            }, template: function (D) {
                return l.template(D, this[0])
            }, domManip: function (F, J, K, E) {
                if (F[0] && F[0].nodeType) {
                    var I = l.makeArray(arguments), H = F.length, G = 0, D;
                    while (G < H && !(D = l.data(F[G++], "tmplItem"))) { } if (H > 1) {
                        I[0] = [l.makeArray(F)]
                    } if (D && t) {
                        I[2] = function (L) {
                            l.tmpl.afterManip(this, L, K)
                        }
                    } w.apply(this, I)
                } else {
                    w.apply(this, arguments)
                } t = 0;
                if (!B) {
                    l.tmpl.complete(s)
                } return this
            }
        });
        l.extend({
            tmpl: function (F, I, H, E) {
                var G, D = !E;
                if (D) {
                    E = A;
                    F = l.template[F] || l.template(null, F);
                    g = {}
                } else {
                    if (!F) {
                        F = E.tmpl;
                        s[E.key] = E;
                        E.nodes = [];
                        if (E.wrapped) {
                            v(E, E.wrapped)
                        } return l(p(E, null, E.tmpl(l, E)))
                    }
                } if (!F) {
                    return []
                } if (typeof I === "function") {
                    I = I.call(E || {})
                } if (H && H.wrapped) {
                    v(H, H.wrapped)
                } G = l.isArray(I) ? l.map(I, function (J) {
                    return J ? n(H, E, F, J) : null
                }) : [n(H, E, F, I)];
                return D ? l(p(E, null, G)) : G
            }, tmplItem: function (E) {
                var D;
                if (E instanceof l) {
                    E = E[0]
                } while (E && E.nodeType === 1 && !(D = l.data(E, "tmplItem")) && (E = E.parentNode)) { } return D || A
            }, template: function (E, D) {
                if (D) {
                    if (typeof D === "string") {
                        D = o(D)
                    } else {
                        if (D instanceof l) {
                            D = D[0] || {}
                        }
                    } if (D.nodeType) {
                        D = l.data(D, "tmpl") || l.data(D, "tmpl", o(D.innerHTML))
                    } return typeof E === "string" ? (l.template[E] = D) : D
                } return E ? (typeof E !== "string" ? l.template(null, E) : (l.template[E] || l.template(null, x.test(E) ? E : l(E)))) : null
            }, encode: function (D) {
                return ("" + D).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;")
            }
        });
        l.extend(l.tmpl, {
            tag: { tmpl: { _default: { $2: "null" }, open: "if($notnull_1){_=_.concat($item.nest($1,$2));}" }, wrap: { _default: { $2: "null" }, open: "$item.calls(_,$1,$2);_=[];", close: "call=$item.calls();_=call._.concat($item.wrap(call,_));" }, each: { _default: { $2: "$index, $value" }, open: "if($notnull_1){$.each($1a,function($2){with(this){", close: "}});}" }, "if": { open: "if(($notnull_1) && $1a){", close: "}" }, "else": { _default: { $1: "true" }, open: "}else if(($notnull_1) && $1a){" }, html: { open: "if($notnull_1){_.push($1a);}" }, "=": { _default: { $1: "$data" }, open: "if($notnull_1){_.push($.encode($1a));}" }, "!": { open: "" } }, complete: function (D) {
                s = {}
            }, afterManip: function y(F, D, G) {
                var E = D.nodeType === 11 ? l.makeArray(D.childNodes) : D.nodeType === 1 ? [D] : [];
                G.call(F, D);
                r(E);
                t++
            }
        });
        function p(D, H, F) {
            var G, E = F ? l.map(F, function (I) {
                return (typeof I === "string") ? (D.key ? I.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g, "$1 " + k + '="' + D.key + '" $2') : I) : p(I, D, I._ctnt)
            }) : D;
            if (H) {
                return E
            } E = E.join("");
            E.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/, function (J, K, I, L) {
                G = l(I).get();
                r(G);
                if (K) {
                    G = c(K).concat(G)
                } if (L) {
                    G = G.concat(c(L))
                }
            });
            return G ? G : c(E)
        } function c(E) {
            var D = document.createElement("div");
            D.innerHTML = E;
            return l.makeArray(D.childNodes)
        } function o(D) {
            return new Function("jQuery", "$item", "var $=jQuery,call,_=[],$data=$item.data;with($data){_.push('" + l.trim(D).replace(/([\\'])/g, "\\$1").replace(/[\r\t\n]/g, " ").replace(/\$\{([^\}]*)\}/g, "{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g, function (L, F, J, G, H, M, I) {
                var O = l.tmpl.tag[J], E, K, N;
                if (!O) {
                    throw "Template command not found: " + J
                } E = O._default || [];
                if (M && !/\w$/.test(H)) {
                    H += M;
                    M = ""
                } if (H) {
                    H = m(H);
                    I = I ? ("," + m(I) + ")") : (M ? ")" : "");
                    K = M ? (H.indexOf(".") > -1 ? H + M : ("(" + H + ").call($item" + I)) : H;
                    N = M ? K : "(typeof(" + H + ")==='function'?(" + H + ").call($item):(" + H + "))"
                } else {
                    N = K = E.$1 || "null"
                } G = m(G);
                return "');" + O[F ? "close" : "open"].split("$notnull_1").join(H ? "typeof(" + H + ")!=='undefined' && (" + H + ")!=null" : "true").split("$1a").join(N).split("$1").join(K).split("$2").join(G ? G.replace(/\s*([^\(]+)\s*(\((.*?)\))?/g, function (Q, P, R, S) {
                    S = S ? ("," + S + ")") : (R ? ")" : "");
                    return S ? ("(" + P + ").call($item" + S) : Q
                }) : (E.$2 || "")) + "_.push('"
            }) + "');}return _;")
        } function v(E, D) {
            E._wrap = p(E, true, l.isArray(D) ? D : [x.test(D) ? D : l(D).html()]).join("")
        } function m(D) {
            return D ? D.replace(/\\'/g, "'").replace(/\\\\/g, "\\") : null
        } function f(D) {
            var E = document.createElement("div");
            E.appendChild(D.cloneNode(true));
            return E.innerHTML
        } function r(J) {
            var L = "_" + t, E, D, H = {}, I, G, F;
            for (I = 0, G = J.length;
                I < G;
                I++) {
                    if ((E = J[I]).nodeType !== 1) {
                        continue
                    } D = E.getElementsByTagName("*");
                for (F = D.length - 1;
                    F >= 0;
                    F--) {
                        K(D[F])
                } K(E)
            } function K(R) {
                var O, Q = R, P, M, N;
                if ((N = R.getAttribute(k))) {
                    while (Q.parentNode && (Q = Q.parentNode).nodeType === 1 && !(O = Q.getAttribute(k))) { } if (O !== N) {
                        Q = Q.parentNode ? (Q.nodeType === 11 ? 0 : (Q.getAttribute(k) || 0)) : 0;
                        if (!(M = s[N])) {
                            M = g[N];
                            M = n(M, s[Q] || g[Q], null, true);
                            M.key = ++z;
                            s[z] = M
                        } if (t) {
                            S(N)
                        }
                    } R.removeAttribute(k)
                } else {
                    if (t && (M = l.data(R, "tmplItem"))) {
                        S(M.key);
                        s[M.key] = M;
                        Q = l.data(R.parentNode, "tmplItem");
                        Q = Q ? Q.key : 0
                    }
                } if (M) {
                    P = M;
                    while (P && P.key != Q) {
                        P.nodes.push(R);
                        P = P.parent
                    } delete M._ctnt;
                    delete M._wrap;
                    l.data(R, "tmplItem", M)
                } function S(T) {
                    T = T + L;
                    M = H[T] = (H[T] || n(M, s[M.parent.key + L] || M.parent, null, true))
                }
            }
        } function e(F, D, G, E) {
            if (!F) {
                return j.pop()
            } j.push({ _: F, tmpl: D, item: this, data: G, options: E })
        } function d(D, F, E) {
            return l.tmpl(l.template(D), F, E, this)
        } function q(F, D) {
            var E = F.options || {};
            E.wrapped = D;
            return l.tmpl(l.template(F.tmpl), F.data, E, F.item)
        } function u(E, F) {
            var D = this._wrap;
            return l.map(l(l.isArray(D) ? D.join("") : D).filter(E || "*"), function (G) {
                return F ? G.innerText || G.textContent : G.outerHTML || f(G)
            })
        } function C() {
            var D = this.nodes;
            l.tmpl(null, null, null, this).insertBefore(D[0]);
            l(D).remove()
        }
    })(b)
})(window.$CQ || window.$ || function () {
    throw new Error("jQuery is not defined")
}(), window.$CQ || window.$);
/*! jCarousel - v0.3.0-beta.5 - 2013-08-20
* http://sorgalla.com/jcarousel
* Copyright (c) 2013 Jan Sorgalla; Licensed MIT */
(function (c) {
    var a = c.jCarousel = {};
    a.version = "0.3.0-beta.5";
    var b = /^([+\-]=)?(.+)$/;
    a.parseTarget = function (f) {
        var d = false, e = typeof f !== "object" ? b.exec(f) : null;
        if (e) {
            f = parseInt(e[2], 10) || 0;
            if (e[1]) {
                d = true;
                if (e[1] === "-=") {
                    f *= -1
                }
            }
        } else {
            if (typeof f !== "object") {
                f = parseInt(f, 10) || 0
            }
        } return { target: f, relative: d }
    };
    a.detectCarousel = function (d) {
        var e;
        while (d.size() > 0) {
            e = d.filter("[data-jcarousel]");
            if (e.size() > 0) {
                return e
            } e = d.find("[data-jcarousel]");
            if (e.size() > 0) {
                return e
            } d = d.parent()
        } return null
    };
    a.base = function (d) {
        return {
            version: a.version, _options: {}, _element: null, _carousel: null, _init: c.noop, _create: c.noop, _destroy: c.noop, _reload: c.noop, create: function () {
                this._element.attr("data-" + d.toLowerCase(), true).data(d, this);
                if (false === this._trigger("create")) {
                    return this
                } this._create();
                this._trigger("createend");
                return this
            }, destroy: function () {
                if (false === this._trigger("destroy")) {
                    return this
                } this._destroy();
                this._trigger("destroyend");
                this._element.removeData(d).removeAttr("data-" + d.toLowerCase());
                return this
            }, reload: function (e) {
                if (false === this._trigger("reload")) {
                    return this
                } if (e) {
                    this.options(e)
                } this._reload();
                this._trigger("reloadend");
                return this
            }, element: function () {
                return this._element
            }, options: function (e, f) {
                if (arguments.length === 0) {
                    return c.extend({}, this._options)
                } if (typeof e === "string") {
                    if (typeof f === "undefined") {
                        return typeof this._options[e] === "undefined" ? null : this._options[e]
                    } this._options[e] = f
                } else {
                    this._options = c.extend({}, this._options, e)
                } return this
            }, carousel: function () {
                if (!this._carousel) {
                    this._carousel = a.detectCarousel(this.options("carousel") || this._element);
                    if (!this._carousel) {
                        c.error('Could not detect carousel for plugin "' + d + '"')
                    }
                } return this._carousel
            }, _trigger: function (g, f, j) {
                var h, e = false;
                j = [this].concat(j || []);
                (f || this._element).each(function () {
                    h = c.Event((g + "." + d).toLowerCase());
                    c(this).trigger(h, j);
                    if (h.isDefaultPrevented()) {
                        e = true
                    }
                });
                return !e
            }
        }
    };
    a.plugin = function (f, d) {
        var e = c[f] = function (h, g) {
            this._element = c(h);
            this.options(g);
            this._init();
            this.create()
        };
        e.fn = e.prototype = c.extend({}, a.base(f), d);
        c.fn[f] = function (h) {
            var g = Array.prototype.slice.call(arguments, 1), j = this;
            if (typeof h === "string") {
                this.each(function () {
                    var k = c(this).data(f);
                    if (!k) {
                        return c.error("Cannot call methods on " + f + ' prior to initialization; attempted to call method "' + h + '"')
                    } if (!c.isFunction(k[h]) || h.charAt(0) === "_") {
                        return c.error('No such method "' + h + '" for ' + f + " instance")
                    } var l = k[h].apply(k, g);
                    if (l !== k && typeof l !== "undefined") {
                        j = l;
                        return false
                    }
                })
            } else {
                this.each(function () {
                    var k = c(this).data(f);
                    if (k instanceof e) {
                        k.reload(h)
                    } else {
                        new e(this, h)
                    }
                })
            } return j
        };
        return e
    }
}(jQuery));
(function (c, b) {
    var a = function (d) {
        return parseFloat(d) || 0
    };
    c.jCarousel.plugin("jcarousel", {
        animating: false, tail: 0, inTail: false, resizeTimer: null, lt: null, vertical: false, rtl: false, circular: false, underflow: false, _options: {
            list: function () {
                return this.element().children().eq(0)
            }, items: function () {
                return this.list().children()
            }, animation: 400, transitions: false, wrap: null, vertical: null, rtl: null, center: false
        }, _list: null, _items: null, _target: null, _first: null, _last: null, _visible: null, _fullyvisible: null, _init: function () {
            var d = this;
            this.onWindowResize = function () {
                if (d.resizeTimer) {
                    clearTimeout(d.resizeTimer)
                } d.resizeTimer = setTimeout(function () {
                    d.reload()
                }, 100)
            };
            return this
        }, _create: function () {
            this._reload();
            c(b).on("resize.jcarousel", this.onWindowResize)
        }, _destroy: function () {
            c(b).off("resize.jcarousel", this.onWindowResize)
        }, _reload: function () {
            this.vertical = this.options("vertical");
            if (this.vertical == null) {
                this.vertical = this.list().height() > this.list().width()
            } this.rtl = this.options("rtl");
            if (this.rtl == null) {
                this.rtl = (function (f) {
                    if (("" + f.attr("dir")).toLowerCase() === "rtl") {
                        return true
                    } var g = false;
                    f.parents("[dir]").each(function () {
                        if ((/rtl/i).test(c(this).attr("dir"))) {
                            g = true;
                            return false
                        }
                    });
                    return g
                }(this._element))
            } this.lt = this.vertical ? "top" : "left";
            this._list = null;
            this._items = null;
            var e = this._target && this.index(this._target) >= 0 ? this._target : this.closest();
            this.circular = this.options("wrap") === "circular";
            this.underflow = false;
            var d = { left: 0, top: 0 };
            if (e.size() > 0) {
                this._prepare(e);
                this.list().find("[data-jcarousel-clone]").remove();
                this._items = null;
                this.underflow = this._fullyvisible.size() >= this.items().size();
                this.circular = this.circular && !this.underflow;
                d[this.lt] = this._position(e) + "px"
            } this.move(d);
            return this
        }, list: function () {
            if (this._list === null) {
                var d = this.options("list");
                this._list = c.isFunction(d) ? d.call(this) : this._element.find(d)
            } return this._list
        }, items: function () {
            if (this._items === null) {
                var d = this.options("items");
                this._items = (c.isFunction(d) ? d.call(this) : this.list().find(d)).not("[data-jcarousel-clone]")
            } return this._items
        }, index: function (d) {
            return this.items().index(d)
        }, closest: function () {
            var d = this, j = this.list().position()[this.lt], h = c(), e = false, g = this.vertical ? "bottom" : (this.rtl ? "left" : "right"), f;
            if (this.rtl && !this.vertical) {
                j = (j + this.list().width() - this.clipping()) * -1
            } this.items().each(function () {
                h = c(this);
                if (e) {
                    return false
                } var k = d.dimension(h);
                j += k;
                if (j >= 0) {
                    f = k - a(h.css("margin-" + g));
                    if ((Math.abs(j) - k + (f / 2)) <= 0) {
                        e = true
                    } else {
                        return false
                    }
                }
            });
            return h
        }, target: function () {
            return this._target
        }, first: function () {
            return this._first
        }, last: function () {
            return this._last
        }, visible: function () {
            return this._visible
        }, fullyvisible: function () {
            return this._fullyvisible
        }, hasNext: function () {
            if (false === this._trigger("hasnext")) {
                return true
            } var e = this.options("wrap"), d = this.items().size() - 1;
            return d >= 0 && ((e && e !== "first") || (this.index(this._last) < d) || (this.tail && !this.inTail)) ? true : false
        }, hasPrev: function () {
            if (false === this._trigger("hasprev")) {
                return true
            } var d = this.options("wrap");
            return this.items().size() > 0 && ((d && d !== "last") || (this.index(this._first) > 0) || (this.tail && this.inTail)) ? true : false
        }, clipping: function () {
            return this._element["inner" + (this.vertical ? "Height" : "Width")]()
        }, dimension: function (d) {
            return d["outer" + (this.vertical ? "Height" : "Width")](true)
        }, scroll: function (v, j, h) {
            if (this.animating) {
                return this
            } if (false === this._trigger("scroll", null, [v, j])) {
                return this
            } if (c.isFunction(j)) {
                h = j;
                j = true
            } var p = c.jCarousel.parseTarget(v);
            if (p.relative) {
                var f = this.items().size() - 1, d = Math.abs(p.target), o = this.options("wrap"), q, m, l, g, u, r, e, t;
                if (p.target > 0) {
                    var n = this.index(this._last);
                    if (n >= f && this.tail) {
                        if (!this.inTail) {
                            this._scrollTail(j, h)
                        } else {
                            if (o === "both" || o === "last") {
                                this._scroll(0, j, h)
                            } else {
                                this._scroll(Math.min(this.index(this._target) + d, f), j, h)
                            }
                        }
                    } else {
                        q = this.index(this._target);
                        if ((this.underflow && q === f && (o === "circular" || o === "both" || o === "last")) || (!this.underflow && n === f && (o === "both" || o === "last"))) {
                            this._scroll(0, j, h)
                        } else {
                            l = q + d;
                            if (this.circular && l > f) {
                                t = f;
                                u = this.items().get(-1);
                                while (t++ < l) {
                                    u = this.items().eq(0);
                                    r = this._visible.index(u) >= 0;
                                    if (r) {
                                        u.after(u.clone(true).attr("data-jcarousel-clone", true))
                                    } this.list().append(u);
                                    if (!r) {
                                        e = {};
                                        e[this.lt] = this.dimension(u) * (this.rtl ? -1 : 1);
                                        this.moveBy(e)
                                    } this._items = null
                                } this._scroll(u, j, h)
                            } else {
                                this._scroll(Math.min(l, f), j, h)
                            }
                        }
                    }
                } else {
                    if (this.inTail) {
                        this._scroll(Math.max((this.index(this._first) - d) + 1, 0), j, h)
                    } else {
                        m = this.index(this._first);
                        q = this.index(this._target);
                        g = this.underflow ? q : m;
                        l = g - d;
                        if (g <= 0 && ((this.underflow && o === "circular") || o === "both" || o === "first")) {
                            this._scroll(f, j, h)
                        } else {
                            if (this.circular && l < 0) {
                                t = l;
                                u = this.items().get(0);
                                while (t++ < 0) {
                                    u = this.items().eq(-1);
                                    r = this._visible.index(u) >= 0;
                                    if (r) {
                                        u.after(u.clone(true).attr("data-jcarousel-clone", true))
                                    } this.list().prepend(u);
                                    this._items = null;
                                    var k = a(this.list().position()[this.lt]), s = this.dimension(u);
                                    if (this.rtl && !this.vertical) {
                                        k += s
                                    } else {
                                        k -= s
                                    } e = {};
                                    e[this.lt] = k + "px";
                                    this.move(e)
                                } this._scroll(u, j, h)
                            } else {
                                this._scroll(Math.max(l, 0), j, h)
                            }
                        }
                    }
                }
            } else {
                this._scroll(p.target, j, h)
            } this._trigger("scrollend");
            return this
        }, moveBy: function (e, f) {
            var d = this.list().position();
            if (e.left) {
                e.left = d.left + a(e.left) + "px"
            } if (e.top) {
                e.top = d.top + a(e.top) + "px"
            } return this.move(e, f)
        }, move: function (n, d) {
            d = d || {};
            var h = this.options("transitions"), p = !!h, m = !!h.transforms, o = !!h.transforms3d, f = d.duration || 0, l = this.list();
            if (!p && f > 0) {
                l.animate(n, d);
                return
            } var e = d.complete || c.noop, k = {};
            if (p) {
                var j = l.css(["transitionDuration", "transitionTimingFunction", "transitionProperty"]), g = e;
                e = function () {
                    c(this).css(j);
                    g.call(this)
                };
                k = {
                    transitionDuration: (f > 0 ? f / 1000 : 0) + "s", transitionTimingFunction: h.easing || d.easing, transitionProperty: f > 0 ? (function () {
                        if (m || o) {
                            return "all"
                        } return n.left ? "left" : "top"
                    })() : "none", transform: "none"
                }
            } if (o) {
                k.transform = "translate3d(" + (n.left || 0) + "," + (n.top || 0) + ",0)"
            } else {
                if (m) {
                    k.transform = "translate(" + (n.left || 0) + "," + (n.top || 0) + ")"
                } else {
                    c.extend(k, n)
                }
            } if (p && f > 0) {
                l.one("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd", e)
            } l.css(k);
            if (f <= 0) {
                l.each(function () {
                    e.call(this)
                })
            }
        }, _scroll: function (f, d, j) {
            if (this.animating) {
                if (c.isFunction(j)) {
                    j.call(this, false)
                } return this
            } if (typeof f !== "object") {
                f = this.items().eq(f)
            } else {
                if (typeof f.jquery === "undefined") {
                    f = c(f)
                }
            } if (f.size() === 0) {
                if (c.isFunction(j)) {
                    j.call(this, false)
                } return this
            } this.inTail = false;
            this._prepare(f);
            var h = this._position(f), g = a(this.list().position()[this.lt]);
            if (h === g) {
                if (c.isFunction(j)) {
                    j.call(this, false)
                } return this
            } var e = {};
            e[this.lt] = h + "px";
            this._animate(e, d, j);
            return this
        }, _scrollTail: function (d, g) {
            if (this.animating || !this.tail) {
                if (c.isFunction(g)) {
                    g.call(this, false)
                } return this
            } var f = this.list().position()[this.lt];
            if (this.rtl) {
                f += this.tail
            } else {
                f -= this.tail
            } this.inTail = true;
            var e = {};
            e[this.lt] = f + "px";
            this._update({ target: this._target.next(), fullyvisible: this._fullyvisible.slice(1).add(this._visible.last()) });
            this._animate(e, d, g);
            return this
        }, _animate: function (f, e, k) {
            k = k || c.noop;
            if (false === this._trigger("animate")) {
                k.call(this, false);
                return this
            } this.animating = true;
            var j = this.options("animation"), d = c.proxy(function () {
                this.animating = false;
                var l = this.list().find("[data-jcarousel-clone]");
                if (l.size() > 0) {
                    l.remove();
                    this._reload()
                } this._trigger("animateend");
                k.call(this, true)
            }, this);
            var h = typeof j === "object" ? c.extend({}, j) : { duration: j }, g = h.complete || c.noop;
            if (e === false) {
                h.duration = 0
            } else {
                if (typeof c.fx.speeds[h.duration] !== "undefined") {
                    h.duration = c.fx.speeds[h.duration]
                }
            } h.complete = function () {
                d();
                g.call(this)
            };
            this.move(f, h);
            return this
        }, _prepare: function (o) {
            var l = this.index(o), n = l, e = this.dimension(o), f = this.clipping(), k = this.vertical ? "bottom" : (this.rtl ? "left" : "right"), d = this.options("center"), h = { target: o, first: o, last: o, visible: o, fullyvisible: e <= f ? o : c() }, p, j, g;
            if (d) {
                e /= 2;
                f /= 2
            } if (e < f) {
                while (true) {
                    p = this.items().eq(++n);
                    if (p.size() === 0) {
                        if (!this.circular) {
                            break
                        } p = this.items().eq(0);
                        if (o.get(0) === p.get(0)) {
                            break
                        } j = this._visible.index(p) >= 0;
                        if (j) {
                            p.after(p.clone(true).attr("data-jcarousel-clone", true))
                        } this.list().append(p);
                        if (!j) {
                            var m = {};
                            m[this.lt] = this.dimension(p) * (this.rtl ? -1 : 1);
                            this.moveBy(m)
                        } this._items = null
                    } e += this.dimension(p);
                    h.last = p;
                    h.visible = h.visible.add(p);
                    g = a(p.css("margin-" + k));
                    if ((e - g) <= f) {
                        h.fullyvisible = h.fullyvisible.add(p)
                    } if (e >= f) {
                        break
                    }
                }
            } if (!this.circular && !d && e < f) {
                n = l;
                while (true) {
                    if (--n < 0) {
                        break
                    } p = this.items().eq(n);
                    if (p.size() === 0) {
                        break
                    } e += this.dimension(p);
                    h.first = p;
                    h.visible = h.visible.add(p);
                    g = a(p.css("margin-" + k));
                    if ((e - g) <= f) {
                        h.fullyvisible = h.fullyvisible.add(p)
                    } if (e >= f) {
                        break
                    }
                }
            } this._update(h);
            this.tail = 0;
            if (!d && this.options("wrap") !== "circular" && this.options("wrap") !== "custom" && this.index(h.last) === (this.items().size() - 1)) {
                e -= a(h.last.css("margin-" + k));
                if (e > f) {
                    this.tail = e - f
                }
            } return this
        }, _position: function (f) {
            var g = this._first, h = g.position()[this.lt], e = this.options("center"), d = e ? (this.clipping() / 2) - (this.dimension(g) / 2) : 0;
            if (this.rtl && !this.vertical) {
                h -= this.clipping() - this.dimension(g);
                h += d
            } else {
                h -= d
            } if (!e && (this.index(f) > this.index(g) || this.inTail) && this.tail) {
                h = this.rtl ? h - this.tail : h + this.tail;
                this.inTail = true
            } else {
                this.inTail = false
            } return -h
        }, _update: function (j) {
            var e = this, g = { target: this._target || c(), first: this._first || c(), last: this._last || c(), visible: this._visible || c(), fullyvisible: this._fullyvisible || c() }, d = this.index(j.first || g.first) < this.index(g.first), f, h = function (l) {
                var k = [], m = [];
                j[l].each(function () {
                    if (g[l].index(this) < 0) {
                        k.push(this)
                    }
                });
                g[l].each(function () {
                    if (j[l].index(this) < 0) {
                        m.push(this)
                    }
                });
                if (d) {
                    k = k.reverse()
                } else {
                    m = m.reverse()
                } e._trigger("item" + l + "in", c(k));
                e._trigger("item" + l + "out", c(m));
                e["_" + l] = j[l]
            };
            for (f in j) {
                h(f)
            } return this
        }
    })
}(jQuery, window));
(function (a) {
    a.jcarousel.fn.scrollIntoView = function (j, c, n) {
        var l = a.jCarousel.parseTarget(j), f = this.index(this._fullyvisible.first()), m = this.index(this._fullyvisible.last()), h;
        if (l.relative) {
            h = l.target < 0 ? Math.max(0, f + l.target) : m + l.target
        } else {
            h = typeof l.target !== "object" ? l.target : this.index(l.target)
        } if (h < f) {
            return this.scroll(h, c, n)
        } if (h >= f && h <= m) {
            if (a.isFunction(n)) {
                n.call(this, false)
            } return this
        } var k = this.items(), d = this.clipping(), g = this.vertical ? "bottom" : (this.rtl ? "left" : "right"), b = 0, o;
        while (true) {
            o = k.eq(h);
            if (o.size() === 0) {
                break
            } b += this.dimension(o);
            if (b >= d) {
                var e = parseFloat(o.css("margin-" + g)) || 0;
                if ((b - e) !== d) {
                    h++
                } break
            } if (h <= 0) {
                break
            } h--
        } return this.scroll(h, c, n)
    }
}(jQuery));
(function (a) {
    a.jCarousel.plugin("jcarouselControl", {
        _options: { target: "+=1", event: "click", method: "scroll" }, _active: null, _init: function () {
            this.onDestroy = a.proxy(function () {
                this._destroy();
                this.carousel().one("createend.jcarousel", a.proxy(this._create, this))
            }, this);
            this.onReload = a.proxy(this._reload, this);
            this.onEvent = a.proxy(function (b) {
                b.preventDefault();
                var c = this.options("method");
                if (a.isFunction(c)) {
                    c.call(this)
                } else {
                    this.carousel().jcarousel(this.options("method"), this.options("target"))
                }
            }, this)
        }, _create: function () {
            this.carousel().one("destroy.jcarousel", this.onDestroy).on("reloadend.jcarousel scrollend.jcarousel", this.onReload);
            this._element.on(this.options("event") + ".jcarouselcontrol", this.onEvent);
            this._reload()
        }, _destroy: function () {
            this._element.off(".jcarouselcontrol", this.onEvent);
            this.carousel().off("destroy.jcarousel", this.onDestroy).off("reloadend.jcarousel scrollend.jcarousel", this.onReload)
        }, _reload: function () {
            var b = a.jCarousel.parseTarget(this.options("target")), e = this.carousel(), d;
            if (b.relative) {
                d = e.jcarousel(b.target > 0 ? "hasNext" : "hasPrev")
            } else {
                var c = typeof b.target !== "object" ? e.jcarousel("items").eq(b.target) : b.target;
                d = e.jcarousel("target").index(c) >= 0
            } if (this._active !== d) {
                this._trigger(d ? "active" : "inactive");
                this._active = d
            } return this
        }
    })
}(jQuery));
(function (a) {
    a.jCarousel.plugin("jcarouselPagination", {
        _options: {
            perPage: null, item: function (b) {
                return '<a href="#' + b + '">' + b + "</a>"
            }, event: "click", method: "scroll"
        }, _pages: {}, _items: {}, _currentPage: null, _init: function () {
            this.onDestroy = a.proxy(function () {
                this._destroy();
                this.carousel().one("createend.jcarousel", a.proxy(this._create, this))
            }, this);
            this.onReload = a.proxy(this._reload, this);
            this.onScroll = a.proxy(this._update, this)
        }, _create: function () {
            this.carousel().one("destroy.jcarousel", this.onDestroy).on("reloadend.jcarousel", this.onReload).on("scrollend.jcarousel", this.onScroll);
            this._reload()
        }, _destroy: function () {
            this._clear();
            this.carousel().off("destroy.jcarousel", this.onDestroy).off("reloadend.jcarousel", this.onReload).off("scrollend.jcarousel", this.onScroll)
        }, _reload: function () {
            var g = this.options("perPage");
            this._pages = {};
            this._items = {};
            if (a.isFunction(g)) {
                g = g.call(this)
            } if (g == null) {
                this._pages = this._calculatePages()
            } else {
                var b = parseInt(g, 10) || 0, f = this.carousel().jcarousel("items"), e = 1, d = 0, l;
                while (true) {
                    l = f.eq(d++);
                    if (l.size() === 0) {
                        break
                    } if (!this._pages[e]) {
                        this._pages[e] = l
                    } else {
                        this._pages[e] = this._pages[e].add(l)
                    } if (d % b === 0) {
                        e++
                    }
                }
            } this._clear();
            var k = this, j = this.carousel().data("jcarousel"), c = this._element, h = this.options("item");
            a.each(this._pages, function (o, n) {
                var m = k._items[o] = a(h.call(k, o, n));
                m.on(k.options("event") + ".jcarouselpagination", a.proxy(function () {
                    var r = n.eq(0);
                    if (j.circular) {
                        var p = j.index(j.target()), q = j.index(r);
                        if (parseFloat(o) > parseFloat(k._currentPage)) {
                            if (q < p) {
                                r = "+=" + (j.items().size() - p + q)
                            }
                        } else {
                            if (q > p) {
                                r = "-=" + (p + (j.items().size() - q))
                            }
                        }
                    } j[this.options("method")](r)
                }, k));
                c.append(m)
            });
            this._update()
        }, _update: function () {
            var c = this.carousel().jcarousel("target"), b;
            a.each(this._pages, function (e, d) {
                d.each(function () {
                    if (c.is(this)) {
                        b = e;
                        return false
                    }
                });
                if (b) {
                    return false
                }
            });
            if (this._currentPage !== b) {
                this._trigger("inactive", this._items[this._currentPage]);
                this._trigger("active", this._items[b])
            } this._currentPage = b
        }, items: function () {
            return this._items
        }, _clear: function () {
            this._element.empty();
            this._currentPage = null
        }, _calculatePages: function () {
            var j = this.carousel().data("jcarousel"), e = j.items(), f = j.clipping(), d = 0, c = 0, g = 1, b = {}, h;
            while (true) {
                h = e.eq(c++);
                if (h.size() === 0) {
                    break
                } if (!b[g]) {
                    b[g] = h
                } else {
                    b[g] = b[g].add(h)
                } d += j.dimension(h);
                if (d >= f) {
                    g++;
                    d = 0
                }
            } return b
        }
    })
}(jQuery));
(function (a) {
    a.jCarousel.plugin("jcarouselAutoscroll", {
        _options: { target: "+=1", interval: 3000, autostart: true }, _timer: null, _init: function () {
            this.onDestroy = a.proxy(function () {
                this._destroy();
                this.carousel().one("createend.jcarousel", a.proxy(this._create, this))
            }, this);
            this.onAnimateEnd = a.proxy(this.start, this)
        }, _create: function () {
            this.carousel().one("destroy.jcarousel", this.onDestroy);
            if (this.options("autostart")) {
                this.start()
            }
        }, _destroy: function () {
            this.stop();
            this.carousel().off("destroy.jcarousel", this.onDestroy)
        }, start: function () {
            this.stop();
            this.carousel().one("animateend.jcarousel", this.onAnimateEnd);
            this._timer = setTimeout(a.proxy(function () {
                this.carousel().jcarousel("scroll", this.options("target"))
            }, this), this.options("interval"));
            return this
        }, stop: function () {
            if (this._timer) {
                this._timer = clearTimeout(this._timer)
            } this.carousel().off("animateend.jcarousel", this.onAnimateEnd);
            return this
        }
    })
}(jQuery));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" ? module.exports = a() : typeof define === "function" && define.amd ? define(a) : b.moment = a()
}(this, (function () {
    var cb;
    function eC() {
        return cb.apply(null, arguments)
    } function aS(e4) {
        cb = e4
    } function W(e4) {
        return e4 instanceof Array || Object.prototype.toString.call(e4) === "[object Array]"
    } function w(e4) {
        return e4 != null && Object.prototype.toString.call(e4) === "[object Object]"
    } function ci(e5) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(e5).length === 0)
        } else {
            var e4;
            for (e4 in e5) {
                if (e5.hasOwnProperty(e4)) {
                    return false
                }
            } return true
        }
    } function G(e4) {
        return e4 === void 0
    } function r(e4) {
        return typeof e4 === "number" || Object.prototype.toString.call(e4) === "[object Number]"
    } function ev(e4) {
        return e4 instanceof Date || Object.prototype.toString.call(e4) === "[object Date]"
    } function bo(e4, e7) {
        var e6 = [], e5;
        for (e5 = 0;
            e5 < e4.length;
            ++e5) {
                e6.push(e7(e4[e5], e5))
        } return e6
    } function dl(e5, e4) {
        return Object.prototype.hasOwnProperty.call(e5, e4)
    } function eX(e5, e4) {
        for (var e6 in e4) {
            if (dl(e4, e6)) {
                e5[e6] = e4[e6]
            }
        } if (dl(e4, "toString")) {
            e5.toString = e4.toString
        } if (dl(e4, "valueOf")) {
            e5.valueOf = e4.valueOf
        } return e5
    } function cw(e6, e7, e4, e5) {
        return ad(e6, e7, e4, e5, true).utc()
    } function cs() {
        return { empty: false, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: false, invalidMonth: null, invalidFormat: false, userInvalidated: false, iso: false, parsedDateParts: [], meridiem: null, rfc2822: false, weekdayMismatch: false }
    } function bc(e4) {
        if (e4._pf == null) {
            e4._pf = cs()
        } return e4._pf
    } var dq;
    if (Array.prototype.some) {
        dq = Array.prototype.some
    } else {
        dq = function (e5) {
            var e7 = Object(this);
            var e4 = e7.length >>> 0;
            for (var e6 = 0;
                e6 < e4;
                e6++) {
                    if (e6 in e7 && e5.call(this, e7[e6], e6, e7)) {
                        return true
                    }
            } return false
        }
    } function ao(e5) {
        if (e5._isValid == null) {
            var e6 = bc(e5);
            var e7 = dq.call(e6.parsedDateParts, function (e8) {
                return e8 != null
            });
            var e4 = !isNaN(e5._d.getTime()) && e6.overflow < 0 && !e6.empty && !e6.invalidMonth && !e6.invalidWeekday && !e6.weekdayMismatch && !e6.nullInput && !e6.invalidFormat && !e6.userInvalidated && (!e6.meridiem || (e6.meridiem && e7));
            if (e5._strict) {
                e4 = e4 && e6.charsLeftOver === 0 && e6.unusedTokens.length === 0 && e6.bigHour === undefined
            } if (Object.isFrozen == null || !Object.isFrozen(e5)) {
                e5._isValid = e4
            } else {
                return e4
            }
        } return e5._isValid
    } function O(e5) {
        var e4 = cw(NaN);
        if (e5 != null) {
            eX(bc(e4), e5)
        } else {
            bc(e4).userInvalidated = true
        } return e4
    } var cT = eC.momentProperties = [];
    function q(e8, e7) {
        var e4, e6, e5;
        if (!G(e7._isAMomentObject)) {
            e8._isAMomentObject = e7._isAMomentObject
        } if (!G(e7._i)) {
            e8._i = e7._i
        } if (!G(e7._f)) {
            e8._f = e7._f
        } if (!G(e7._l)) {
            e8._l = e7._l
        } if (!G(e7._strict)) {
            e8._strict = e7._strict
        } if (!G(e7._tzm)) {
            e8._tzm = e7._tzm
        } if (!G(e7._isUTC)) {
            e8._isUTC = e7._isUTC
        } if (!G(e7._offset)) {
            e8._offset = e7._offset
        } if (!G(e7._pf)) {
            e8._pf = bc(e7)
        } if (!G(e7._locale)) {
            e8._locale = e7._locale
        } if (cT.length > 0) {
            for (e4 = 0;
                e4 < cT.length;
                e4++) {
                    e6 = cT[e4];
                e5 = e7[e6];
                if (!G(e5)) {
                    e8[e6] = e5
                }
            }
        } return e8
    } var de = false;
    function eq(e4) {
        q(this, e4);
        this._d = new Date(e4._d != null ? e4._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN)
        } if (de === false) {
            de = true;
            eC.updateOffset(this);
            de = false
        }
    } function cc(e4) {
        return e4 instanceof eq || (e4 != null && e4._isAMomentObject != null)
    } function di(e4) {
        if (e4 < 0) {
            return Math.ceil(e4) || 0
        } else {
            return Math.floor(e4)
        }
    } function cQ(e4) {
        var e6 = +e4, e5 = 0;
        if (e6 !== 0 && isFinite(e6)) {
            e5 = di(e6)
        } return e5
    } function b0(e9, e8, e5) {
        var e4 = Math.min(e9.length, e8.length), e6 = Math.abs(e9.length - e8.length), fa = 0, e7;
        for (e7 = 0;
            e7 < e4;
            e7++) {
                if ((e5 && e9[e7] !== e8[e7]) || (!e5 && cQ(e9[e7]) !== cQ(e8[e7]))) {
                    fa++
                }
        } return fa + e6
    } function dd(e4) {
        if (eC.suppressDeprecationWarnings === false && (typeof console !== "undefined") && console.warn) {
            console.warn("Deprecation warning: " + e4)
        }
    } function ef(e5, e4) {
        var e6 = true;
        return eX(function () {
            if (eC.deprecationHandler != null) {
                eC.deprecationHandler(null, e5)
            } if (e6) {
                var e8 = [];
                var e7;
                for (var fa = 0;
                    fa < arguments.length;
                    fa++) {
                        e7 = "";
                    if (typeof arguments[fa] === "object") {
                        e7 += "\n[" + fa + "] ";
                        for (var e9 in arguments[0]) {
                            e7 += e9 + ": " + arguments[0][e9] + ", "
                        } e7 = e7.slice(0, -2)
                    } else {
                        e7 = arguments[fa]
                    } e8.push(e7)
                } dd(e5 + "\nArguments: " + Array.prototype.slice.call(e8).join("") + "\n" + (new Error()).stack);
                e6 = false
            } return e4.apply(this, arguments)
        }, e4)
    } var ab = {};
    function eP(e4, e5) {
        if (eC.deprecationHandler != null) {
            eC.deprecationHandler(e4, e5)
        } if (!ab[e4]) {
            dd(e5);
            ab[e4] = true
        }
    } eC.suppressDeprecationWarnings = false;
    eC.deprecationHandler = null;
    function a7(e4) {
        return e4 instanceof Function || Object.prototype.toString.call(e4) === "[object Function]"
    } function dn(e4) {
        var e6, e5;
        for (e5 in e4) {
            e6 = e4[e5];
            if (a7(e6)) {
                this[e5] = e6
            } else {
                this["_" + e5] = e6
            }
        } this._config = e4;
        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + (/\d{1,2}/).source)
    } function d7(e6, e4) {
        var e5 = eX({}, e6), e7;
        for (e7 in e4) {
            if (dl(e4, e7)) {
                if (w(e6[e7]) && w(e4[e7])) {
                    e5[e7] = {};
                    eX(e5[e7], e6[e7]);
                    eX(e5[e7], e4[e7])
                } else {
                    if (e4[e7] != null) {
                        e5[e7] = e4[e7]
                    } else {
                        delete e5[e7]
                    }
                }
            }
        } for (e7 in e6) {
            if (dl(e6, e7) && !dl(e4, e7) && w(e6[e7])) {
                e5[e7] = eX({}, e5[e7])
            }
        } return e5
    } function cD(e4) {
        if (e4 != null) {
            this.set(e4)
        }
    } var bX;
    if (Object.keys) {
        bX = Object.keys
    } else {
        bX = function (e6) {
            var e5, e4 = [];
            for (e5 in e6) {
                if (dl(e6, e5)) {
                    e4.push(e5)
                }
            } return e4
        }
    } var ck = { sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[Last] dddd [at] LT", sameElse: "L" };
    function d(e6, e7, e5) {
        var e4 = this._calendar[e6] || this._calendar.sameElse;
        return a7(e4) ? e4.call(e7, e5) : e4
    } var dX = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" };
    function cK(e4) {
        var e5 = this._longDateFormat[e4], e6 = this._longDateFormat[e4.toUpperCase()];
        if (e5 || !e6) {
            return e5
        } this._longDateFormat[e4] = e6.replace(/MMMM|MM|DD|dddd/g, function (e7) {
            return e7.slice(1)
        });
        return this._longDateFormat[e4]
    } var am = "Invalid date";
    function eo() {
        return this._invalidDate
    } var b7 = "%d";
    var e2 = /\d{1,2}/;
    function eA(e4) {
        return this._ordinal.replace("%d", e4)
    } var ez = { future: "in %s", past: "%s ago", s: "a few seconds", ss: "%d seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years" };
    function U(e7, e6, e5, e8) {
        var e4 = this._relativeTime[e5];
        return (a7(e4)) ? e4(e7, e6, e5, e8) : e4.replace(/%d/i, e7)
    } function dY(e6, e4) {
        var e5 = this._relativeTime[e6 > 0 ? "future" : "past"];
        return a7(e5) ? e5(e4) : e5.replace(/%s/i, e4)
    } var cL = {};
    function cf(e6, e4) {
        var e5 = e6.toLowerCase();
        cL[e5] = cL[e5 + "s"] = cL[e4] = e6
    } function cP(e4) {
        return typeof e4 === "string" ? cL[e4] || cL[e4.toLowerCase()] : undefined
    } function dL(e6) {
        var e5 = {}, e4, e7;
        for (e7 in e6) {
            if (dl(e6, e7)) {
                e4 = cP(e7);
                if (e4) {
                    e5[e4] = e6[e7]
                }
            }
        } return e5
    } var bt = {};
    function dW(e5, e4) {
        bt[e5] = e4
    } function bq(e4) {
        var e5 = [];
        for (var e6 in e4) {
            e5.push({ unit: e6, priority: bt[e6] })
        } e5.sort(function (e8, e7) {
            return e8.priority - e7.priority
        });
        return e5
    } function cp(e9, e8, e5) {
        var e7 = "" + Math.abs(e9), e6 = e8 - e7.length, e4 = e9 >= 0;
        return (e4 ? (e5 ? "+" : "") : "-") + Math.pow(10, Math.max(0, e6)).toString().substr(1) + e7
    } var bR = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
    var bQ = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
    var bP = {};
    var ba = {};
    function cy(e5, e6, e4, e8) {
        var e7 = e8;
        if (typeof e8 === "string") {
            e7 = function () {
                return this[e8]()
            }
        } if (e5) {
            ba[e5] = e7
        } if (e6) {
            ba[e6[0]] = function () {
                return cp(e7.apply(this, arguments), e6[1], e6[2])
            }
        } if (e4) {
            ba[e4] = function () {
                return this.localeData().ordinal(e7.apply(this, arguments), e5)
            }
        }
    } function ax(e4) {
        if (e4.match(/\[[\s\S]/)) {
            return e4.replace(/^\[|\]$/g, "")
        } return e4.replace(/\\/g, "")
    } function by(e6) {
        var e7 = e6.match(bR), e4, e5;
        for (e4 = 0, e5 = e7.length;
            e4 < e5;
            e4++) {
                if (ba[e7[e4]]) {
                    e7[e4] = ba[e7[e4]]
                } else {
                    e7[e4] = ax(e7[e4])
                }
        } return function (fa) {
            var e8 = "", e9;
            for (e9 = 0;
                e9 < e5;
                e9++) {
                    e8 += a7(e7[e9]) ? e7[e9].call(fa, e6) : e7[e9]
            } return e8
        }
    } function ag(e4, e5) {
        if (!e4.isValid()) {
            return e4.localeData().invalidDate()
        } e5 = bG(e5, e4.localeData());
        bP[e5] = bP[e5] || by(e5);
        return bP[e5](e4)
    } function bG(e7, e4) {
        var e5 = 5;
        function e6(e8) {
            return e4.longDateFormat(e8) || e8
        } bQ.lastIndex = 0;
        while (e5 >= 0 && bQ.test(e7)) {
            e7 = e7.replace(bQ, e6);
            bQ.lastIndex = 0;
            e5 -= 1
        } return e7
    } var aL = /\d/;
    var aK = /\d\d/;
    var aJ = /\d{3}/;
    var aI = /\d{4}/;
    var aH = /[+-]?\d{6}/;
    var ar = /\d\d?/;
    var cl = /\d\d\d\d?/;
    var ee = /\d\d\d\d\d\d?/;
    var aq = /\d{1,3}/;
    var ap = /\d{1,4}/;
    var an = /[+-]?\d{1,6}/;
    var s = /\d+/;
    var C = /[+-]?\d+/;
    var bI = /Z|[+-]\d\d:?\d\d/gi;
    var cF = /Z|[+-]\d\d(?::?\d\d)?/gi;
    var eQ = /[+-]?\d+(\.\d{1,3})?/;
    var a9 = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
    var a4 = {};
    function be(e4, e5, e6) {
        a4[e4] = a7(e5) ? e5 : function (e8, e7) {
            return (e8 && e6) ? e6 : e5
        }
    } function bF(e5, e4) {
        if (!dl(a4, e5)) {
            return new RegExp(dj(e5))
        } return a4[e5](e4._strict, e4._locale)
    } function dj(e4) {
        return ch(e4.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (e5, e9, e8, e7, e6) {
            return e9 || e8 || e7 || e6
        }))
    } function ch(e4) {
        return e4.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
    } var g = {};
    function bV(e5, e7) {
        var e4, e6 = e7;
        if (typeof e5 === "string") {
            e5 = [e5]
        } if (r(e7)) {
            e6 = function (e8, e9) {
                e9[e7] = cQ(e8)
            }
        } for (e4 = 0;
            e4 < e5.length;
            e4++) {
                g[e5[e4]] = e6
        }
    } function Y(e4, e5) {
        bV(e4, function (e6, e9, e7, e8) {
            e7._w = e7._w || {};
            e5(e6, e7._w, e7, e8)
        })
    } function v(e6, e4, e5) {
        if (e4 != null && dl(g, e6)) {
            g[e6](e4, e5._a, e5, e6)
        }
    } var eR = 0;
    var j = 1;
    var et = 2;
    var eG = 3;
    var dI = 4;
    var aj = 5;
    var bK = 6;
    var cj = 7;
    var h = 8;
    cy("Y", 0, 0, function () {
        var e4 = this.year();
        return e4 <= 9999 ? "" + e4 : "+" + e4
    });
    cy(0, ["YY", 2], 0, function () {
        return this.year() % 100
    });
    cy(0, ["YYYY", 4], 0, "year");
    cy(0, ["YYYYY", 5], 0, "year");
    cy(0, ["YYYYYY", 6, true], 0, "year");
    cf("year", "y");
    dW("year", 1);
    be("Y", C);
    be("YY", ar, aK);
    be("YYYY", ap, aI);
    be("YYYYY", an, aH);
    be("YYYYYY", an, aH);
    bV(["YYYYY", "YYYYYY"], eR);
    bV("YYYY", function (e4, e5) {
        e5[eR] = e4.length === 2 ? eC.parseTwoDigitYear(e4) : cQ(e4)
    });
    bV("YY", function (e4, e5) {
        e5[eR] = eC.parseTwoDigitYear(e4)
    });
    bV("Y", function (e4, e5) {
        e5[eR] = parseInt(e4, 10)
    });
    function dG(e4) {
        return d0(e4) ? 366 : 365
    } function d0(e4) {
        return (e4 % 4 === 0 && e4 % 100 !== 0) || e4 % 400 === 0
    } eC.parseTwoDigitYear = function (e4) {
        return cQ(e4) + (cQ(e4) > 68 ? 1900 : 2000)
    };
    var cH = ec("FullYear", true);
    function cW() {
        return d0(this.year())
    } function ec(e4, e5) {
        return function (e6) {
            if (e6 != null) {
                aN(this, e4, e6);
                eC.updateOffset(this, e5);
                return this
            } else {
                return dB(this, e4)
            }
        }
    } function dB(e5, e4) {
        return e5.isValid() ? e5._d["get" + (e5._isUTC ? "UTC" : "") + e4]() : NaN
    } function aN(e5, e4, e6) {
        if (e5.isValid() && !isNaN(e6)) {
            if (e4 === "FullYear" && d0(e5.year()) && e5.month() === 1 && e5.date() === 29) {
                e5._d["set" + (e5._isUTC ? "UTC" : "") + e4](e6, e5.month(), bH(e6, e5.month()))
            } else {
                e5._d["set" + (e5._isUTC ? "UTC" : "") + e4](e6)
            }
        }
    } function aA(e4) {
        e4 = cP(e4);
        if (a7(this[e4])) {
            return this[e4]()
        } return this
    } function au(e4, e7) {
        if (typeof e4 === "object") {
            e4 = dL(e4);
            var e6 = bq(e4);
            for (var e5 = 0;
                e5 < e6.length;
                e5++) {
                    this[e6[e5].unit](e4[e6[e5].unit])
            }
        } else {
            e4 = cP(e4);
            if (a7(this[e4])) {
                return this[e4](e7)
            }
        } return this
    } function eb(e5, e4) {
        return ((e5 % e4) + e4) % e4
    } var cR;
    if (Array.prototype.indexOf) {
        cR = Array.prototype.indexOf
    } else {
        cR = function (e5) {
            var e4;
            for (e4 = 0;
                e4 < this.length;
                ++e4) {
                    if (this[e4] === e5) {
                        return e4
                    }
            } return -1
        }
    } function bH(e5, e6) {
        if (isNaN(e5) || isNaN(e6)) {
            return NaN
        } var e4 = eb(e6, 12);
        e5 += (e6 - e4) / 12;
        return e4 === 1 ? (d0(e5) ? 29 : 28) : (31 - e4 % 7 % 2)
    } cy("M", ["MM", 2], "Mo", function () {
        return this.month() + 1
    });
    cy("MMM", 0, 0, function (e4) {
        return this.localeData().monthsShort(this, e4)
    });
    cy("MMMM", 0, 0, function (e4) {
        return this.localeData().months(this, e4)
    });
    cf("month", "M");
    dW("month", 8);
    be("M", ar);
    be("MM", ar, aK);
    be("MMM", function (e5, e4) {
        return e4.monthsShortRegex(e5)
    });
    be("MMMM", function (e5, e4) {
        return e4.monthsRegex(e5)
    });
    bV(["M", "MM"], function (e4, e5) {
        e5[j] = cQ(e4) - 1
    });
    bV(["MMM", "MMMM"], function (e4, e8, e5, e6) {
        var e7 = e5._locale.monthsParse(e4, e6, e5._strict);
        if (e7 != null) {
            e8[j] = e7
        } else {
            bc(e5).invalidMonth = e4
        }
    });
    var b4 = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var Q = "January_February_March_April_May_June_July_August_September_October_November_December".split("_");
    function a2(e4, e5) {
        if (!e4) {
            return W(this._months) ? this._months : this._months.standalone
        } return W(this._months) ? this._months[e4.month()] : this._months[(this._months.isFormat || b4).test(e5) ? "format" : "standalone"][e4.month()]
    } var d1 = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
    function bb(e4, e5) {
        if (!e4) {
            return W(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone
        } return W(this._monthsShort) ? this._monthsShort[e4.month()] : this._monthsShort[b4.test(e5) ? "format" : "standalone"][e4.month()]
    } function bD(e5, fa, e4) {
        var e7, e8, e9, e6 = e5.toLocaleLowerCase();
        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (e7 = 0;
                e7 < 12;
                ++e7) {
                    e9 = cw([2000, e7]);
                this._shortMonthsParse[e7] = this.monthsShort(e9, "").toLocaleLowerCase();
                this._longMonthsParse[e7] = this.months(e9, "").toLocaleLowerCase()
            }
        } if (e4) {
            if (fa === "MMM") {
                e8 = cR.call(this._shortMonthsParse, e6);
                return e8 !== -1 ? e8 : null
            } else {
                e8 = cR.call(this._longMonthsParse, e6);
                return e8 !== -1 ? e8 : null
            }
        } else {
            if (fa === "MMM") {
                e8 = cR.call(this._shortMonthsParse, e6);
                if (e8 !== -1) {
                    return e8
                } e8 = cR.call(this._longMonthsParse, e6);
                return e8 !== -1 ? e8 : null
            } else {
                e8 = cR.call(this._longMonthsParse, e6);
                if (e8 !== -1) {
                    return e8
                } e8 = cR.call(this._shortMonthsParse, e6);
                return e8 !== -1 ? e8 : null
            }
        }
    } function db(e5, e9, e4) {
        var e6, e8, e7;
        if (this._monthsParseExact) {
            return bD.call(this, e5, e9, e4)
        } if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = []
        } for (e6 = 0;
            e6 < 12;
            e6++) {
                e8 = cw([2000, e6]);
            if (e4 && !this._longMonthsParse[e6]) {
                this._longMonthsParse[e6] = new RegExp("^" + this.months(e8, "").replace(".", "") + "$", "i");
                this._shortMonthsParse[e6] = new RegExp("^" + this.monthsShort(e8, "").replace(".", "") + "$", "i")
            } if (!e4 && !this._monthsParse[e6]) {
                e7 = "^" + this.months(e8, "") + "|^" + this.monthsShort(e8, "");
                this._monthsParse[e6] = new RegExp(e7.replace(".", ""), "i")
            } if (e4 && e9 === "MMMM" && this._longMonthsParse[e6].test(e5)) {
                return e6
            } else {
                if (e4 && e9 === "MMM" && this._shortMonthsParse[e6].test(e5)) {
                    return e6
                } else {
                    if (!e4 && this._monthsParse[e6].test(e5)) {
                        return e6
                    }
                }
            }
        }
    } function aW(e4, e5) {
        var e6;
        if (!e4.isValid()) {
            return e4
        } if (typeof e5 === "string") {
            if (/^\d+$/.test(e5)) {
                e5 = cQ(e5)
            } else {
                e5 = e4.localeData().monthsParse(e5);
                if (!r(e5)) {
                    return e4
                }
            }
        } e6 = Math.min(e4.date(), bH(e4.year(), e5));
        e4._d["set" + (e4._isUTC ? "UTC" : "") + "Month"](e5, e6);
        return e4
    } function eF(e4) {
        if (e4 != null) {
            aW(this, e4);
            eC.updateOffset(this, true);
            return this
        } else {
            return dB(this, "Month")
        }
    } function bN() {
        return bH(this.year(), this.month())
    } var dg = a9;
    function dk(e4) {
        if (this._monthsParseExact) {
            if (!dl(this, "_monthsRegex")) {
                dm.call(this)
            } if (e4) {
                return this._monthsShortStrictRegex
            } else {
                return this._monthsShortRegex
            }
        } else {
            if (!dl(this, "_monthsShortRegex")) {
                this._monthsShortRegex = dg
            } return this._monthsShortStrictRegex && e4 ? this._monthsShortStrictRegex : this._monthsShortRegex
        }
    } var ex = a9;
    function cZ(e4) {
        if (this._monthsParseExact) {
            if (!dl(this, "_monthsRegex")) {
                dm.call(this)
            } if (e4) {
                return this._monthsStrictRegex
            } else {
                return this._monthsRegex
            }
        } else {
            if (!dl(this, "_monthsRegex")) {
                this._monthsRegex = ex
            } return this._monthsStrictRegex && e4 ? this._monthsStrictRegex : this._monthsRegex
        }
    } function dm() {
        function e9(fb, fa) {
            return fa.length - fb.length
        } var e8 = [], e4 = [], e7 = [], e5, e6;
        for (e5 = 0;
            e5 < 12;
            e5++) {
                e6 = cw([2000, e5]);
            e8.push(this.monthsShort(e6, ""));
            e4.push(this.months(e6, ""));
            e7.push(this.months(e6, ""));
            e7.push(this.monthsShort(e6, ""))
        } e8.sort(e9);
        e4.sort(e9);
        e7.sort(e9);
        for (e5 = 0;
            e5 < 12;
            e5++) {
                e8[e5] = ch(e8[e5]);
            e4[e5] = ch(e4[e5])
        } for (e5 = 0;
            e5 < 24;
            e5++) {
                e7[e5] = ch(e7[e5])
        } this._monthsRegex = new RegExp("^(" + e7.join("|") + ")", "i");
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp("^(" + e4.join("|") + ")", "i");
        this._monthsShortStrictRegex = new RegExp("^(" + e8.join("|") + ")", "i")
    } function d8(fb, e4, e9, e8, fa, e7, e6) {
        var e5 = new Date(fb, e4, e9, e8, fa, e7, e6);
        if (fb < 100 && fb >= 0 && isFinite(e5.getFullYear())) {
            e5.setFullYear(fb)
        } return e5
    } function dv(e5) {
        var e4 = new Date(Date.UTC.apply(null, arguments));
        if (e5 < 100 && e5 >= 0 && isFinite(e4.getUTCFullYear())) {
            e4.setUTCFullYear(e5)
        } return e4
    } function bj(e5, e8, e7) {
        var e4 = 7 + e8 - e7, e6 = (7 + dv(e5, 0, e4).getUTCDay() - e8) % 7;
        return -e6 + e4 - 1
    } function bB(e7, e5, e6, fd, fb) {
        var fc = (7 + e6 - fd) % 7, e4 = bj(e7, fd, fb), e9 = 1 + 7 * (e5 - 1) + fc + e4, fa, e8;
        if (e9 <= 0) {
            fa = e7 - 1;
            e8 = dG(fa) + e9
        } else {
            if (e9 > dG(e7)) {
                fa = e7 + 1;
                e8 = e9 - dG(e7)
            } else {
                fa = e7;
                e8 = e9
            }
        } return { year: fa, dayOfYear: e8 }
    } function er(e8, fa, e9) {
        var e6 = bj(e8.year(), fa, e9), e7 = Math.floor((e8.dayOfYear() - e6 - 1) / 7) + 1, e4, e5;
        if (e7 < 1) {
            e5 = e8.year() - 1;
            e4 = e7 + F(e5, fa, e9)
        } else {
            if (e7 > F(e8.year(), fa, e9)) {
                e4 = e7 - F(e8.year(), fa, e9);
                e5 = e8.year() + 1
            } else {
                e5 = e8.year();
                e4 = e7
            }
        } return { week: e4, year: e5 }
    } function F(e5, e8, e6) {
        var e4 = bj(e5, e8, e6), e7 = bj(e5 + 1, e8, e6);
        return (dG(e5) - e4 + e7) / 7
    } cy("w", ["ww", 2], "wo", "week");
    cy("W", ["WW", 2], "Wo", "isoWeek");
    cf("week", "w");
    cf("isoWeek", "W");
    dW("week", 5);
    dW("isoWeek", 5);
    be("w", ar);
    be("ww", ar, aK);
    be("W", ar);
    be("WW", ar, aK);
    Y(["w", "ww", "W", "WW"], function (e4, e7, e5, e6) {
        e7[e6.substr(0, 1)] = cQ(e4)
    });
    function bp(e4) {
        return er(e4, this._week.dow, this._week.doy).week
    } var b3 = { dow: 0, doy: 6 };
    function ah() {
        return this._week.dow
    } function c9() {
        return this._week.doy
    } function K(e4) {
        var e5 = this.localeData().week(this);
        return e4 == null ? e5 : this.add((e4 - e5) * 7, "d")
    } function y(e4) {
        var e5 = er(this, 1, 4).week;
        return e4 == null ? e5 : this.add((e4 - e5) * 7, "d")
    } cy("d", 0, "do", "day");
    cy("dd", 0, 0, function (e4) {
        return this.localeData().weekdaysMin(this, e4)
    });
    cy("ddd", 0, 0, function (e4) {
        return this.localeData().weekdaysShort(this, e4)
    });
    cy("dddd", 0, 0, function (e4) {
        return this.localeData().weekdays(this, e4)
    });
    cy("e", 0, 0, "weekday");
    cy("E", 0, 0, "isoWeekday");
    cf("day", "d");
    cf("weekday", "e");
    cf("isoWeekday", "E");
    dW("day", 11);
    dW("weekday", 11);
    dW("isoWeekday", 11);
    be("d", ar);
    be("e", ar);
    be("E", ar);
    be("dd", function (e5, e4) {
        return e4.weekdaysMinRegex(e5)
    });
    be("ddd", function (e5, e4) {
        return e4.weekdaysShortRegex(e5)
    });
    be("dddd", function (e5, e4) {
        return e4.weekdaysRegex(e5)
    });
    Y(["dd", "ddd", "dddd"], function (e4, e7, e5, e6) {
        var e8 = e5._locale.weekdaysParse(e4, e6, e5._strict);
        if (e8 != null) {
            e7.d = e8
        } else {
            bc(e5).invalidWeekday = e4
        }
    });
    Y(["d", "e", "E"], function (e4, e7, e5, e6) {
        e7[e6] = cQ(e4)
    });
    function bi(e5, e4) {
        if (typeof e5 !== "string") {
            return e5
        } if (!isNaN(e5)) {
            return parseInt(e5, 10)
        } e5 = e4.weekdaysParse(e5);
        if (typeof e5 === "number") {
            return e5
        } return null
    } function bE(e5, e4) {
        if (typeof e5 === "string") {
            return e4.weekdaysParse(e5) % 7 || 7
        } return isNaN(e5) ? null : e5
    } var T = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
    function ay(e4, e5) {
        if (!e4) {
            return W(this._weekdays) ? this._weekdays : this._weekdays.standalone
        } return W(this._weekdays) ? this._weekdays[e4.day()] : this._weekdays[this._weekdays.isFormat.test(e5) ? "format" : "standalone"][e4.day()]
    } var l = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
    function N(e4) {
        return (e4) ? this._weekdaysShort[e4.day()] : this._weekdaysShort
    } var bu = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
    function eD(e4) {
        return (e4) ? this._weekdaysMin[e4.day()] : this._weekdaysMin
    } function dN(e9, fa, e4) {
        var e6, e7, e8, e5 = e9.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];
            for (e6 = 0;
                e6 < 7;
                ++e6) {
                    e8 = cw([2000, 1]).day(e6);
                this._minWeekdaysParse[e6] = this.weekdaysMin(e8, "").toLocaleLowerCase();
                this._shortWeekdaysParse[e6] = this.weekdaysShort(e8, "").toLocaleLowerCase();
                this._weekdaysParse[e6] = this.weekdays(e8, "").toLocaleLowerCase()
            }
        } if (e4) {
            if (fa === "dddd") {
                e7 = cR.call(this._weekdaysParse, e5);
                return e7 !== -1 ? e7 : null
            } else {
                if (fa === "ddd") {
                    e7 = cR.call(this._shortWeekdaysParse, e5);
                    return e7 !== -1 ? e7 : null
                } else {
                    e7 = cR.call(this._minWeekdaysParse, e5);
                    return e7 !== -1 ? e7 : null
                }
            }
        } else {
            if (fa === "dddd") {
                e7 = cR.call(this._weekdaysParse, e5);
                if (e7 !== -1) {
                    return e7
                } e7 = cR.call(this._shortWeekdaysParse, e5);
                if (e7 !== -1) {
                    return e7
                } e7 = cR.call(this._minWeekdaysParse, e5);
                return e7 !== -1 ? e7 : null
            } else {
                if (fa === "ddd") {
                    e7 = cR.call(this._shortWeekdaysParse, e5);
                    if (e7 !== -1) {
                        return e7
                    } e7 = cR.call(this._weekdaysParse, e5);
                    if (e7 !== -1) {
                        return e7
                    } e7 = cR.call(this._minWeekdaysParse, e5);
                    return e7 !== -1 ? e7 : null
                } else {
                    e7 = cR.call(this._minWeekdaysParse, e5);
                    if (e7 !== -1) {
                        return e7
                    } e7 = cR.call(this._weekdaysParse, e5);
                    if (e7 !== -1) {
                        return e7
                    } e7 = cR.call(this._shortWeekdaysParse, e5);
                    return e7 !== -1 ? e7 : null
                }
            }
        }
    } function bM(e8, e9, e4) {
        var e5, e7, e6;
        if (this._weekdaysParseExact) {
            return dN.call(this, e8, e9, e4)
        } if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = []
        } for (e5 = 0;
            e5 < 7;
            e5++) {
                e7 = cw([2000, 1]).day(e5);
            if (e4 && !this._fullWeekdaysParse[e5]) {
                this._fullWeekdaysParse[e5] = new RegExp("^" + this.weekdays(e7, "").replace(".", "\\.?") + "$", "i");
                this._shortWeekdaysParse[e5] = new RegExp("^" + this.weekdaysShort(e7, "").replace(".", "\\.?") + "$", "i");
                this._minWeekdaysParse[e5] = new RegExp("^" + this.weekdaysMin(e7, "").replace(".", "\\.?") + "$", "i")
            } if (!this._weekdaysParse[e5]) {
                e6 = "^" + this.weekdays(e7, "") + "|^" + this.weekdaysShort(e7, "") + "|^" + this.weekdaysMin(e7, "");
                this._weekdaysParse[e5] = new RegExp(e6.replace(".", ""), "i")
            } if (e4 && e9 === "dddd" && this._fullWeekdaysParse[e5].test(e8)) {
                return e5
            } else {
                if (e4 && e9 === "ddd" && this._shortWeekdaysParse[e5].test(e8)) {
                    return e5
                } else {
                    if (e4 && e9 === "dd" && this._minWeekdaysParse[e5].test(e8)) {
                        return e5
                    } else {
                        if (!e4 && this._weekdaysParse[e5].test(e8)) {
                            return e5
                        }
                    }
                }
            }
        }
    } function ej(e5) {
        if (!this.isValid()) {
            return e5 != null ? this : NaN
        } var e4 = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (e5 != null) {
            e5 = bi(e5, this.localeData());
            return this.add(e5 - e4, "d")
        } else {
            return e4
        }
    } function ae(e4) {
        if (!this.isValid()) {
            return e4 != null ? this : NaN
        } var e5 = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return e4 == null ? e5 : this.add(e4 - e5, "d")
    } function cu(e4) {
        if (!this.isValid()) {
            return e4 != null ? this : NaN
        } if (e4 != null) {
            var e5 = bE(e4, this.localeData());
            return this.day(this.day() % 7 ? e5 : e5 - 7)
        } else {
            return this.day() || 7
        }
    } var ac = a9;
    function eT(e4) {
        if (this._weekdaysParseExact) {
            if (!dl(this, "_weekdaysRegex")) {
                A.call(this)
            } if (e4) {
                return this._weekdaysStrictRegex
            } else {
                return this._weekdaysRegex
            }
        } else {
            if (!dl(this, "_weekdaysRegex")) {
                this._weekdaysRegex = ac
            } return this._weekdaysStrictRegex && e4 ? this._weekdaysStrictRegex : this._weekdaysRegex
        }
    } var x = a9;
    function aG(e4) {
        if (this._weekdaysParseExact) {
            if (!dl(this, "_weekdaysRegex")) {
                A.call(this)
            } if (e4) {
                return this._weekdaysShortStrictRegex
            } else {
                return this._weekdaysShortRegex
            }
        } else {
            if (!dl(this, "_weekdaysShortRegex")) {
                this._weekdaysShortRegex = x
            } return this._weekdaysShortStrictRegex && e4 ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex
        }
    } var dU = a9;
    function E(e4) {
        if (this._weekdaysParseExact) {
            if (!dl(this, "_weekdaysRegex")) {
                A.call(this)
            } if (e4) {
                return this._weekdaysMinStrictRegex
            } else {
                return this._weekdaysMinRegex
            }
        } else {
            if (!dl(this, "_weekdaysMinRegex")) {
                this._weekdaysMinRegex = dU
            } return this._weekdaysMinStrictRegex && e4 ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex
        }
    } function A() {
        function e7(ff, fe) {
            return fe.length - ff.length
        } var e9 = [], fa = [], fd = [], e4 = [], e8, e6, e5, fb, fc;
        for (e8 = 0;
            e8 < 7;
            e8++) {
                e6 = cw([2000, 1]).day(e8);
            e5 = this.weekdaysMin(e6, "");
            fb = this.weekdaysShort(e6, "");
            fc = this.weekdays(e6, "");
            e9.push(e5);
            fa.push(fb);
            fd.push(fc);
            e4.push(e5);
            e4.push(fb);
            e4.push(fc)
        } e9.sort(e7);
        fa.sort(e7);
        fd.sort(e7);
        e4.sort(e7);
        for (e8 = 0;
            e8 < 7;
            e8++) {
                fa[e8] = ch(fa[e8]);
            fd[e8] = ch(fd[e8]);
            e4[e8] = ch(e4[e8])
        } this._weekdaysRegex = new RegExp("^(" + e4.join("|") + ")", "i");
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp("^(" + fd.join("|") + ")", "i");
        this._weekdaysShortStrictRegex = new RegExp("^(" + fa.join("|") + ")", "i");
        this._weekdaysMinStrictRegex = new RegExp("^(" + e9.join("|") + ")", "i")
    } function dz() {
        return this.hours() % 12 || 12
    } function P() {
        return this.hours() || 24
    } cy("H", ["HH", 2], 0, "hour");
    cy("h", ["hh", 2], 0, dz);
    cy("k", ["kk", 2], 0, P);
    cy("hmm", 0, 0, function () {
        return "" + dz.apply(this) + cp(this.minutes(), 2)
    });
    cy("hmmss", 0, 0, function () {
        return "" + dz.apply(this) + cp(this.minutes(), 2) + cp(this.seconds(), 2)
    });
    cy("Hmm", 0, 0, function () {
        return "" + this.hours() + cp(this.minutes(), 2)
    });
    cy("Hmmss", 0, 0, function () {
        return "" + this.hours() + cp(this.minutes(), 2) + cp(this.seconds(), 2)
    });
    function em(e4, e5) {
        cy(e4, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), e5)
        })
    } em("a", true);
    em("A", false);
    cf("hour", "h");
    dW("hour", 13);
    function S(e5, e4) {
        return e4._meridiemParse
    } be("a", S);
    be("A", S);
    be("H", ar);
    be("h", ar);
    be("k", ar);
    be("HH", ar, aK);
    be("hh", ar, aK);
    be("kk", ar, aK);
    be("hmm", cl);
    be("hmmss", ee);
    be("Hmm", cl);
    be("Hmmss", ee);
    bV(["H", "HH"], eG);
    bV(["k", "kk"], function (e5, e7, e6) {
        var e4 = cQ(e5);
        e7[eG] = e4 === 24 ? 0 : e4
    });
    bV(["a", "A"], function (e4, e6, e5) {
        e5._isPm = e5._locale.isPM(e4);
        e5._meridiem = e4
    });
    bV(["h", "hh"], function (e4, e6, e5) {
        e6[eG] = cQ(e4);
        bc(e5).bigHour = true
    });
    bV("hmm", function (e4, e7, e5) {
        var e6 = e4.length - 2;
        e7[eG] = cQ(e4.substr(0, e6));
        e7[dI] = cQ(e4.substr(e6));
        bc(e5).bigHour = true
    });
    bV("hmmss", function (e4, e8, e5) {
        var e7 = e4.length - 4;
        var e6 = e4.length - 2;
        e8[eG] = cQ(e4.substr(0, e7));
        e8[dI] = cQ(e4.substr(e7, 2));
        e8[aj] = cQ(e4.substr(e6));
        bc(e5).bigHour = true
    });
    bV("Hmm", function (e4, e7, e5) {
        var e6 = e4.length - 2;
        e7[eG] = cQ(e4.substr(0, e6));
        e7[dI] = cQ(e4.substr(e6))
    });
    bV("Hmmss", function (e4, e8, e5) {
        var e7 = e4.length - 4;
        var e6 = e4.length - 2;
        e8[eG] = cQ(e4.substr(0, e7));
        e8[dI] = cQ(e4.substr(e7, 2));
        e8[aj] = cQ(e4.substr(e6))
    });
    function ce(e4) {
        return ((e4 + "").toLowerCase().charAt(0) === "p")
    } var b6 = /[ap]\.?m?\.?/i;
    function aU(e4, e5, e6) {
        if (e4 > 11) {
            return e6 ? "pm" : "PM"
        } else {
            return e6 ? "am" : "AM"
        }
    } var cq = ec("Hours", true);
    var b2 = { calendar: ck, longDateFormat: dX, invalidDate: am, ordinal: b7, dayOfMonthOrdinalParse: e2, relativeTime: ez, months: Q, monthsShort: d1, week: b3, weekdays: T, weekdaysMin: bu, weekdaysShort: l, meridiemParse: b6 };
    var bz = {};
    var m = {};
    var cY;
    function dp(e4) {
        return e4 ? e4.toLowerCase().replace("_", "-") : e4
    } function cX(e9) {
        var e7 = 0, e5, e8, e4, e6;
        while (e7 < e9.length) {
            e6 = dp(e9[e7]).split("-");
            e5 = e6.length;
            e8 = dp(e9[e7 + 1]);
            e8 = e8 ? e8.split("-") : null;
            while (e5 > 0) {
                e4 = aC(e6.slice(0, e5).join("-"));
                if (e4) {
                    return e4
                } if (e8 && e8.length >= e5 && b0(e6, e8, true) >= e5 - 1) {
                    break
                } e5--
            } e7++
        } return cY
    } function aC(e4) {
        var e7 = null;
        if (!bz[e4] && (typeof module !== "undefined") && module && module.exports) {
            try {
                e7 = cY._abbr;
                var e5 = require;
                e5("./locale/" + e4);
                B(e7)
            } catch (e6) { }
        } return bz[e4]
    } function B(e5, e4) {
        var e6;
        if (e5) {
            if (G(e4)) {
                e6 = R(e5)
            } else {
                e6 = cB(e5, e4)
            } if (e6) {
                cY = e6
            } else {
                if ((typeof console !== "undefined") && console.warn) {
                    console.warn("Locale " + e5 + " not found. Did you forget to load it?")
                }
            }
        } return cY._abbr
    } function cB(e6, e5) {
        if (e5 !== null) {
            var e4, e7 = b2;
            e5.abbr = e6;
            if (bz[e6] != null) {
                eP("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");
                e7 = bz[e6]._config
            } else {
                if (e5.parentLocale != null) {
                    if (bz[e5.parentLocale] != null) {
                        e7 = bz[e5.parentLocale]._config
                    } else {
                        e4 = aC(e5.parentLocale);
                        if (e4 != null) {
                            e7 = e4._config
                        } else {
                            if (!m[e5.parentLocale]) {
                                m[e5.parentLocale] = []
                            } m[e5.parentLocale].push({ name: e6, config: e5 });
                            return null
                        }
                    }
                }
            } bz[e6] = new cD(d7(e7, e5));
            if (m[e6]) {
                m[e6].forEach(function (e8) {
                    cB(e8.name, e8.config)
                })
            } B(e6);
            return bz[e6]
        } else {
            delete bz[e6];
            return null
        }
    } function ek(e6, e5) {
        if (e5 != null) {
            var e4, e8, e7 = b2;
            e8 = aC(e6);
            if (e8 != null) {
                e7 = e8._config
            } e5 = d7(e7, e5);
            e4 = new cD(e5);
            e4.parentLocale = bz[e6];
            bz[e6] = e4;
            B(e6)
        } else {
            if (bz[e6] != null) {
                if (bz[e6].parentLocale != null) {
                    bz[e6] = bz[e6].parentLocale
                } else {
                    if (bz[e6] != null) {
                        delete bz[e6]
                    }
                }
            }
        } return bz[e6]
    } function R(e5) {
        var e4;
        if (e5 && e5._locale && e5._locale._abbr) {
            e5 = e5._locale._abbr
        } if (!e5) {
            return cY
        } if (!W(e5)) {
            e4 = aC(e5);
            if (e4) {
                return e4
            } e5 = [e5]
        } return cX(e5)
    } function b5() {
        return bX(bz)
    } function cO(e4) {
        var e6;
        var e5 = e4._a;
        if (e5 && bc(e4).overflow === -2) {
            e6 = e5[j] < 0 || e5[j] > 11 ? j : e5[et] < 1 || e5[et] > bH(e5[eR], e5[j]) ? et : e5[eG] < 0 || e5[eG] > 24 || (e5[eG] === 24 && (e5[dI] !== 0 || e5[aj] !== 0 || e5[bK] !== 0)) ? eG : e5[dI] < 0 || e5[dI] > 59 ? dI : e5[aj] < 0 || e5[aj] > 59 ? aj : e5[bK] < 0 || e5[bK] > 999 ? bK : -1;
            if (bc(e4)._overflowDayOfYear && (e6 < eR || e6 > et)) {
                e6 = et
            } if (bc(e4)._overflowWeeks && e6 === -1) {
                e6 = cj
            } if (bc(e4)._overflowWeekday && e6 === -1) {
                e6 = h
            } bc(e4).overflow = e6
        } return e4
    } function d9(e5, e4, e6) {
        if (e5 != null) {
            return e5
        } if (e4 != null) {
            return e4
        } return e6
    } function a3(e5) {
        var e4 = new Date(eC.now());
        if (e5._useUTC) {
            return [e4.getUTCFullYear(), e4.getUTCMonth(), e4.getUTCDate()]
        } return [e4.getFullYear(), e4.getMonth(), e4.getDate()]
    } function e(e8) {
        var e9, e7, e6 = [], e5, fa, e4;
        if (e8._d) {
            return
        } e5 = a3(e8);
        if (e8._w && e8._a[et] == null && e8._a[j] == null) {
            c2(e8)
        } if (e8._dayOfYear != null) {
            e4 = d9(e8._a[eR], e5[eR]);
            if (e8._dayOfYear > dG(e4) || e8._dayOfYear === 0) {
                bc(e8)._overflowDayOfYear = true
            } e7 = dv(e4, 0, e8._dayOfYear);
            e8._a[j] = e7.getUTCMonth();
            e8._a[et] = e7.getUTCDate()
        } for (e9 = 0;
            e9 < 3 && e8._a[e9] == null;
            ++e9) {
                e8._a[e9] = e6[e9] = e5[e9]
        } for (;
            e9 < 7;
            e9++) {
                e8._a[e9] = e6[e9] = (e8._a[e9] == null) ? (e9 === 2 ? 1 : 0) : e8._a[e9]
        } if (e8._a[eG] === 24 && e8._a[dI] === 0 && e8._a[aj] === 0 && e8._a[bK] === 0) {
            e8._nextDay = true;
            e8._a[eG] = 0
        } e8._d = (e8._useUTC ? dv : d8).apply(null, e6);
        fa = e8._useUTC ? e8._d.getUTCDay() : e8._d.getDay();
        if (e8._tzm != null) {
            e8._d.setUTCMinutes(e8._d.getUTCMinutes() - e8._tzm)
        } if (e8._nextDay) {
            e8._a[eG] = 24
        } if (e8._w && typeof e8._w.d !== "undefined" && e8._w.d !== fa) {
            bc(e8).weekdayMismatch = true
        }
    } function c2(e7) {
        var fa, e4, e5, e8, fd, fb, fc, e9;
        fa = e7._w;
        if (fa.GG != null || fa.W != null || fa.E != null) {
            fd = 1;
            fb = 4;
            e4 = d9(fa.GG, e7._a[eR], er(dC(), 1, 4).year);
            e5 = d9(fa.W, 1);
            e8 = d9(fa.E, 1);
            if (e8 < 1 || e8 > 7) {
                e9 = true
            }
        } else {
            fd = e7._locale._week.dow;
            fb = e7._locale._week.doy;
            var e6 = er(dC(), fd, fb);
            e4 = d9(fa.gg, e7._a[eR], e6.year);
            e5 = d9(fa.w, e6.week);
            if (fa.d != null) {
                e8 = fa.d;
                if (e8 < 0 || e8 > 6) {
                    e9 = true
                }
            } else {
                if (fa.e != null) {
                    e8 = fa.e + fd;
                    if (fa.e < 0 || fa.e > 6) {
                        e9 = true
                    }
                } else {
                    e8 = fd
                }
            }
        } if (e5 < 1 || e5 > F(e4, fd, fb)) {
            bc(e7)._overflowWeeks = true
        } else {
            if (e9 != null) {
                bc(e7)._overflowWeekday = true
            } else {
                fc = bB(e4, e5, e8, fd, fb);
                e7._a[eR] = fc.year;
                e7._dayOfYear = fc.dayOfYear
            }
        }
    } var k = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var aT = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var cG = /Z|[+-]\d\d(?::?\d\d)?/;
    var cS = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, false], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, false], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, false], ["YYYYDDD", /\d{7}/]];
    var cr = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]];
    var bW = /^\/?Date\((\-?\d+)/i;
    function D(e5) {
        var e9, e7, fb = e5._i, fa = k.exec(fb) || aT.exec(fb), fc, e4, e8, e6;
        if (fa) {
            bc(e5).iso = true;
            for (e9 = 0, e7 = cS.length;
                e9 < e7;
                e9++) {
                    if (cS[e9][1].exec(fa[1])) {
                        e4 = cS[e9][0];
                        fc = cS[e9][2] !== false;
                        break
                    }
            } if (e4 == null) {
                e5._isValid = false;
                return
            } if (fa[3]) {
                for (e9 = 0, e7 = cr.length;
                    e9 < e7;
                    e9++) {
                        if (cr[e9][1].exec(fa[3])) {
                            e8 = (fa[2] || " ") + cr[e9][0];
                            break
                        }
                } if (e8 == null) {
                    e5._isValid = false;
                    return
                }
            } if (!fc && e8 != null) {
                e5._isValid = false;
                return
            } if (fa[4]) {
                if (cG.exec(fa[4])) {
                    e6 = "Z"
                } else {
                    e5._isValid = false;
                    return
                }
            } e5._f = e4 + (e8 || "") + (e6 || "");
            bY(e5)
        } else {
            e5._isValid = false
        }
    } var dh = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
    function es(e8, e7, e9, e5, fa, e6) {
        var e4 = [co(e8), d1.indexOf(e7), parseInt(e9, 10), parseInt(e5, 10), parseInt(fa, 10)];
        if (e6) {
            e4.push(parseInt(e6, 10))
        } return e4
    } function co(e4) {
        var e5 = parseInt(e4, 10);
        if (e5 <= 49) {
            return 2000 + e5
        } else {
            if (e5 <= 999) {
                return 1900 + e5
            }
        } return e5
    } function aM(e4) {
        return e4.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "")
    } function aw(e4, e8, e6) {
        if (e4) {
            var e7 = l.indexOf(e4), e5 = new Date(e8[0], e8[1], e8[2]).getDay();
            if (e7 !== e5) {
                bc(e6).weekdayMismatch = true;
                e6._isValid = false;
                return false
            }
        } return true
    } var bv = { UT: 0, GMT: 0, EDT: -4 * 60, EST: -5 * 60, CDT: -5 * 60, CST: -6 * 60, MDT: -6 * 60, MST: -7 * 60, PDT: -7 * 60, PST: -8 * 60 };
    function e0(e9, e5, e7) {
        if (e9) {
            return bv[e9]
        } else {
            if (e5) {
                return 0
            } else {
                var e8 = parseInt(e7, 10);
                var e4 = e8 % 100, e6 = (e8 - e4) / 100;
                return e6 * 60 + e4
            }
        }
    } function bT(e5) {
        var e4 = dh.exec(aM(e5._i));
        if (e4) {
            var e6 = es(e4[4], e4[3], e4[2], e4[5], e4[6], e4[7]);
            if (!aw(e4[1], e6, e5)) {
                return
            } e5._a = e6;
            e5._tzm = e0(e4[8], e4[9], e4[10]);
            e5._d = dv.apply(null, e5._a);
            e5._d.setUTCMinutes(e5._d.getUTCMinutes() - e5._tzm);
            bc(e5).rfc2822 = true
        } else {
            e5._isValid = false
        }
    } function bd(e5) {
        var e4 = bW.exec(e5._i);
        if (e4 !== null) {
            e5._d = new Date(+e4[1]);
            return
        } D(e5);
        if (e5._isValid === false) {
            delete e5._isValid
        } else {
            return
        } bT(e5);
        if (e5._isValid === false) {
            delete e5._isValid
        } else {
            return
        } eC.createFromInputFallback(e5)
    } eC.createFromInputFallback = ef("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function (e4) {
        e4._d = new Date(e4._i + (e4._useUTC ? " UTC" : ""))
    });
    eC.ISO_8601 = function () { };
    eC.RFC_2822 = function () { };
    function bY(e6) {
        if (e6._f === eC.ISO_8601) {
            D(e6);
            return
        } if (e6._f === eC.RFC_2822) {
            bT(e6);
            return
        } e6._a = [];
        bc(e6).empty = true;
        var e9 = "" + e6._i, e8, e5, fc, e7, fb, e4 = e9.length, fa = 0;
        fc = bG(e6._f, e6._locale).match(bR) || [];
        for (e8 = 0;
            e8 < fc.length;
            e8++) {
                e7 = fc[e8];
            e5 = (e9.match(bF(e7, e6)) || [])[0];
            if (e5) {
                fb = e9.substr(0, e9.indexOf(e5));
                if (fb.length > 0) {
                    bc(e6).unusedInput.push(fb)
                } e9 = e9.slice(e9.indexOf(e5) + e5.length);
                fa += e5.length
            } if (ba[e7]) {
                if (e5) {
                    bc(e6).empty = false
                } else {
                    bc(e6).unusedTokens.push(e7)
                } v(e7, e5, e6)
            } else {
                if (e6._strict && !e5) {
                    bc(e6).unusedTokens.push(e7)
                }
            }
        } bc(e6).charsLeftOver = e4 - fa;
        if (e9.length > 0) {
            bc(e6).unusedInput.push(e9)
        } if (e6._a[eG] <= 12 && bc(e6).bigHour === true && e6._a[eG] > 0) {
            bc(e6).bigHour = undefined
        } bc(e6).parsedDateParts = e6._a.slice(0);
        bc(e6).meridiem = e6._meridiem;
        e6._a[eG] = eg(e6._locale, e6._a[eG], e6._meridiem);
        e(e6);
        cO(e6)
    } function eg(e4, e6, e7) {
        var e5;
        if (e7 == null) {
            return e6
        } if (e4.meridiemHour != null) {
            return e4.meridiemHour(e6, e7)
        } else {
            if (e4.isPM != null) {
                e5 = e4.isPM(e7);
                if (e5 && e6 < 12) {
                    e6 += 12
                } if (!e5 && e6 === 12) {
                    e6 = 0
                } return e6
            } else {
                return e6
            }
        }
    } function dE(e4) {
        var e8, e6, e7, e5, e9;
        if (e4._f.length === 0) {
            bc(e4).invalidFormat = true;
            e4._d = new Date(NaN);
            return
        } for (e5 = 0;
            e5 < e4._f.length;
            e5++) {
                e9 = 0;
            e8 = q({}, e4);
            if (e4._useUTC != null) {
                e8._useUTC = e4._useUTC
            } e8._f = e4._f[e5];
            bY(e8);
            if (!ao(e8)) {
                continue
            } e9 += bc(e8).charsLeftOver;
            e9 += bc(e8).unusedTokens.length * 10;
            bc(e8).score = e9;
            if (e7 == null || e9 < e7) {
                e7 = e9;
                e6 = e8
            }
        } eX(e4, e6 || e8)
    } function a5(e4) {
        if (e4._d) {
            return
        } var e5 = dL(e4._i);
        e4._a = bo([e5.year, e5.month, e5.day || e5.date, e5.hour, e5.minute, e5.second, e5.millisecond], function (e6) {
            return e6 && parseInt(e6, 10)
        });
        e(e4)
    } function al(e4) {
        var e5 = new eq(cO(bs(e4)));
        if (e5._nextDay) {
            e5.add(1, "d");
            e5._nextDay = undefined
        } return e5
    } function bs(e5) {
        var e4 = e5._i, e6 = e5._f;
        e5._locale = e5._locale || R(e5._l);
        if (e4 === null || (e6 === undefined && e4 === "")) {
            return O({ nullInput: true })
        } if (typeof e4 === "string") {
            e5._i = e4 = e5._locale.preparse(e4)
        } if (cc(e4)) {
            return new eq(cO(e4))
        } else {
            if (ev(e4)) {
                e5._d = e4
            } else {
                if (W(e6)) {
                    dE(e5)
                } else {
                    if (e6) {
                        bY(e5)
                    } else {
                        cv(e5)
                    }
                }
            }
        } if (!ao(e5)) {
            e5._d = null
        } return e5
    } function cv(e5) {
        var e4 = e5._i;
        if (G(e4)) {
            e5._d = new Date(eC.now())
        } else {
            if (ev(e4)) {
                e5._d = new Date(e4.valueOf())
            } else {
                if (typeof e4 === "string") {
                    bd(e5)
                } else {
                    if (W(e4)) {
                        e5._a = bo(e4.slice(0), function (e6) {
                            return parseInt(e6, 10)
                        });
                        e(e5)
                    } else {
                        if (w(e4)) {
                            a5(e5)
                        } else {
                            if (r(e4)) {
                                e5._d = new Date(e4)
                            } else {
                                eC.createFromInputFallback(e5)
                            }
                        }
                    }
                }
            }
        }
    } function ad(e7, e8, e4, e6, e5) {
        var e9 = {};
        if (e4 === true || e4 === false) {
            e6 = e4;
            e4 = undefined
        } if ((w(e7) && ci(e7)) || (W(e7) && e7.length === 0)) {
            e7 = undefined
        } e9._isAMomentObject = true;
        e9._useUTC = e9._isUTC = e5;
        e9._l = e4;
        e9._i = e7;
        e9._f = e8;
        e9._strict = e6;
        return al(e9)
    } function dC(e6, e7, e4, e5) {
        return ad(e6, e7, e4, e5, false)
    } var cJ = ef("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function () {
        var e4 = dC.apply(null, arguments);
        if (this.isValid() && e4.isValid()) {
            return e4 < this ? this : e4
        } else {
            return O()
        }
    });
    var en = ef("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function () {
        var e4 = dC.apply(null, arguments);
        if (this.isValid() && e4.isValid()) {
            return e4 > this ? this : e4
        } else {
            return O()
        }
    });
    function eY(e6, e7) {
        var e5, e4;
        if (e7.length === 1 && W(e7[0])) {
            e7 = e7[0]
        } if (!e7.length) {
            return dC()
        } e5 = e7[0];
        for (e4 = 1;
            e4 < e7.length;
            ++e4) {
                if (!e7[e4].isValid() || e7[e4][e6](e5)) {
                    e5 = e7[e4]
                }
        } return e5
    } function o() {
        var e4 = [].slice.call(arguments, 0);
        return eY("isBefore", e4)
    } function bm() {
        var e4 = [].slice.call(arguments, 0);
        return eY("isAfter", e4)
    } var cz = function () {
        return Date.now ? Date.now() : +(new Date())
    };
    var eW = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
    function at(e5) {
        for (var e7 in e5) {
            if (!(cR.call(eW, e7) !== -1 && (e5[e7] == null || !isNaN(e5[e7])))) {
                return false
            }
        } var e4 = false;
        for (var e6 = 0;
            e6 < eW.length;
            ++e6) {
                if (e5[eW[e6]]) {
                    if (e4) {
                        return false
                    } if (parseFloat(e5[eW[e6]]) !== cQ(e5[eW[e6]])) {
                        e4 = true
                    }
                }
        } return true
    } function t() {
        return this._isValid
    } function aX() {
        return df(NaN)
    } function dO(e9) {
        var fb = dL(e9), fa = fb.year || 0, e5 = fb.quarter || 0, e6 = fb.month || 0, e4 = fb.week || 0, fe = fb.day || 0, fc = fb.hour || 0, e8 = fb.minute || 0, fd = fb.second || 0, e7 = fb.millisecond || 0;
        this._isValid = at(fb);
        this._milliseconds = +e7 + fd * 1000 + e8 * 60000 + fc * 1000 * 60 * 60;
        this._days = +fe + e4 * 7;
        this._months = +e6 + e5 * 3 + fa * 12;
        this._data = {};
        this._locale = R();
        this._bubble()
    } function af(e4) {
        return e4 instanceof dO
    } function ei(e4) {
        if (e4 < 0) {
            return Math.round(-1 * e4) * -1
        } else {
            return Math.round(e4)
        }
    } function bx(e4, e5) {
        cy(e4, 0, 0, function () {
            var e7 = this.utcOffset();
            var e6 = "+";
            if (e7 < 0) {
                e7 = -e7;
                e6 = "-"
            } return e6 + cp(~~(e7 / 60), 2) + e5 + cp(~~(e7) % 60, 2)
        })
    } bx("Z", ":");
    bx("ZZ", "");
    be("Z", cF);
    be("ZZ", cF);
    bV(["Z", "ZZ"], function (e4, e6, e5) {
        e5._useUTC = true;
        e5._tzm = n(cF, e4)
    });
    var eB = /([\+\-]|\d\d)/gi;
    function n(e9, e5) {
        var e7 = (e5 || "").match(e9);
        if (e7 === null) {
            return null
        } var e4 = e7[e7.length - 1] || [];
        var e8 = (e4 + "").match(eB) || ["-", 0, 0];
        var e6 = +(e8[1] * 60) + cQ(e8[2]);
        return e6 === 0 ? 0 : e8[0] === "+" ? e6 : -e6
    } function aD(e4, e5) {
        var e6, e7;
        if (e5._isUTC) {
            e6 = e5.clone();
            e7 = (cc(e4) || ev(e4) ? e4.valueOf() : dC(e4).valueOf()) - e6.valueOf();
            e6._d.setTime(e6._d.valueOf() + e7);
            eC.updateOffset(e6, false);
            return e6
        } else {
            return dC(e4).local()
        }
    } function aP(e4) {
        return -Math.round(e4._d.getTimezoneOffset() / 15) * 15
    } eC.updateOffset = function () { };
    function dw(e4, e7, e8) {
        var e6 = this._offset || 0, e5;
        if (!this.isValid()) {
            return e4 != null ? this : NaN
        } if (e4 != null) {
            if (typeof e4 === "string") {
                e4 = n(cF, e4);
                if (e4 === null) {
                    return this
                }
            } else {
                if (Math.abs(e4) < 16 && !e8) {
                    e4 = e4 * 60
                }
            } if (!this._isUTC && e7) {
                e5 = aP(this)
            } this._offset = e4;
            this._isUTC = true;
            if (e5 != null) {
                this.add(e5, "m")
            } if (e6 !== e4) {
                if (!e7 || this._changeInProgress) {
                    a0(this, df(e4 - e6, "m"), 1, false)
                } else {
                    if (!this._changeInProgress) {
                        this._changeInProgress = true;
                        eC.updateOffset(this, true);
                        this._changeInProgress = null
                    }
                }
            } return this
        } else {
            return this._isUTC ? e6 : aP(this)
        }
    } function dr(e4, e5) {
        if (e4 != null) {
            if (typeof e4 !== "string") {
                e4 = -e4
            } this.utcOffset(e4, e5);
            return this
        } else {
            return -this.utcOffset()
        }
    } function a1(e4) {
        return this.utcOffset(0, e4)
    } function dt(e4) {
        if (this._isUTC) {
            this.utcOffset(0, e4);
            this._isUTC = false;
            if (e4) {
                this.subtract(aP(this), "m")
            }
        } return this
    } function b9() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true)
        } else {
            if (typeof this._i === "string") {
                var e4 = n(bI, this._i);
                if (e4 != null) {
                    this.utcOffset(e4)
                } else {
                    this.utcOffset(0, true)
                }
            }
        } return this
    } function aB(e4) {
        if (!this.isValid()) {
            return false
        } e4 = e4 ? dC(e4).utcOffset() : 0;
        return (this.utcOffset() - e4) % 60 === 0
    } function aO() {
        return (this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset())
    } function b() {
        if (!G(this._isDSTShifted)) {
            return this._isDSTShifted
        } var e5 = {};
        q(e5, this);
        e5 = bs(e5);
        if (e5._a) {
            var e4 = e5._isUTC ? cw(e5._a) : dC(e5._a);
            this._isDSTShifted = this.isValid() && b0(e5._a, e4.toArray()) > 0
        } else {
            this._isDSTShifted = false
        } return this._isDSTShifted
    } function dx() {
        return this.isValid() ? !this._isUTC : false
    } function bS() {
        return this.isValid() ? this._isUTC : false
    } function dD() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false
    } var aa = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
    var cx = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
    function df(e6, e9) {
        var fa = e6, e8 = null, e5, e7, e4;
        if (af(e6)) {
            fa = { ms: e6._milliseconds, d: e6._days, M: e6._months }
        } else {
            if (r(e6)) {
                fa = {};
                if (e9) {
                    fa[e9] = e6
                } else {
                    fa.milliseconds = e6
                }
            } else {
                if (!!(e8 = aa.exec(e6))) {
                    e5 = (e8[1] === "-") ? -1 : 1;
                    fa = { y: 0, d: cQ(e8[et]) * e5, h: cQ(e8[eG]) * e5, m: cQ(e8[dI]) * e5, s: cQ(e8[aj]) * e5, ms: cQ(ei(e8[bK] * 1000)) * e5 }
                } else {
                    if (!!(e8 = cx.exec(e6))) {
                        e5 = (e8[1] === "-") ? -1 : (e8[1] === "+") ? 1 : 1;
                        fa = { y: eS(e8[2], e5), M: eS(e8[3], e5), w: eS(e8[4], e5), d: eS(e8[5], e5), h: eS(e8[6], e5), m: eS(e8[7], e5), s: eS(e8[8], e5) }
                    } else {
                        if (fa == null) {
                            fa = {}
                        } else {
                            if (typeof fa === "object" && ("from" in fa || "to" in fa)) {
                                e4 = bO(dC(fa.from), dC(fa.to));
                                fa = {};
                                fa.ms = e4.milliseconds;
                                fa.M = e4.months
                            }
                        }
                    }
                }
            }
        } e7 = new dO(fa);
        if (af(e6) && dl(e6, "_locale")) {
            e7._locale = e6._locale
        } return e7
    } df.fn = dO.prototype;
    df.invalid = aX;
    function eS(e6, e4) {
        var e5 = e6 && parseFloat(e6.replace(",", "."));
        return (isNaN(e5) ? 0 : e5) * e4
    } function dA(e6, e4) {
        var e5 = { milliseconds: 0, months: 0 };
        e5.months = e4.month() - e6.month() + (e4.year() - e6.year()) * 12;
        if (e6.clone().add(e5.months, "M").isAfter(e4)) {
            --e5.months
        } e5.milliseconds = +e4 - +(e6.clone().add(e5.months, "M"));
        return e5
    } function bO(e6, e4) {
        var e5;
        if (!(e6.isValid() && e4.isValid())) {
            return { milliseconds: 0, months: 0 }
        } e4 = aD(e4, e6);
        if (e6.isBefore(e4)) {
            e5 = dA(e6, e4)
        } else {
            e5 = dA(e4, e6);
            e5.milliseconds = -e5.milliseconds;
            e5.months = -e5.months
        } return e5
    } function a6(e5, e4) {
        return function (e9, e8) {
            var e7, e6;
            if (e8 !== null && !isNaN(+e8)) {
                eP(e4, "moment()." + e4 + "(period, number) is deprecated. Please use moment()." + e4 + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
                e6 = e9;
                e9 = e8;
                e8 = e6
            } e9 = typeof e9 === "string" ? +e9 : e9;
            e7 = df(e9, e8);
            a0(this, e7, e5);
            return this
        }
    } function a0(e6, e9, e8, e7) {
        var e5 = e9._milliseconds, fa = ei(e9._days), e4 = ei(e9._months);
        if (!e6.isValid()) {
            return
        } e7 = e7 == null ? true : e7;
        if (e4) {
            aW(e6, dB(e6, "Month") + e4 * e8)
        } if (fa) {
            aN(e6, "Date", dB(e6, "Date") + fa * e8)
        } if (e5) {
            e6._d.setTime(e6._d.valueOf() + e5 * e8)
        } if (e7) {
            eC.updateOffset(e6, fa || e4)
        }
    } var aZ = a6(1, "add");
    var az = a6(-1, "subtract");
    function av(e6, e4) {
        var e5 = e6.diff(e4, "days", true);
        return e5 < -6 ? "sameElse" : e5 < -1 ? "lastWeek" : e5 < 0 ? "lastDay" : e5 < 1 ? "sameDay" : e5 < 2 ? "nextDay" : e5 < 7 ? "nextWeek" : "sameElse"
    } function cg(e9, e4) {
        var e7 = e9 || dC(), e6 = aD(e7, this).startOf("day"), e8 = eC.calendarFormat(this, e6) || "sameElse";
        var e5 = e4 && (a7(e4[e8]) ? e4[e8].call(this, e7) : e4[e8]);
        return this.format(e5 || this.localeData().calendar(e8, this, dC(e7)))
    } function ds() {
        return new eq(this)
    } function cE(e5, e4) {
        var e6 = cc(e5) ? e5 : dC(e5);
        if (!(this.isValid() && e6.isValid())) {
            return false
        } e4 = cP(!G(e4) ? e4 : "millisecond");
        if (e4 === "millisecond") {
            return this.valueOf() > e6.valueOf()
        } else {
            return e6.valueOf() < this.clone().startOf(e4).valueOf()
        }
    } function eN(e5, e4) {
        var e6 = cc(e5) ? e5 : dC(e5);
        if (!(this.isValid() && e6.isValid())) {
            return false
        } e4 = cP(!G(e4) ? e4 : "millisecond");
        if (e4 === "millisecond") {
            return this.valueOf() < e6.valueOf()
        } else {
            return this.clone().endOf(e4).valueOf() < e6.valueOf()
        }
    } function ep(e7, e6, e4, e5) {
        e5 = e5 || "()";
        return (e5[0] === "(" ? this.isAfter(e7, e4) : !this.isBefore(e7, e4)) && (e5[1] === ")" ? this.isBefore(e6, e4) : !this.isAfter(e6, e4))
    } function cI(e5, e4) {
        var e7 = cc(e5) ? e5 : dC(e5), e6;
        if (!(this.isValid() && e7.isValid())) {
            return false
        } e4 = cP(e4 || "millisecond");
        if (e4 === "millisecond") {
            return this.valueOf() === e7.valueOf()
        } else {
            e6 = e7.valueOf();
            return this.clone().startOf(e4).valueOf() <= e6 && e6 <= this.clone().endOf(e4).valueOf()
        }
    } function eI(e5, e4) {
        return this.isSame(e5, e4) || this.isAfter(e5, e4)
    } function eL(e5, e4) {
        return this.isSame(e5, e4) || this.isBefore(e5, e4)
    } function L(e7, e6, e4) {
        var e9, e8, e5;
        if (!this.isValid()) {
            return NaN
        } e9 = aD(e7, this);
        if (!e9.isValid()) {
            return NaN
        } e8 = (e9.utcOffset() - this.utcOffset()) * 60000;
        e6 = cP(e6);
        switch (e6) {
            case "year": e5 = el(this, e9) / 12;
                break;
            case "month": e5 = el(this, e9);
                break;
            case "quarter": e5 = el(this, e9) / 3;
                break;
            case "second": e5 = (this - e9) / 1000;
                break;
            case "minute": e5 = (this - e9) / 60000;
                break;
            case "hour": e5 = (this - e9) / 3600000;
                break;
            case "day": e5 = (this - e9 - e8) / 86400000;
                break;
            case "week": e5 = (this - e9 - e8) / 604800000;
                break;
            default: e5 = this - e9
        }return e4 ? e5 : di(e5)
    } function el(e5, e4) {
        var e9 = ((e4.year() - e5.year()) * 12) + (e4.month() - e5.month()), e6 = e5.clone().add(e9, "months"), e7, e8;
        if (e4 - e6 < 0) {
            e7 = e5.clone().add(e9 - 1, "months");
            e8 = (e4 - e6) / (e6 - e7)
        } else {
            e7 = e5.clone().add(e9 + 1, "months");
            e8 = (e4 - e6) / (e7 - e6)
        } return -(e9 + e8) || 0
    } eC.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
    eC.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
    function d2() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
    } function c4(e6) {
        if (!this.isValid()) {
            return null
        } var e5 = e6 !== true;
        var e4 = e5 ? this.clone().utc() : this;
        if (e4.year() < 0 || e4.year() > 9999) {
            return ag(e4, e5 ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ")
        } if (a7(Date.prototype.toISOString)) {
            if (e5) {
                return this.toDate().toISOString()
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace("Z", ag(e4, "Z"))
            }
        } return ag(e4, e5 ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ")
    } function aR() {
        if (!this.isValid()) {
            return "moment.invalid(/* " + this._i + " */)"
        } var e6 = "moment";
        var e4 = "";
        if (!this.isLocal()) {
            e6 = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
            e4 = "Z"
        } var e7 = "[" + e6 + '("]';
        var e5 = (0 <= this.year() && this.year() <= 9999) ? "YYYY" : "YYYYYY";
        var e9 = "-MM-DD[T]HH:mm:ss.SSS";
        var e8 = e4 + '[")]';
        return this.format(e7 + e5 + e9 + e8)
    } function c7(e5) {
        if (!e5) {
            e5 = this.isUtc() ? eC.defaultFormatUtc : eC.defaultFormat
        } var e4 = ag(this, e5);
        return this.localeData().postformat(e4)
    } function dR(e5, e4) {
        if (this.isValid() && ((cc(e5) && e5.isValid()) || dC(e5).isValid())) {
            return df({ to: this, from: e5 }).locale(this.locale()).humanize(!e4)
        } else {
            return this.localeData().invalidDate()
        }
    } function dM(e4) {
        return this.from(dC(), e4)
    } function ai(e5, e4) {
        if (this.isValid() && ((cc(e5) && e5.isValid()) || dC(e5).isValid())) {
            return df({ from: this, to: e5 }).locale(this.locale()).humanize(!e4)
        } else {
            return this.localeData().invalidDate()
        }
    } function aQ(e4) {
        return this.to(dC(), e4)
    } function e3(e5) {
        var e4;
        if (e5 === undefined) {
            return this._locale._abbr
        } else {
            e4 = R(e5);
            if (e4 != null) {
                this._locale = e4
            } return this
        }
    } var z = ef("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function (e4) {
        if (e4 === undefined) {
            return this.localeData()
        } else {
            return this.locale(e4)
        }
    });
    function dS() {
        return this._locale
    } function b8(e4) {
        e4 = cP(e4);
        switch (e4) {
            case "year": this.month(0);
            case "quarter": case "month": this.date(1);
            case "week": case "isoWeek": case "day": case "date": this.hours(0);
            case "hour": this.minutes(0);
            case "minute": this.seconds(0);
            case "second": this.milliseconds(0)
        }if (e4 === "week") {
            this.weekday(0)
        } if (e4 === "isoWeek") {
            this.isoWeekday(1)
        } if (e4 === "quarter") {
            this.month(Math.floor(this.month() / 3) * 3)
        } return this
    } function ew(e4) {
        e4 = cP(e4);
        if (e4 === undefined || e4 === "millisecond") {
            return this
        } if (e4 === "date") {
            e4 = "day"
        } return this.startOf(e4).add(1, (e4 === "isoWeek" ? "week" : e4)).subtract(1, "ms")
    } function dV() {
        return this._d.valueOf() - ((this._offset || 0) * 60000)
    } function bA() {
        return Math.floor(this.valueOf() / 1000)
    } function c1() {
        return new Date(this.valueOf())
    } function dK() {
        var e4 = this;
        return [e4.year(), e4.month(), e4.date(), e4.hour(), e4.minute(), e4.second(), e4.millisecond()]
    } function dT() {
        var e4 = this;
        return { years: e4.year(), months: e4.month(), date: e4.date(), hours: e4.hours(), minutes: e4.minutes(), seconds: e4.seconds(), milliseconds: e4.milliseconds() }
    } function c8() {
        return this.isValid() ? this.toISOString() : null
    } function p() {
        return ao(this)
    } function dF() {
        return eX({}, bc(this))
    } function cA() {
        return bc(this).overflow
    } function eO() {
        return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict }
    } cy(0, ["gg", 2], 0, function () {
        return this.weekYear() % 100
    });
    cy(0, ["GG", 2], 0, function () {
        return this.isoWeekYear() % 100
    });
    function X(e5, e4) {
        cy(0, [e5, e5.length], 0, e4)
    } X("gggg", "weekYear");
    X("ggggg", "weekYear");
    X("GGGG", "isoWeekYear");
    X("GGGGG", "isoWeekYear");
    cf("weekYear", "gg");
    cf("isoWeekYear", "GG");
    dW("weekYear", 1);
    dW("isoWeekYear", 1);
    be("G", C);
    be("g", C);
    be("GG", ar, aK);
    be("gg", ar, aK);
    be("GGGG", ap, aI);
    be("gggg", ap, aI);
    be("GGGGG", an, aH);
    be("ggggg", an, aH);
    Y(["gggg", "ggggg", "GGGG", "GGGGG"], function (e4, e7, e5, e6) {
        e7[e6.substr(0, 2)] = cQ(e4)
    });
    Y(["gg", "GG"], function (e4, e7, e5, e6) {
        e7[e6] = eC.parseTwoDigitYear(e4)
    });
    function br(e4) {
        return ct.call(this, e4, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy)
    } function dZ(e4) {
        return ct.call(this, e4, this.isoWeek(), this.isoWeekday(), 1, 4)
    } function da() {
        return F(this.year(), 1, 4)
    } function J() {
        var e4 = this.localeData()._week;
        return F(this.year(), e4.dow, e4.doy)
    } function ct(e4, e5, e7, e9, e8) {
        var e6;
        if (e4 == null) {
            return er(this, e9, e8).year
        } else {
            e6 = F(e4, e9, e8);
            if (e5 > e6) {
                e5 = e6
            } return a8.call(this, e4, e5, e7, e9, e8)
        }
    } function a8(e6, e5, e8, fa, e9) {
        var e7 = bB(e6, e5, e8, fa, e9), e4 = dv(e7.year, 0, e7.dayOfYear);
        this.year(e4.getUTCFullYear());
        this.month(e4.getUTCMonth());
        this.date(e4.getUTCDate());
        return this
    } cy("Q", 0, "Qo", "quarter");
    cf("quarter", "Q");
    dW("quarter", 7);
    be("Q", aL);
    bV("Q", function (e4, e5) {
        e5[j] = (cQ(e4) - 1) * 3
    });
    function b1(e4) {
        return e4 == null ? Math.ceil((this.month() + 1) / 3) : this.month((e4 - 1) * 3 + this.month() % 3)
    } cy("D", ["DD", 2], "Do", "date");
    cf("date", "D");
    dW("date", 9);
    be("D", ar);
    be("DD", ar, aK);
    be("Do", function (e5, e4) {
        return e5 ? (e4._dayOfMonthOrdinalParse || e4._ordinalParse) : e4._dayOfMonthOrdinalParseLenient
    });
    bV(["D", "DD"], et);
    bV("Do", function (e4, e5) {
        e5[et] = cQ(e4.match(ar)[0])
    });
    var cn = ec("Date", true);
    cy("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
    cf("dayOfYear", "DDD");
    dW("dayOfYear", 4);
    be("DDD", aq);
    be("DDDD", aJ);
    bV(["DDD", "DDDD"], function (e4, e6, e5) {
        e5._dayOfYear = cQ(e4)
    });
    function bg(e4) {
        var e5 = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 86400000) + 1;
        return e4 == null ? e5 : this.add((e4 - e5), "d")
    } cy("m", ["mm", 2], 0, "minute");
    cf("minute", "m");
    dW("minute", 14);
    be("m", ar);
    be("mm", ar, aK);
    bV(["m", "mm"], dI);
    var eM = ec("Minutes", false);
    cy("s", ["ss", 2], 0, "second");
    cf("second", "s");
    dW("second", 15);
    be("s", ar);
    be("ss", ar, aK);
    bV(["s", "ss"], aj);
    var bw = ec("Seconds", false);
    cy("S", 0, 0, function () {
        return ~~(this.millisecond() / 100)
    });
    cy(0, ["SS", 2], 0, function () {
        return ~~(this.millisecond() / 10)
    });
    cy(0, ["SSS", 3], 0, "millisecond");
    cy(0, ["SSSS", 4], 0, function () {
        return this.millisecond() * 10
    });
    cy(0, ["SSSSS", 5], 0, function () {
        return this.millisecond() * 100
    });
    cy(0, ["SSSSSS", 6], 0, function () {
        return this.millisecond() * 1000
    });
    cy(0, ["SSSSSSS", 7], 0, function () {
        return this.millisecond() * 10000
    });
    cy(0, ["SSSSSSSS", 8], 0, function () {
        return this.millisecond() * 100000
    });
    cy(0, ["SSSSSSSSS", 9], 0, function () {
        return this.millisecond() * 1000000
    });
    cf("millisecond", "ms");
    dW("millisecond", 16);
    be("S", aq, aL);
    be("SS", aq, aK);
    be("SSS", aq, aJ);
    var bl;
    for (bl = "SSSS";
        bl.length <= 9;
        bl += "S") {
            be(bl, s)
    } function c5(e4, e5) {
        e5[bK] = cQ(("0." + e4) * 1000)
    } for (bl = "S";
        bl.length <= 9;
        bl += "S") {
            bV(bl, c5)
    } var bZ = ec("Milliseconds", false);
    cy("z", 0, 0, "zoneAbbr");
    cy("zz", 0, 0, "zoneName");
    function eJ() {
        return this._isUTC ? "UTC" : ""
    } function eh() {
        return this._isUTC ? "Coordinated Universal Time" : ""
    } var cd = eq.prototype;
    cd.add = aZ;
    cd.calendar = cg;
    cd.clone = ds;
    cd.diff = L;
    cd.endOf = ew;
    cd.format = c7;
    cd.from = dR;
    cd.fromNow = dM;
    cd.to = ai;
    cd.toNow = aQ;
    cd.get = aA;
    cd.invalidAt = cA;
    cd.isAfter = cE;
    cd.isBefore = eN;
    cd.isBetween = ep;
    cd.isSame = cI;
    cd.isSameOrAfter = eI;
    cd.isSameOrBefore = eL;
    cd.isValid = p;
    cd.lang = z;
    cd.locale = e3;
    cd.localeData = dS;
    cd.max = en;
    cd.min = cJ;
    cd.parsingFlags = dF;
    cd.set = au;
    cd.startOf = b8;
    cd.subtract = az;
    cd.toArray = dK;
    cd.toObject = dT;
    cd.toDate = c1;
    cd.toISOString = c4;
    cd.inspect = aR;
    cd.toJSON = c8;
    cd.toString = d2;
    cd.unix = bA;
    cd.valueOf = dV;
    cd.creationData = eO;
    cd.year = cH;
    cd.isLeapYear = cW;
    cd.weekYear = br;
    cd.isoWeekYear = dZ;
    cd.quarter = cd.quarters = b1;
    cd.month = eF;
    cd.daysInMonth = bN;
    cd.week = cd.weeks = K;
    cd.isoWeek = cd.isoWeeks = y;
    cd.weeksInYear = J;
    cd.isoWeeksInYear = da;
    cd.date = cn;
    cd.day = cd.days = ej;
    cd.weekday = ae;
    cd.isoWeekday = cu;
    cd.dayOfYear = bg;
    cd.hour = cd.hours = cq;
    cd.minute = cd.minutes = eM;
    cd.second = cd.seconds = bw;
    cd.millisecond = cd.milliseconds = bZ;
    cd.utcOffset = dw;
    cd.utc = a1;
    cd.local = dt;
    cd.parseZone = b9;
    cd.hasAlignedHourOffset = aB;
    cd.isDST = aO;
    cd.isLocal = dx;
    cd.isUtcOffset = bS;
    cd.isUtc = dD;
    cd.isUTC = dD;
    cd.zoneAbbr = eJ;
    cd.zoneName = eh;
    cd.dates = ef("dates accessor is deprecated. Use date instead.", cn);
    cd.months = ef("months accessor is deprecated. Use month instead", eF);
    cd.years = ef("years accessor is deprecated. Use year instead", cH);
    cd.zone = ef("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", dr);
    cd.isDSTShifted = ef("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", b);
    function dc(e4) {
        return dC(e4 * 1000)
    } function cN() {
        return dC.apply(null, arguments).parseZone()
    } function dy(e4) {
        return e4
    } var d4 = cD.prototype;
    d4.calendar = d;
    d4.longDateFormat = cK;
    d4.invalidDate = eo;
    d4.ordinal = eA;
    d4.preparse = dy;
    d4.postformat = dy;
    d4.relativeTime = U;
    d4.pastFuture = dY;
    d4.set = dn;
    d4.months = a2;
    d4.monthsShort = bb;
    d4.monthsParse = db;
    d4.monthsRegex = cZ;
    d4.monthsShortRegex = dk;
    d4.week = bp;
    d4.firstDayOfYear = c9;
    d4.firstDayOfWeek = ah;
    d4.weekdays = ay;
    d4.weekdaysMin = eD;
    d4.weekdaysShort = N;
    d4.weekdaysParse = bM;
    d4.weekdaysRegex = eT;
    d4.weekdaysShortRegex = aG;
    d4.weekdaysMinRegex = E;
    d4.isPM = ce;
    d4.meridiem = aU;
    function I(e8, e5, e7, e9) {
        var e4 = R();
        var e6 = cw().set(e9, e5);
        return e4[e7](e6, e8)
    } function aY(e8, e5, e7) {
        if (r(e8)) {
            e5 = e8;
            e8 = undefined
        } e8 = e8 || "";
        if (e5 != null) {
            return I(e8, e5, e7, "month")
        } var e6;
        var e4 = [];
        for (e6 = 0;
            e6 < 12;
            e6++) {
                e4[e6] = I(e8, e6, e7, "month")
        } return e4
    } function eV(e9, fb, e7, fa) {
        if (typeof e9 === "boolean") {
            if (r(fb)) {
                e7 = fb;
                fb = undefined
            } fb = fb || ""
        } else {
            fb = e9;
            e7 = fb;
            e9 = false;
            if (r(fb)) {
                e7 = fb;
                fb = undefined
            } fb = fb || ""
        } var e4 = R(), e5 = e9 ? e4._week.dow : 0;
        if (e7 != null) {
            return I(fb, (e7 + e5) % 7, fa, "day")
        } var e8;
        var e6 = [];
        for (e8 = 0;
            e8 < 7;
            e8++) {
                e6[e8] = I(fb, (e8 + e5) % 7, fa, "day")
        } return e6
    } function cU(e5, e4) {
        return aY(e5, e4, "months")
    } function cC(e5, e4) {
        return aY(e5, e4, "monthsShort")
    } function c6(e5, e6, e4) {
        return eV(e5, e6, e4, "weekdays")
    } function cM(e5, e6, e4) {
        return eV(e5, e6, e4, "weekdaysShort")
    } function Z(e5, e6, e4) {
        return eV(e5, e6, e4, "weekdaysMin")
    } B("en", {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal: function (e6) {
            var e4 = e6 % 10, e5 = (cQ(e6 % 100 / 10) === 1) ? "th" : (e4 === 1) ? "st" : (e4 === 2) ? "nd" : (e4 === 3) ? "rd" : "th";
            return e6 + e5
        }
    });
    eC.lang = ef("moment.lang is deprecated. Use moment.locale instead.", B);
    eC.langData = ef("moment.langData is deprecated. Use moment.localeData instead.", R);
    var ey = Math.abs;
    function bn() {
        var e4 = this._data;
        this._milliseconds = ey(this._milliseconds);
        this._days = ey(this._days);
        this._months = ey(this._months);
        e4.milliseconds = ey(e4.milliseconds);
        e4.seconds = ey(e4.seconds);
        e4.minutes = ey(e4.minutes);
        e4.hours = ey(e4.hours);
        e4.months = ey(e4.months);
        e4.years = ey(e4.years);
        return this
    } function aF(e8, e5, e6, e7) {
        var e4 = df(e5, e6);
        e8._milliseconds += e7 * e4._milliseconds;
        e8._days += e7 * e4._days;
        e8._months += e7 * e4._months;
        return e8._bubble()
    } function bC(e4, e5) {
        return aF(this, e4, e5, 1)
    } function dP(e4, e5) {
        return aF(this, e4, e5, -1)
    } function eE(e4) {
        if (e4 < 0) {
            return Math.floor(e4)
        } else {
            return Math.ceil(e4)
        }
    } function cV() {
        var e6 = this._milliseconds;
        var fc = this._days;
        var e4 = this._months;
        var e8 = this._data;
        var fb, e7, fa, e9, e5;
        if (!((e6 >= 0 && fc >= 0 && e4 >= 0) || (e6 <= 0 && fc <= 0 && e4 <= 0))) {
            e6 += eE(eZ(e4) + fc) * 86400000;
            fc = 0;
            e4 = 0
        } e8.milliseconds = e6 % 1000;
        fb = di(e6 / 1000);
        e8.seconds = fb % 60;
        e7 = di(fb / 60);
        e8.minutes = e7 % 60;
        fa = di(e7 / 60);
        e8.hours = fa % 24;
        fc += di(fa / 24);
        e5 = di(f(fc));
        e4 += e5;
        fc -= eE(eZ(e5));
        e9 = di(e4 / 12);
        e4 %= 12;
        e8.days = fc;
        e8.months = e4;
        e8.years = e9;
        return this
    } function f(e4) {
        return e4 * 4800 / 146097
    } function eZ(e4) {
        return e4 * 146097 / 4800
    } function eH(e5) {
        if (!this.isValid()) {
            return NaN
        } var e7;
        var e4;
        var e6 = this._milliseconds;
        e5 = cP(e5);
        if (e5 === "month" || e5 === "year") {
            e7 = this._days + e6 / 86400000;
            e4 = this._months + f(e7);
            return e5 === "month" ? e4 : e4 / 12
        } else {
            e7 = this._days + Math.round(eZ(this._months));
            switch (e5) {
                case "week": return e7 / 7 + e6 / 604800000;
                case "day": return e7 + e6 / 86400000;
                case "hour": return e7 * 24 + e6 / 3600000;
                case "minute": return e7 * 1440 + e6 / 60000;
                case "second": return e7 * 86400 + e6 / 1000;
                case "millisecond": return Math.floor(e7 * 86400000) + e6;
                default: throw new Error("Unknown unit " + e5)
            }
        }
    } function c3() {
        if (!this.isValid()) {
            return NaN
        } return (this._milliseconds + this._days * 86400000 + (this._months % 12) * 2592000000 + cQ(this._months / 12) * 31536000000)
    } function d6(e4) {
        return function () {
            return this.as(e4)
        }
    } var e1 = d6("ms");
    var M = d6("s");
    var du = d6("m");
    var u = d6("h");
    var ea = d6("d");
    var dQ = d6("w");
    var d5 = d6("M");
    var bk = d6("y");
    function eU() {
        return df(this)
    } function H(e4) {
        e4 = cP(e4);
        return this.isValid() ? this[e4 + "s"]() : NaN
    } function ca(e4) {
        return function () {
            return this.isValid() ? this._data[e4] : NaN
        }
    } var c = ca("milliseconds");
    var bh = ca("seconds");
    var aE = ca("minutes");
    var V = ca("hours");
    var bf = ca("days");
    var eK = ca("months");
    var bL = ca("years");
    function ed() {
        return di(this.days() / 7)
    } var c0 = Math.round;
    var dH = { ss: 44, s: 45, m: 45, h: 22, d: 26, M: 11 };
    function ak(e5, e7, e6, e8, e4) {
        return e4.relativeTime(e7 || 1, !!e6, e5, e8)
    } function dJ(e8, e5, fc) {
        var e6 = df(e8).abs();
        var fd = c0(e6.as("s"));
        var e7 = c0(e6.as("m"));
        var fb = c0(e6.as("h"));
        var fe = c0(e6.as("d"));
        var e4 = c0(e6.as("M"));
        var e9 = c0(e6.as("y"));
        var fa = fd <= dH.ss && ["s", fd] || fd < dH.s && ["ss", fd] || e7 <= 1 && ["m"] || e7 < dH.m && ["mm", e7] || fb <= 1 && ["h"] || fb < dH.h && ["hh", fb] || fe <= 1 && ["d"] || fe < dH.d && ["dd", fe] || e4 <= 1 && ["M"] || e4 < dH.M && ["MM", e4] || e9 <= 1 && ["y"] || ["yy", e9];
        fa[2] = e5;
        fa[3] = +e8 > 0;
        fa[4] = fc;
        return ak.apply(null, fa)
    } function eu(e4) {
        if (e4 === undefined) {
            return c0
        } if (typeof (e4) === "function") {
            c0 = e4;
            return true
        } return false
    } function cm(e4, e5) {
        if (dH[e4] === undefined) {
            return false
        } if (e5 === undefined) {
            return dH[e4]
        } dH[e4] = e5;
        if (e4 === "s") {
            dH.ss = e5 - 1
        } return true
    } function a(e6) {
        if (!this.isValid()) {
            return this.localeData().invalidDate()
        } var e4 = this.localeData();
        var e5 = dJ(this, !e6, e4);
        if (e6) {
            e5 = e4.pastFuture(+this, e5)
        } return e4.postformat(e5)
    } var aV = Math.abs;
    function bU(e4) {
        return ((e4 > 0) - (e4 < 0)) || +e4
    } function bJ() {
        if (!this.isValid()) {
            return this.localeData().invalidDate()
        } var fi = aV(this._milliseconds) / 1000;
        var fj = aV(this._days);
        var e7 = aV(this._months);
        var fb, fh, fe;
        fb = di(fi / 60);
        fh = di(fb / 60);
        fi %= 60;
        fb %= 60;
        fe = di(e7 / 12);
        e7 %= 12;
        var e6 = fe;
        var ff = e7;
        var e5 = fj;
        var fd = fh;
        var fa = fb;
        var fk = fi ? fi.toFixed(3).replace(/\.?0+$/, "") : "";
        var fg = this.asSeconds();
        if (!fg) {
            return "P0D"
        } var e4 = fg < 0 ? "-" : "";
        var e8 = bU(this._months) !== bU(fg) ? "-" : "";
        var e9 = bU(this._days) !== bU(fg) ? "-" : "";
        var fc = bU(this._milliseconds) !== bU(fg) ? "-" : "";
        return e4 + "P" + (e6 ? e8 + e6 + "Y" : "") + (ff ? e8 + ff + "M" : "") + (e5 ? e9 + e5 + "D" : "") + ((fd || fa || fk) ? "T" : "") + (fd ? fc + fd + "H" : "") + (fa ? fc + fa + "M" : "") + (fk ? fc + fk + "S" : "")
    } var d3 = dO.prototype;
    d3.isValid = t;
    d3.abs = bn;
    d3.add = bC;
    d3.subtract = dP;
    d3.as = eH;
    d3.asMilliseconds = e1;
    d3.asSeconds = M;
    d3.asMinutes = du;
    d3.asHours = u;
    d3.asDays = ea;
    d3.asWeeks = dQ;
    d3.asMonths = d5;
    d3.asYears = bk;
    d3.valueOf = c3;
    d3._bubble = cV;
    d3.clone = eU;
    d3.get = H;
    d3.milliseconds = c;
    d3.seconds = bh;
    d3.minutes = aE;
    d3.hours = V;
    d3.days = bf;
    d3.weeks = ed;
    d3.months = eK;
    d3.years = bL;
    d3.humanize = a;
    d3.toISOString = bJ;
    d3.toString = bJ;
    d3.toJSON = bJ;
    d3.locale = e3;
    d3.localeData = dS;
    d3.toIsoString = ef("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", bJ);
    d3.lang = z;
    cy("X", 0, 0, "unix");
    cy("x", 0, 0, "valueOf");
    be("x", C);
    be("X", eQ);
    bV("X", function (e4, e6, e5) {
        e5._d = new Date(parseFloat(e4, 10) * 1000)
    });
    bV("x", function (e4, e6, e5) {
        e5._d = new Date(cQ(e4))
    });
    eC.version = "2.22.2";
    aS(dC);
    eC.fn = cd;
    eC.min = o;
    eC.max = bm;
    eC.now = cz;
    eC.utc = cw;
    eC.unix = dc;
    eC.months = cU;
    eC.isDate = ev;
    eC.locale = B;
    eC.invalid = O;
    eC.duration = df;
    eC.isMoment = cc;
    eC.weekdays = c6;
    eC.parseZone = cN;
    eC.localeData = R;
    eC.isDuration = af;
    eC.monthsShort = cC;
    eC.weekdaysMin = Z;
    eC.defineLocale = cB;
    eC.updateLocale = ek;
    eC.locales = b5;
    eC.weekdaysShort = cM;
    eC.normalizeUnits = cP;
    eC.relativeTimeRounding = eu;
    eC.relativeTimeThreshold = cm;
    eC.calendarFormat = av;
    eC.prototype = cd;
    eC.HTML5_FMT = { DATETIME_LOCAL: "YYYY-MM-DDTHH:mm", DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss", DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS", DATE: "YYYY-MM-DD", TIME: "HH:mm", TIME_SECONDS: "HH:mm:ss", TIME_MS: "HH:mm:ss.SSS", WEEK: "YYYY-[W]WW", MONTH: "YYYY-MM" };
    return eC
})));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (c) {
    function b(d) {
        switch (d) {
            case "date": case "time": case "datetime": return d;
            default: return "date"
        }
    } function a(d) {
        switch (d) {
            case "short": case "medium": case "long": case "full": return d;
            default: return "medium"
        }
    } c.fn.formatWithPreset = function (e, g) {
        var d = this.localeData();
        var f = d._presets[b(e)][a(g)];
        if (typeof f === "function") {
            f = f(this)
        } return this.format(f)
    };
    return c
}));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (b) {
    function a(f, e, d, h) {
        var g = { m: ["eine Minute", "einer Minute"], h: ["eine Stunde", "einer Stunde"], d: ["ein Tag", "einem Tag"], dd: [f + " Tage", f + " Tagen"], M: ["ein Monat", "einem Monat"], MM: [f + " Monate", f + " Monaten"], y: ["ein Jahr", "einem Jahr"], yy: [f + " Jahre", f + " Jahren"] };
        return e ? g[d][0] : g[d][1]
    } var c = b.defineLocale("de", { months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"), monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"), monthsParseExact: true, weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"), weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"), weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"), weekdaysParseExact: true, longDateFormat: { LT: "HH:mm", LTS: "HH:mm:ss", L: "DD.MM.YYYY", LL: "D. MMMM YYYY", LLL: "D. MMMM YYYY HH:mm", LLLL: "dddd, D. MMMM YYYY HH:mm" }, calendar: { sameDay: "[heute um] LT [Uhr]", sameElse: "L", nextDay: "[morgen um] LT [Uhr]", nextWeek: "dddd [um] LT [Uhr]", lastDay: "[gestern um] LT [Uhr]", lastWeek: "[letzten] dddd [um] LT [Uhr]" }, relativeTime: { future: "in %s", past: "vor %s", s: "ein paar Sekunden", ss: "%d Sekunden", m: a, mm: "%d Minuten", h: a, hh: "%d Stunden", d: a, dd: a, M: a, MM: a, y: a, yy: a }, dayOfMonthOrdinalParse: /\d{1,2}\./, ordinal: "%d.", week: { dow: 1, doy: 4 } });
    return c
})));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (d) {
    var c = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"), b = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_");
    var a = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var f = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
    var e = d.defineLocale("es", {
        months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"), monthsShort: function (g, h) {
            if (!g) {
                return c
            } else {
                if (/-MMM-/.test(h)) {
                    return b[g.month()]
                } else {
                    return c[g.month()]
                }
            }
        }, monthsRegex: f, monthsShortRegex: f, monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i, monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i, monthsParse: a, longMonthsParse: a, shortMonthsParse: a, weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"), weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"), weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"), weekdaysParseExact: true, longDateFormat: { LT: "H:mm", LTS: "H:mm:ss", L: "DD/MM/YYYY", LL: "D [de] MMMM [de] YYYY", LLL: "D [de] MMMM [de] YYYY H:mm", LLLL: "dddd, D [de] MMMM [de] YYYY H:mm" }, calendar: {
            sameDay: function () {
                return "[hoy a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"
            }, nextDay: function () {
                return "[mañana a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"
            }, nextWeek: function () {
                return "dddd [a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"
            }, lastDay: function () {
                return "[ayer a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"
            }, lastWeek: function () {
                return "[el] dddd [pasado a la" + ((this.hours() !== 1) ? "s" : "") + "] LT"
            }, sameElse: "L"
        }, relativeTime: { future: "en %s", past: "hace %s", s: "unos segundos", ss: "%d segundos", m: "un minuto", mm: "%d minutos", h: "una hora", hh: "%d horas", d: "un día", dd: "%d días", M: "un mes", MM: "%d meses", y: "un año", yy: "%d años" }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: "%dº", week: { dow: 1, doy: 4 }
    });
    return e
})));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (b) {
    var a = b.defineLocale("fr", {
        months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"), monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"), monthsParseExact: true, weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"), weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"), weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"), weekdaysParseExact: true, longDateFormat: { LT: "HH:mm", LTS: "HH:mm:ss", L: "DD/MM/YYYY", LL: "D MMMM YYYY", LLL: "D MMMM YYYY HH:mm", LLLL: "dddd D MMMM YYYY HH:mm" }, calendar: { sameDay: "[Aujourd’hui à] LT", nextDay: "[Demain à] LT", nextWeek: "dddd [à] LT", lastDay: "[Hier à] LT", lastWeek: "dddd [dernier à] LT", sameElse: "L" }, relativeTime: { future: "dans %s", past: "il y a %s", s: "quelques secondes", ss: "%d secondes", m: "une minute", mm: "%d minutes", h: "une heure", hh: "%d heures", d: "un jour", dd: "%d jours", M: "un mois", MM: "%d mois", y: "un an", yy: "%d ans" }, dayOfMonthOrdinalParse: /\d{1,2}(er|)/, ordinal: function (c, d) {
            switch (d) {
                case "D": return c + (c === 1 ? "er" : "");
                default: case "M": case "Q": case "DDD": case "d": return c + (c === 1 ? "er" : "e");
                case "w": case "W": return c + (c === 1 ? "re" : "e")
            }
        }, week: { dow: 1, doy: 4 }
    });
    return a
})));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (b) {
    var a = b.defineLocale("it", {
        months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"), monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"), weekdays: "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"), weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"), weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"), longDateFormat: { LT: "HH:mm", LTS: "HH:mm:ss", L: "DD/MM/YYYY", LL: "D MMMM YYYY", LLL: "D MMMM YYYY HH:mm", LLLL: "dddd D MMMM YYYY HH:mm" }, calendar: {
            sameDay: "[Oggi alle] LT", nextDay: "[Domani alle] LT", nextWeek: "dddd [alle] LT", lastDay: "[Ieri alle] LT", lastWeek: function () {
                switch (this.day()) {
                    case 0: return "[la scorsa] dddd [alle] LT";
                    default: return "[lo scorso] dddd [alle] LT"
                }
            }, sameElse: "L"
        }, relativeTime: {
            future: function (c) {
                return ((/^[0-9].+$/).test(c) ? "tra" : "in") + " " + c
            }, past: "%s fa", s: "alcuni secondi", ss: "%d secondi", m: "un minuto", mm: "%d minuti", h: "un'ora", hh: "%d ore", d: "un giorno", dd: "%d giorni", M: "un mese", MM: "%d mesi", y: "un anno", yy: "%d anni"
        }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: "%dº", week: { dow: 1, doy: 4 }
    });
    return a
})));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (a) {
    var b = a.defineLocale("pt-br", {
        months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"), monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"), weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"), weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"), weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"), weekdaysParseExact: true, longDateFormat: { LT: "HH:mm", LTS: "HH:mm:ss", L: "DD/MM/YYYY", LL: "D [de] MMMM [de] YYYY", LLL: "D [de] MMMM [de] YYYY [às] HH:mm", LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm" }, calendar: {
            sameDay: "[Hoje às] LT", nextDay: "[Amanhã às] LT", nextWeek: "dddd [às] LT", lastDay: "[Ontem às] LT", lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT"
            }, sameElse: "L"
        }, relativeTime: { future: "em %s", past: "há %s", s: "poucos segundos", ss: "%d segundos", m: "um minuto", mm: "%d minutos", h: "uma hora", hh: "%d horas", d: "um dia", dd: "%d dias", M: "um mês", MM: "%d meses", y: "um ano", yy: "%d anos" }, dayOfMonthOrdinalParse: /\d{1,2}º/, ordinal: "%dº"
    });
    return b
})));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (b) {
    var a = b.defineLocale("zh-cn", {
        months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"), monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"), weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"), weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"), weekdaysMin: "日_一_二_三_四_五_六".split("_"), longDateFormat: { LT: "HH:mm", LTS: "HH:mm:ss", L: "YYYY/MM/DD", LL: "YYYY年M月D日", LLL: "YYYY年M月D日Ah点mm分", LLLL: "YYYY年M月D日ddddAh点mm分", l: "YYYY/M/D", ll: "YYYY年M月D日", lll: "YYYY年M月D日 HH:mm", llll: "YYYY年M月D日dddd HH:mm" }, meridiemParse: /凌晨|早上|上午|中午|下午|晚上/, meridiemHour: function (c, d) {
            if (c === 12) {
                c = 0
            } if (d === "凌晨" || d === "早上" || d === "上午") {
                return c
            } else {
                if (d === "下午" || d === "晚上") {
                    return c + 12
                } else {
                    return c >= 11 ? c : c + 12
                }
            }
        }, meridiem: function (c, e, d) {
            var f = c * 100 + e;
            if (f < 600) {
                return "凌晨"
            } else {
                if (f < 900) {
                    return "早上"
                } else {
                    if (f < 1130) {
                        return "上午"
                    } else {
                        if (f < 1230) {
                            return "中午"
                        } else {
                            if (f < 1800) {
                                return "下午"
                            } else {
                                return "晚上"
                            }
                        }
                    }
                }
            }
        }, calendar: { sameDay: "[今天]LT", nextDay: "[明天]LT", nextWeek: "[下]ddddLT", lastDay: "[昨天]LT", lastWeek: "[上]ddddLT", sameElse: "L" }, dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/, ordinal: function (c, d) {
            switch (d) {
                case "d": case "D": case "DDD": return c + "日";
                case "M": return c + "月";
                case "w": case "W": return c + "周";
                default: return c
            }
        }, relativeTime: { future: "%s内", past: "%s前", s: "几秒", ss: "%d 秒", m: "1 分钟", mm: "%d 分钟", h: "1 小时", hh: "%d 小时", d: "1 天", dd: "%d 天", M: "1 个月", MM: "%d 个月", y: "1 年", yy: "%d 年" }, week: { dow: 1, doy: 4 }
    });
    return a
})));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (b) {
    var a = b.defineLocale("zh-tw", {
        months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"), monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"), weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"), weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"), weekdaysMin: "日_一_二_三_四_五_六".split("_"), longDateFormat: { LT: "HH:mm", LTS: "HH:mm:ss", L: "YYYY/MM/DD", LL: "YYYY年M月D日", LLL: "YYYY年M月D日 HH:mm", LLLL: "YYYY年M月D日dddd HH:mm", l: "YYYY/M/D", ll: "YYYY年M月D日", lll: "YYYY年M月D日 HH:mm", llll: "YYYY年M月D日dddd HH:mm" }, meridiemParse: /凌晨|早上|上午|中午|下午|晚上/, meridiemHour: function (c, d) {
            if (c === 12) {
                c = 0
            } if (d === "凌晨" || d === "早上" || d === "上午") {
                return c
            } else {
                if (d === "中午") {
                    return c >= 11 ? c : c + 12
                } else {
                    if (d === "下午" || d === "晚上") {
                        return c + 12
                    }
                }
            }
        }, meridiem: function (c, e, d) {
            var f = c * 100 + e;
            if (f < 600) {
                return "凌晨"
            } else {
                if (f < 900) {
                    return "早上"
                } else {
                    if (f < 1130) {
                        return "上午"
                    } else {
                        if (f < 1230) {
                            return "中午"
                        } else {
                            if (f < 1800) {
                                return "下午"
                            } else {
                                return "晚上"
                            }
                        }
                    }
                }
            }
        }, calendar: { sameDay: "[今天] LT", nextDay: "[明天] LT", nextWeek: "[下]dddd LT", lastDay: "[昨天] LT", lastWeek: "[上]dddd LT", sameElse: "L" }, dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/, ordinal: function (c, d) {
            switch (d) {
                case "d": case "D": case "DDD": return c + "日";
                case "M": return c + "月";
                case "w": case "W": return c + "週";
                default: return c
            }
        }, relativeTime: { future: "%s內", past: "%s前", s: "幾秒", ss: "%d 秒", m: "1 分鐘", mm: "%d 分鐘", h: "1 小時", hh: "%d 小時", d: "1 天", dd: "%d 天", M: "1 個月", MM: "%d 個月", y: "1 年", yy: "%d 年" }
    });
    return a
})));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (b) {
    var a = b.defineLocale("ja", {
        months: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"), monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"), weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"), weekdaysShort: "日_月_火_水_木_金_土".split("_"), weekdaysMin: "日_月_火_水_木_金_土".split("_"), longDateFormat: { LT: "HH:mm", LTS: "HH:mm:ss", L: "YYYY/MM/DD", LL: "YYYY年M月D日", LLL: "YYYY年M月D日 HH:mm", LLLL: "YYYY年M月D日 dddd HH:mm", l: "YYYY/MM/DD", ll: "YYYY年M月D日", lll: "YYYY年M月D日 HH:mm", llll: "YYYY年M月D日(ddd) HH:mm" }, meridiemParse: /午前|午後/i, isPM: function (c) {
            return c === "午後"
        }, meridiem: function (c, e, d) {
            if (c < 12) {
                return "午前"
            } else {
                return "午後"
            }
        }, calendar: {
            sameDay: "[今日] LT", nextDay: "[明日] LT", nextWeek: function (c) {
                if (c.week() < this.week()) {
                    return "[来週]dddd LT"
                } else {
                    return "dddd LT"
                }
            }, lastDay: "[昨日] LT", lastWeek: function (c) {
                if (this.week() < c.week()) {
                    return "[先週]dddd LT"
                } else {
                    return "dddd LT"
                }
            }, sameElse: "L"
        }, dayOfMonthOrdinalParse: /\d{1,2}日/, ordinal: function (c, d) {
            switch (d) {
                case "d": case "D": case "DDD": return c + "日";
                default: return c
            }
        }, relativeTime: { future: "%s後", past: "%s前", s: "数秒", ss: "%d秒", m: "1分", mm: "%d分", h: "1時間", hh: "%d時間", d: "1日", dd: "%d日", M: "1ヶ月", MM: "%dヶ月", y: "1年", yy: "%d年" }
    });
    return a
})));
(function (b, a) {
    typeof exports === "object" && typeof module !== "undefined" && typeof require === "function" ? a(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], a) : a(b.moment)
}(this, (function (b) {
    var a = b.defineLocale("ko", {
        months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"), monthsShort: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"), weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"), weekdaysShort: "일_월_화_수_목_금_토".split("_"), weekdaysMin: "일_월_화_수_목_금_토".split("_"), longDateFormat: { LT: "A h:mm", LTS: "A h:mm:ss", L: "YYYY.MM.DD.", LL: "YYYY년 MMMM D일", LLL: "YYYY년 MMMM D일 A h:mm", LLLL: "YYYY년 MMMM D일 dddd A h:mm", l: "YYYY.MM.DD.", ll: "YYYY년 MMMM D일", lll: "YYYY년 MMMM D일 A h:mm", llll: "YYYY년 MMMM D일 dddd A h:mm" }, calendar: { sameDay: "오늘 LT", nextDay: "내일 LT", nextWeek: "dddd LT", lastDay: "어제 LT", lastWeek: "지난주 dddd LT", sameElse: "L" }, relativeTime: { future: "%s 후", past: "%s 전", s: "몇 초", ss: "%d초", m: "1분", mm: "%d분", h: "한 시간", hh: "%d시간", d: "하루", dd: "%d일", M: "한 달", MM: "%d달", y: "일 년", yy: "%d년" }, dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/, ordinal: function (c, d) {
            switch (d) {
                case "d": case "D": case "DDD": return c + "일";
                case "M": return c + "월";
                case "w": case "W": return c + "주";
                default: return c
            }
        }, meridiemParse: /오전|오후/, isPM: function (c) {
            return c === "오후"
        }, meridiem: function (c, e, d) {
            return c < 12 ? "오전" : "오후"
        }
    });
    return a
})));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("en", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("en", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("en", {
        presets: {
            date: { short: "M/D/YY", medium: "MMM D, Y", long: "MMMM D, Y", full: "dddd, MMMM D, Y" }, time: {
                short: "h:mm A", medium: "h:mm:ss A", long: function (f) {
                    return "h:mm:ss A [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "h:mm:ss A [" + a(f.toDate()) + "]"
                }
            }, datetime: {
                short: "M/D/YY, h:mm A", medium: "MMM D, Y, h:mm:ss A", long: function (f) {
                    return "MMMM D, Y [at] h:mm:ss A [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "dddd, MMMM D, Y [at] h:mm:ss A [" + a(f.toDate()) + "]"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("de", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("de", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("de", {
        presets: {
            date: { short: "DD.MM.YY", medium: "DD.MM.Y", long: "D. MMMM Y", full: "dddd, D. MMMM Y" }, time: {
                short: "HH:mm", medium: "HH:mm:ss", long: function (f) {
                    return "HH:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "HH:mm:ss [" + a(f.toDate()) + "]"
                }
            }, datetime: {
                short: "DD.MM.YY, HH:mm", medium: "DD.MM.Y, HH:mm:ss", long: function (f) {
                    return "D. MMMM Y [um] HH:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "dddd, D. MMMM Y [um] HH:mm:ss [" + a(f.toDate()) + "]"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("es", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("es", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("es", {
        presets: {
            date: { short: "D/M/YY", medium: "D MMM Y", long: "D [de] MMMM [de] Y", full: "dddd, D [de] MMMM [de] Y" }, time: {
                short: "H:mm", medium: "H:mm:ss", long: function (f) {
                    return "H:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "H:mm:ss [(" + a(f.toDate()) + ")]"
                }
            }, datetime: {
                short: "D/M/YY H:mm", medium: "D MMM Y H:mm:ss", long: function (f) {
                    return "D [de] MMMM [de] Y, H:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "dddd, D [de] MMMM [de] Y, H:mm:ss [(" + a(f.toDate()) + ")]"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("fr", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("fr", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("fr", {
        presets: {
            date: { short: "DD/MM/Y", medium: "D MMM Y", long: "D MMMM Y", full: "dddd D MMMM Y" }, time: {
                short: "HH:mm", medium: "HH:mm:ss", long: function (f) {
                    return "HH:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "HH:mm:ss [" + a(f.toDate()) + "]"
                }
            }, datetime: {
                short: "DD/MM/Y HH:mm", medium: "D MMM Y à HH:mm:ss", long: function (f) {
                    return "D MMMM Y à HH:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "dddd D MMMM Y à HH:mm:ss [" + a(f.toDate()) + "]"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("it", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("it", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("it", {
        presets: {
            date: { short: "DD/MM/YY", medium: "DD MMM Y", long: "D MMMM Y", full: "dddd D MMMM Y" }, time: {
                short: "HH:mm", medium: "HH:mm:ss", long: function (f) {
                    return "HH:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "HH:mm:ss [" + a(f.toDate()) + "]"
                }
            }, datetime: {
                short: "DD/MM/YY, HH:mm", medium: "DD MMM Y, HH:mm:ss", long: function (f) {
                    return "D MMMM Y HH:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "dddd D MMMM Y HH:mm:ss [" + a(f.toDate()) + "]"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("pt-br", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("pt-br", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("pt-br", {
        presets: {
            date: { short: "DD/MM/Y", medium: "D [de] MMM [de] Y", long: "D [de] MMMM [de] Y", full: "dddd, D [de] MMMM [de] Y" }, time: {
                short: "HH:mm", medium: "HH:mm:ss", long: function (f) {
                    return "HH:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "HH:mm:ss [" + a(f.toDate()) + "]"
                }
            }, datetime: {
                short: "DD/MM/Y HH:mm", medium: "D [de] MMM [de] Y HH:mm:ss", long: function (f) {
                    return "D [de] MMMM [de] Y HH:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "dddd, D [de] MMMM [de] Y HH:mm:ss [" + a(f.toDate()) + "]"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("zh-cn", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("zh-cn", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("zh-cn", {
        presets: {
            date: { short: "Y/M/D", medium: "Y年M月D日", long: "Y年M月D日", full: "Y年M月D日dddd" }, time: {
                short: "ah:mm", medium: "ah:mm:ss", long: function (f) {
                    return "[" + b(f.toDate()) + "] ah:mm:ss"
                }, full: function (f) {
                    return "[" + a(f.toDate()) + "] ah:mm:ss"
                }
            }, datetime: {
                short: "Y/M/D ah:mm", medium: "Y年M月D日 ah:mm:ss", long: function (f) {
                    return "Y年M月D日 [" + b(f.toDate()) + "] ah:mm:ss"
                }, full: function (f) {
                    return "Y年M月D日dddd [" + a(f.toDate()) + "] ah:mm:ss"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("zh-tw", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("zh-tw", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("zh-tw", {
        presets: {
            date: { short: "Y/M/D", medium: "Y年M月D日", long: "Y年M月D日", full: "Y年M月D日 dddd" }, time: {
                short: "ah:mm", medium: "ah:mm:ss", long: function (f) {
                    return "ah:mm:ss [[" + b(f.toDate()) + "]]"
                }, full: function (f) {
                    return "ah:mm:ss [[" + a(f.toDate()) + "]]"
                }
            }, datetime: {
                short: "Y/M/D ah:mm", medium: "Y年M月D日 ah:mm:ss", long: function (f) {
                    return "Y年M月D日 ah:mm:ss [[" + b(f.toDate()) + "]]"
                }, full: function (f) {
                    return "Y年M月D日 dddd ah:mm:ss [[" + a(f.toDate()) + "]]"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("ja", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("ja", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("ja", {
        presets: {
            date: { short: "Y/MM/DD", medium: "Y/MM/DD", long: "Y年M月D日", full: "Y年M月D日dddd" }, time: {
                short: "H:mm", medium: "H:mm:ss", long: function (f) {
                    return "H:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "H時mm分ss秒 [" + a(f.toDate()) + "]"
                }
            }, datetime: {
                short: " Y/MM/DD H:mm", medium: "Y/MM/DD H:mm:ss", long: function (f) {
                    return "Y年M月D日 H:mm:ss [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "Y年M月D日dddd H時mm分ss秒 [" + a(f.toDate()) + "]"
                }
            }
        }
    })
}));
(function (a, b) {
    if (typeof module === "object" && module.exports) {
        module.exports = b(require("moment"))
    } else {
        b(a.moment)
    }
}(this, function (e) {
    var d = new Intl.DateTimeFormat("ko", { year: "2-digit", timeZoneName: "short" });
    var c = new Intl.DateTimeFormat("ko", { year: "2-digit", timeZoneName: "long" });
    function b(g) {
        var f = d.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } function a(g) {
        var f = c.format(g);
        return f.substring(f.indexOf(" ") + 1)
    } e.updateLocale("ko", {
        presets: {
            date: { short: "YY. M. D.", medium: "Y. M. D.", long: "Y년 M월 D일", full: "Y년 M월 D일 dddd" }, time: {
                short: "a h:mm", medium: "a h:mm:ss", long: function (f) {
                    return "a h시 m분 s초 [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "a h시 m분 s초 [" + a(f.toDate()) + "]"
                }
            }, datetime: {
                short: "YY. M. D. a h:mm", medium: "Y. M. D. a h:mm:ss", long: function (f) {
                    return "Y년 M월 D일 a h시 m분 s초 [" + b(f.toDate()) + "]"
                }, full: function (f) {
                    return "Y년 M월 D일 dddd a h시 m분 s초 [" + a(f.toDate()) + "]"
                }
            }
        }
    })
}));
(function () {
    var m;
    var g = [], s = [];
    var I = 0;
    var a = +new Date + "";
    var b = 75;
    var k = 40;
    var F = (" \t\x0B\f\xA0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000");
    var x = /\b__p \+= '';/g, S = /\b(__p \+=) '' \+/g, e = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    var A = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    var D = /\w*$/;
    var q = /^\s*function[ \n\r\t]+\w/;
    var n = /<%=([\s\S]+?)%>/g;
    var X = RegExp("^[" + F + "]*0+(?=.$)");
    var Q = /($^)/;
    var j = /\bthis\b/;
    var U = /['\n\r\t\u2028\u2029\\]/g;
    var y = ["Array", "Boolean", "Date", "Function", "Math", "Number", "Object", "RegExp", "String", "_", "attachEvent", "clearTimeout", "isFinite", "isNaN", "parseInt", "setTimeout"];
    var aa = 0;
    var T = "[object Arguments]", u = "[object Array]", B = "[object Boolean]", J = "[object Date]", ac = "[object Function]", G = "[object Number]", c = "[object Object]", K = "[object RegExp]", H = "[object String]";
    var v = {};
    v[ac] = false;
    v[T] = v[u] = v[B] = v[J] = v[G] = v[c] = v[K] = v[H] = true;
    var N = { leading: false, maxWait: 0, trailing: false };
    var l = { configurable: false, enumerable: false, value: null, writable: false };
    var E = { "boolean": false, "function": true, object: true, number: false, string: false, "undefined": false };
    var M = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\t": "t", "\u2028": "u2028", "\u2029": "u2029" };
    var C = (E[typeof window] && window) || this;
    var V = E[typeof exports] && exports && !exports.nodeType && exports;
    var z = E[typeof module] && module && !module.nodeType && module;
    var P = z && z.exports === V && V;
    var w = E[typeof global] && global;
    if (w && (w.global === w || w.window === w)) {
        C = w
    } function h(ah, ag, ae) {
        var ad = (ae || 0) - 1, af = ah ? ah.length : 0;
        while (++ad < af) {
            if (ah[ad] === ag) {
                return ad
            }
        } return -1
    } function O(ad, ag) {
        var af = typeof ag;
        ad = ad.cache;
        if (af == "boolean" || ag == null) {
            return ad[ag] ? 0 : -1
        } if (af != "number" && af != "string") {
            af = "object"
        } var ae = af == "number" ? ag : a + ag;
        ad = (ad = ad[af]) && ad[ae];
        return af == "object" ? (ad && h(ad, ag) > -1 ? 0 : -1) : (ad ? 0 : -1)
    } function L(ah) {
        var ae = this.cache, ag = typeof ah;
        if (ag == "boolean" || ah == null) {
            ae[ah] = true
        } else {
            if (ag != "number" && ag != "string") {
                ag = "object"
            } var af = ag == "number" ? ah : a + ah, ad = ae[ag] || (ae[ag] = {});
            if (ag == "object") {
                (ad[af] || (ad[af] = [])).push(ah)
            } else {
                ad[af] = true
            }
        }
    } function p(ad) {
        return ad.charCodeAt(0)
    } function W(af, ae) {
        var ai = af.criteria, ak = ae.criteria, ag = -1, ah = ai.length;
        while (++ag < ah) {
            var aj = ai[ag], ad = ak[ag];
            if (aj !== ad) {
                if (aj > ad || typeof aj == "undefined") {
                    return 1
                } if (aj < ad || typeof ad == "undefined") {
                    return -1
                }
            }
        } return af.index - ae.index
    } function Z(ak) {
        var ag = -1, ai = ak.length, aj = ak[0], af = ak[(ai / 2) | 0], ah = ak[ai - 1];
        if (aj && typeof aj == "object" && af && typeof af == "object" && ah && typeof ah == "object") {
            return false
        } var ae = r();
        ae["false"] = ae["null"] = ae["true"] = ae["undefined"] = false;
        var ad = r();
        ad.array = ak;
        ad.cache = ae;
        ad.push = L;
        while (++ag < ai) {
            ad.push(ak[ag])
        } return ad
    } function f(ad) {
        return "\\" + M[ad]
    } function d() {
        return g.pop() || []
    } function r() {
        return s.pop() || { array: null, cache: null, criteria: null, "false": false, index: 0, "null": false, number: null, object: null, push: null, string: null, "true": false, "undefined": false, value: null }
    } function R(ad) {
        ad.length = 0;
        if (g.length < k) {
            g.push(ad)
        }
    } function o(ae) {
        var ad = ae.cache;
        if (ad) {
            o(ad)
        } ae.array = ae.cache = ae.criteria = ae.object = ae.number = ae.string = ae.value = null;
        if (s.length < k) {
            s.push(ae)
        }
    } function t(ai, ah, ae) {
        ah || (ah = 0);
        if (typeof ae == "undefined") {
            ae = ai ? ai.length : 0
        } var af = -1, ag = ae - ah || 0, ad = Array(ag < 0 ? 0 : ag);
        while (++af < ag) {
            ad[af] = ai[ah + af]
        } return ad
    } function Y(ai) {
        ai = ai ? ab.defaults(C.Object(), ai, ab.pick(C, y)) : C;
        var aG = ai.Array, ce = ai.Boolean, cf = ai.Date, aZ = ai.Function, b4 = ai.Math, be = ai.Number, c2 = ai.Object, cG = ai.RegExp, cp = ai.String, aH = ai.TypeError;
        var b8 = [];
        var cK = c2.prototype;
        var cW = ai._;
        var aA = cK.toString;
        var b1 = cG("^" + cp(aA).replace(/[.*+?^${}()|[\]\\]/g, "\\$&").replace(/toString| for [^\]]+/g, ".*?") + "$");
        var aW = b4.ceil, bS = ai.clearTimeout, cO = b4.floor, bC = aZ.prototype.toString, au = b5(au = c2.getPrototypeOf) && au, a0 = cK.hasOwnProperty, ax = b8.push, aX = ai.setTimeout, cn = b8.splice, cJ = b8.unshift;
        var cH = (function () {
            try {
                var di = {}, dg = b5(dg = c2.defineProperty) && dg, at = dg(di, di, di) && dg
            } catch (dh) { } return at
        }());
        var aw = b5(aw = c2.create) && aw, bf = b5(bf = aG.isArray) && bf, aJ = ai.isFinite, bE = ai.isNaN, cj = b5(cj = c2.keys) && cj, ck = b4.max, an = b4.min, db = ai.parseInt, bK = b4.random;
        var cL = {};
        cL[u] = aG;
        cL[B] = ce;
        cL[J] = cf;
        cL[ac] = aZ;
        cL[c] = c2;
        cL[G] = be;
        cL[K] = cG;
        cL[H] = cp;
        function aU(at) {
            return (at && typeof at == "object" && !bD(at) && a0.call(at, "__wrapped__")) ? at : new cQ(at)
        } function cQ(dg, at) {
            this.__chain__ = !!at;
            this.__wrapped__ = dg
        } cQ.prototype = aU.prototype;
        var aF = aU.support = {};
        aF.funcDecomp = !b5(ai.WinRTError) && j.test(Y);
        aF.funcNames = typeof aZ.name == "string";
        aU.templateSettings = { escape: /<%-([\s\S]+?)%>/g, evaluate: /<%([\s\S]+?)%>/g, interpolate: n, variable: "", imports: { _: aU } };
        function aq(dj) {
            var di = dj[0], dg = dj[2], at = dj[4];
            function dh() {
                if (dg) {
                    var dm = t(dg);
                    ax.apply(dm, arguments)
                } if (this instanceof dh) {
                    var dl = b0(di.prototype), dk = di.apply(dl, dm || arguments);
                    return de(dk) ? dk : dl
                } return di.apply(at, dm || arguments)
            } ae(dh, dj);
            return dh
        } function bj(dp, dl, dq, dj, dh) {
            if (dq) {
                var dr = dq(dp);
                if (typeof dr != "undefined") {
                    return dr
                }
            } var di = de(dp);
            if (di) {
                var dm = aA.call(dp);
                if (!v[dm]) {
                    return dp
                } var dn = cL[dm];
                switch (dm) {
                    case B: case J: return new dn(+dp);
                    case G: case H: return new dn(dp);
                    case K: dr = dn(dp.source, D.exec(dp));
                        dr.lastIndex = dp.lastIndex;
                        return dr
                }
            } else {
                return dp
            } var dk = bD(dp);
            if (dl) {
                var dg = !dj;
                dj || (dj = d());
                dh || (dh = d());
                var at = dj.length;
                while (at--) {
                    if (dj[at] == dp) {
                        return dh[at]
                    }
                } dr = dk ? dn(dp.length) : {}
            } else {
                dr = dk ? t(dp) : bs({}, dp)
            } if (dk) {
                if (a0.call(dp, "index")) {
                    dr.index = dp.index
                } if (a0.call(dp, "input")) {
                    dr.input = dp.input
                }
            } if (!dl) {
                return dr
            } dj.push(dp);
            dh.push(dr);
            (dk ? bB : bO)(dp, function (ds, dt) {
                dr[dt] = bj(ds, dl, dq, dj, dh)
            });
            if (dg) {
                R(dj);
                R(dh)
            } return dr
        } function b0(at, dg) {
            return de(at) ? aw(at) : {}
        } if (!aw) {
            b0 = (function () {
                function at() { } return function (dh) {
                    if (de(dh)) {
                        at.prototype = dh;
                        var dg = new at;
                        at.prototype = null
                    } return dg || ai.Object()
                }
            }())
        } function cu(dg, at, dj) {
            if (typeof dg != "function") {
                return bk
            } if (typeof at == "undefined" || !("prototype" in dg)) {
                return dg
            } var di = dg.__bindData__;
            if (typeof di == "undefined") {
                if (aF.funcNames) {
                    di = !dg.name
                } di = di || !aF.funcDecomp;
                if (!di) {
                    var dh = bC.call(dg);
                    if (!aF.funcNames) {
                        di = !q.test(dh)
                    } if (!di) {
                        di = j.test(dh);
                        ae(dg, di)
                    }
                }
            } if (di === false || (di !== true && di[1] & 1)) {
                return dg
            } switch (dj) {
                case 1: return function (dk) {
                    return dg.call(at, dk)
                };
                case 2: return function (dl, dk) {
                    return dg.call(at, dl, dk)
                };
                case 3: return function (dl, dk, dm) {
                    return dg.call(at, dl, dk, dm)
                };
                case 4: return function (dk, dm, dl, dn) {
                    return dg.call(at, dk, dm, dl, dn)
                }
            }return bY(dg, at)
        } function bm(di) {
            var dk = di[0], dh = di[1], dm = di[2], dg = di[3], dq = di[4], at = di[5];
            var dj = dh & 1, ds = dh & 2, dp = dh & 4, dn = dh & 8, dr = dk;
            function dl() {
                var du = dj ? dq : this;
                if (dm) {
                    var dv = t(dm);
                    ax.apply(dv, arguments)
                } if (dg || dp) {
                    dv || (dv = t(arguments));
                    if (dg) {
                        ax.apply(dv, dg)
                    } if (dp && dv.length < at) {
                        dh |= 16 & ~32;
                        return bm([dk, (dn ? dh : dh & ~3), dv, null, dq, at])
                    }
                } dv || (dv = arguments);
                if (ds) {
                    dk = du[dr]
                } if (this instanceof dl) {
                    du = b0(dk.prototype);
                    var dt = dk.apply(du, dv);
                    return de(dt) ? dt : du
                } return dk.apply(du, dv)
            } ae(dl, di);
            return dl
        } function dd(di, dm) {
            var dh = -1, dj = b6(), dg = di ? di.length : 0, dk = dg >= b && dj === h, dn = [];
            if (dk) {
                var at = Z(dm);
                if (at) {
                    dj = O;
                    dm = at
                } else {
                    dk = false
                }
            } while (++dh < dg) {
                var dl = di[dh];
                if (dj(dm, dl) < 0) {
                    dn.push(dl)
                }
            } if (dk) {
                o(dm)
            } return dn
        } function bU(di, dk, dg, dl) {
            var dh = (dl || 0) - 1, at = di ? di.length : 0, dq = [];
            while (++dh < at) {
                var dm = di[dh];
                if (dm && typeof dm == "object" && typeof dm.length == "number" && (bD(dm) || a5(dm))) {
                    if (!dk) {
                        dm = bU(dm, dk, dg)
                    } var dp = -1, dj = dm.length, dn = dq.length;
                    dq.length += dj;
                    while (++dp < dj) {
                        dq[dn++] = dm[dp]
                    }
                } else {
                    if (!dg) {
                        dq.push(dm)
                    }
                }
            } return dq
        } function bc(dy, dx, dm, du, dA, dz) {
            if (dm) {
                var ds = dm(dy, dx);
                if (typeof ds != "undefined") {
                    return !!ds
                }
            } if (dy === dx) {
                return dy !== 0 || (1 / dy == 1 / dx)
            } var dl = typeof dy, dj = typeof dx;
            if (dy === dy && !(dy && E[dl]) && !(dx && E[dj])) {
                return false
            } if (dy == null || dx == null) {
                return dy === dx
            } var dg = aA.call(dy), dq = aA.call(dx);
            if (dg == T) {
                dg = c
            } if (dq == T) {
                dq = c
            } if (dg != dq) {
                return false
            } switch (dg) {
                case B: case J: return +dy == +dx;
                case G: return (dy != +dy) ? dx != +dx : (dy == 0 ? (1 / dy == 1 / dx) : dy == +dx);
                case K: case H: return dy == cp(dx)
            }var dn = dg == u;
            if (!dn) {
                var dt = a0.call(dy, "__wrapped__"), at = a0.call(dx, "__wrapped__");
                if (dt || at) {
                    return bc(dt ? dy.__wrapped__ : dy, at ? dx.__wrapped__ : dx, dm, du, dA, dz)
                } if (dg != c) {
                    return false
                } var dk = dy.constructor, dh = dx.constructor;
                if (dk != dh && !(ay(dk) && dk instanceof dk && ay(dh) && dh instanceof dh) && ("constructor" in dy && "constructor" in dx)) {
                    return false
                }
            } var dr = !dA;
            dA || (dA = d());
            dz || (dz = d());
            var di = dA.length;
            while (di--) {
                if (dA[di] == dy) {
                    return dz[di] == dx
                }
            } var dv = 0;
            ds = true;
            dA.push(dy);
            dz.push(dx);
            if (dn) {
                di = dy.length;
                dv = dx.length;
                ds = dv == di;
                if (ds || du) {
                    while (dv--) {
                        var dp = di, dw = dx[dv];
                        if (du) {
                            while (dp--) {
                                if ((ds = bc(dy[dp], dw, dm, du, dA, dz))) {
                                    break
                                }
                            }
                        } else {
                            if (!(ds = bc(dy[dv], dw, dm, du, dA, dz))) {
                                break
                            }
                        }
                    }
                }
            } else {
                aj(dx, function (dD, dC, dB) {
                    if (a0.call(dB, dC)) {
                        dv++;
                        return (ds = a0.call(dy, dC) && bc(dy[dC], dD, dm, du, dA, dz))
                    }
                });
                if (ds && !du) {
                    aj(dy, function (dD, dC, dB) {
                        if (a0.call(dB, dC)) {
                            return (ds = --dv > -1)
                        }
                    })
                }
            } dA.pop();
            dz.pop();
            if (dr) {
                R(dA);
                R(dz)
            } return ds
        } function ah(dg, dh, dj, at, di) {
            (bD(dh) ? bB : bO)(dh, function (dr, dm) {
                var dq, dn, dl = dr, dp = dg[dm];
                if (dr && ((dn = bD(dr)) || aO(dr))) {
                    var ds = at.length;
                    while (ds--) {
                        if ((dq = at[ds] == dr)) {
                            dp = di[ds];
                            break
                        }
                    } if (!dq) {
                        var dk;
                        if (dj) {
                            dl = dj(dp, dr);
                            if ((dk = typeof dl != "undefined")) {
                                dp = dl
                            }
                        } if (!dk) {
                            dp = dn ? (bD(dp) ? dp : []) : (aO(dp) ? dp : {})
                        } at.push(dr);
                        di.push(dp);
                        if (!dk) {
                            ah(dp, dr, dj, at, di)
                        }
                    }
                } else {
                    if (dj) {
                        dl = dj(dp, dr);
                        if (typeof dl == "undefined") {
                            dl = dr
                        }
                    } if (typeof dl != "undefined") {
                        dp = dl
                    }
                } dg[dm] = dp
            })
        } function ap(dg, at) {
            return dg + cO(bK() * (at - dg + 1))
        } function af(dl, di, dq) {
            var dk = -1, dm = b6(), dh = dl ? dl.length : 0, dr = [];
            var dn = !di && dh >= b && dm === h, dg = (dq || dn) ? d() : dr;
            if (dn) {
                var at = Z(dg);
                dm = O;
                dg = at
            } while (++dk < dh) {
                var dp = dl[dk], dj = dq ? dq(dp, dk, dl) : dp;
                if (di ? !dk || dg[dg.length - 1] !== dj : dm(dg, dj) < 0) {
                    if (dq || dn) {
                        dg.push(dj)
                    } dr.push(dp)
                }
            } if (dn) {
                R(dg.array);
                o(dg)
            } else {
                if (dq) {
                    R(dg)
                }
            } return dr
        } function bT(at) {
            return function (dl, dm, dh) {
                var dg = {};
                dm = aU.createCallback(dm, dh, 3);
                var di = -1, dj = dl ? dl.length : 0;
                if (typeof dj == "number") {
                    while (++di < dj) {
                        var dk = dl[di];
                        at(dg, dk, dm(dk, di, dl), dl)
                    }
                } else {
                    bO(dl, function (dp, dn, dq) {
                        at(dg, dp, dm(dp, dn, dq), dq)
                    })
                } return dg
            }
        } function cM(dl, di, dm, dh, ds, at) {
            var dk = di & 1, dt = di & 2, dq = di & 4, dp = di & 8, dg = di & 16, dn = di & 32;
            if (!dt && !ay(dl)) {
                throw new aH
            } if (dg && !dm.length) {
                di &= ~16;
                dg = dm = false
            } if (dn && !dh.length) {
                di &= ~32;
                dn = dh = false
            } var dj = dl && dl.__bindData__;
            if (dj && dj !== true) {
                dj = t(dj);
                if (dj[2]) {
                    dj[2] = t(dj[2])
                } if (dj[3]) {
                    dj[3] = t(dj[3])
                } if (dk && !(dj[1] & 1)) {
                    dj[4] = ds
                } if (!dk && dj[1] & 1) {
                    di |= 8
                } if (dq && !(dj[1] & 4)) {
                    dj[5] = at
                } if (dg) {
                    ax.apply(dj[2] || (dj[2] = []), dm)
                } if (dn) {
                    cJ.apply(dj[3] || (dj[3] = []), dh)
                } dj[1] |= di;
                return cM.apply(null, dj)
            } var dr = (di == 1 || di === 17) ? aq : bm;
            return dr([dl, di, dm, dh, ds, at])
        } function bo(at) {
            return aT[at]
        } function b6() {
            var at = (at = aU.indexOf) === c5 ? h : at;
            return at
        } function b5(at) {
            return typeof at == "function" && b1.test(at)
        } var ae = !cH ? ag : function (at, dg) {
            l.value = dg;
            cH(at, "__bindData__", l)
        };
        function aL(dh) {
            var dg, at;
            if (!(dh && aA.call(dh) == c) || (dg = dh.constructor, ay(dg) && !(dg instanceof dg))) {
                return false
            } aj(dh, function (dj, di) {
                at = di
            });
            return typeof at == "undefined" || a0.call(dh, at)
        } function bp(at) {
            return bV[at]
        } function a5(at) {
            return at && typeof at == "object" && typeof at.length == "number" && aA.call(at) == T || false
        } var bD = bf || function (at) {
            return at && typeof at == "object" && typeof at.length == "number" && aA.call(at) == u || false
        };
        var bd = function (dh) {
            var dg, di = dh, at = [];
            if (!di) {
                return at
            } if (!(E[typeof dh])) {
                return at
            } for (dg in di) {
                if (a0.call(di, dg)) {
                    at.push(dg)
                }
            } return at
        };
        var ca = !cj ? bd : function (at) {
            if (!de(at)) {
                return []
            } return cj(at)
        };
        var aT = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" };
        var bV = b7(aT);
        var cb = cG("(" + ca(bV).join("|") + ")", "g"), ch = cG("[" + ca(aT).join("") + "]", "g");
        var bs = function (dj, at, dm) {
            var dl, di = dj, ds = di;
            if (!di) {
                return ds
            } var dp = arguments, dg = 0, dk = typeof dm == "number" ? 2 : dp.length;
            if (dk > 3 && typeof dp[dk - 2] == "function") {
                var dr = cu(dp[--dk - 1], dp[dk--], 2)
            } else {
                if (dk > 2 && typeof dp[dk - 1] == "function") {
                    dr = dp[--dk]
                }
            } while (++dg < dk) {
                di = dp[dg];
                if (di && E[typeof di]) {
                    var dn = -1, dq = E[typeof di] && ca(di), dh = dq ? dq.length : 0;
                    while (++dn < dh) {
                        dl = dq[dn];
                        ds[dl] = dr ? dr(ds[dl], di[dl]) : di[dl]
                    }
                }
            } return ds
        };
        function cC(dh, dg, di, at) {
            if (typeof dg != "boolean" && dg != null) {
                at = di;
                di = dg;
                dg = false
            } return bj(dh, dg, typeof di == "function" && cu(di, at, 1))
        } function da(dg, dh, at) {
            return bj(dg, true, typeof dh == "function" && cu(dh, at, 1))
        } function aQ(dg, dh) {
            var at = b0(dg);
            return dh ? bs(at, dh) : at
        } var bt = function (dj, at, dm) {
            var dl, di = dj, dr = di;
            if (!di) {
                return dr
            } var dp = arguments, dg = 0, dk = typeof dm == "number" ? 2 : dp.length;
            while (++dg < dk) {
                di = dp[dg];
                if (di && E[typeof di]) {
                    var dn = -1, dq = E[typeof di] && ca(di), dh = dq ? dq.length : 0;
                    while (++dn < dh) {
                        dl = dq[dn];
                        if (typeof dr[dl] == "undefined") {
                            dr[dl] = di[dl]
                        }
                    }
                }
            } return dr
        };
        function cs(dh, di, dg) {
            var at;
            di = aU.createCallback(di, dg, 3);
            bO(dh, function (dl, dk, dj) {
                if (di(dl, dk, dj)) {
                    at = dk;
                    return false
                }
            });
            return at
        } function bN(dh, di, dg) {
            var at;
            di = aU.createCallback(di, dg, 3);
            c1(dh, function (dl, dk, dj) {
                if (di(dl, dk, dj)) {
                    at = dk;
                    return false
                }
            });
            return at
        } var aj = function (dj, dk, dg) {
            var dh, di = dj, at = di;
            if (!di) {
                return at
            } if (!E[typeof di]) {
                return at
            } dk = dk && typeof dg == "undefined" ? dk : cu(dk, dg, 3);
            for (dh in di) {
                if (dk(di[dh], dh, dj) === false) {
                    return at
                }
            } return at
        };
        function ct(dg, dj, at) {
            var di = [];
            aj(dg, function (dl, dk) {
                di.push(dk, dl)
            });
            var dh = di.length;
            dj = cu(dj, at, 3);
            while (dh--) {
                if (dj(di[dh--], di[dh], dg) === false) {
                    break
                }
            } return dg
        } var bO = function (dh, dm, dk) {
            var di, dg = dh, dn = dg;
            if (!dg) {
                return dn
            } if (!E[typeof dg]) {
                return dn
            } dm = dm && typeof dk == "undefined" ? dm : cu(dm, dk, 3);
            var dj = -1, dl = E[typeof dg] && ca(dg), at = dl ? dl.length : 0;
            while (++dj < at) {
                di = dl[dj];
                if (dm(dg[di], di, dh) === false) {
                    return dn
                }
            } return dn
        };
        function c1(dg, dk, at) {
            var di = ca(dg), dj = di.length;
            dk = cu(dk, at, 3);
            while (dj--) {
                var dh = di[dj];
                if (dk(dg[dh], dh, dg) === false) {
                    break
                }
            } return dg
        } function cI(dg) {
            var at = [];
            aj(dg, function (di, dh) {
                if (ay(di)) {
                    at.push(dh)
                }
            });
            return at.sort()
        } function cY(at, dg) {
            return at ? a0.call(at, dg) : false
        } function b7(dh) {
            var dg = -1, dj = ca(dh), dk = dj.length, at = {};
            while (++dg < dk) {
                var di = dj[dg];
                at[dh[di]] = di
            } return at
        } function bH(at) {
            return at === true || at === false || at && typeof at == "object" && aA.call(at) == B || false
        } function a8(at) {
            return at && typeof at == "object" && aA.call(at) == J || false
        } function b2(at) {
            return at && at.nodeType === 1 || false
        } function cq(di) {
            var at = true;
            if (!di) {
                return at
            } var dg = aA.call(di), dh = di.length;
            if ((dg == u || dg == H || dg == T) || (dg == c && typeof dh == "number" && ay(di.splice))) {
                return !dh
            } bO(di, function () {
                return (at = false)
            });
            return at
        } function b3(dh, at, di, dg) {
            return bc(dh, at, typeof di == "function" && cu(di, dg, 2))
        } function aK(at) {
            return aJ(at) && !bE(parseFloat(at))
        } function ay(at) {
            return typeof at == "function"
        } function de(at) {
            return !!(at && E[typeof at])
        } function bQ(at) {
            return br(at) && at != +at
        } function c4(at) {
            return at === null
        } function br(at) {
            return typeof at == "number" || at && typeof at == "object" && aA.call(at) == G || false
        } var aO = !au ? aL : function (dh) {
            if (!(dh && aA.call(dh) == c)) {
                return false
            } var at = dh.valueOf, dg = b5(at) && (dg = au(at)) && au(dg);
            return dg ? (dh == dg || au(dh) == dg) : aL(dh)
        };
        function cS(at) {
            return at && typeof at == "object" && aA.call(at) == K || false
        } function cz(at) {
            return typeof at == "string" || at && typeof at == "object" && aA.call(at) == H || false
        } function bX(at) {
            return typeof at == "undefined"
        } function bh(dh, di, dg) {
            var at = {};
            di = aU.createCallback(di, dg, 3);
            bO(dh, function (dl, dk, dj) {
                at[dk] = di(dl, dk, dj)
            });
            return at
        } function bJ(dj) {
            var di = arguments, dk = 2;
            if (!de(dj)) {
                return dj
            } if (typeof di[2] != "number") {
                dk = di.length
            } if (dk > 3 && typeof di[dk - 2] == "function") {
                var dm = cu(di[--dk - 1], di[dk--], 2)
            } else {
                if (dk > 2 && typeof di[dk - 1] == "function") {
                    dm = di[--dk]
                }
            } var dh = t(arguments, 1, dk), dg = -1, at = d(), dl = d();
            while (++dg < dk) {
                ah(dj, dh[dg], dm, at, dl)
            } R(at);
            R(dl);
            return dj
        } function cv(di, dm, dg) {
            var at = {};
            if (typeof dm != "function") {
                var dk = [];
                aj(di, function (dp, dn) {
                    dk.push(dn)
                });
                dk = dd(dk, bU(arguments, true, false, 1));
                var dh = -1, dl = dk.length;
                while (++dh < dl) {
                    var dj = dk[dh];
                    at[dj] = di[dj]
                }
            } else {
                dm = aU.createCallback(dm, dg, 3);
                aj(di, function (dq, dp, dn) {
                    if (!dm(dq, dp, dn)) {
                        at[dp] = dq
                    }
                })
            } return at
        } function bz(dh) {
            var dg = -1, dj = ca(dh), dk = dj.length, at = aG(dk);
            while (++dg < dk) {
                var di = dj[dg];
                at[dg] = [di, dh[di]]
            } return at
        } function bL(di, dm, dg) {
            var at = {};
            if (typeof dm != "function") {
                var dh = -1, dk = bU(arguments, true, false, 1), dl = de(di) ? dk.length : 0;
                while (++dh < dl) {
                    var dj = dk[dh];
                    if (dj in di) {
                        at[dj] = di[dj]
                    }
                }
            } else {
                dm = aU.createCallback(dm, dg, 3);
                aj(di, function (dq, dp, dn) {
                    if (dm(dq, dp, dn)) {
                        at[dp] = dq
                    }
                })
            } return at
        } function cX(dh, dl, dg, at) {
            var dk = bD(dh);
            if (dg == null) {
                if (dk) {
                    dg = []
                } else {
                    var dj = dh && dh.constructor, di = dj && dj.prototype;
                    dg = b0(di)
                }
            } if (dl) {
                dl = aU.createCallback(dl, at, 4);
                (dk ? bB : bO)(dh, function (dp, dn, dm) {
                    return dl(dg, dp, dn, dm)
                })
            } return dg
        } function bw(dh) {
            var dg = -1, di = ca(dh), dj = di.length, at = aG(dj);
            while (++dg < dj) {
                at[dg] = dh[di[dg]]
            } return at
        } function cN(dk) {
            var dh = arguments, dg = -1, di = bU(dh, true, false, 1), dj = (dh[2] && dh[2][dh[1]] === dk) ? 1 : di.length, at = aG(dj);
            while (++dg < dj) {
                at[dg] = dk[di[dg]]
            } return at
        } function a4(dl, dk, di) {
            var dg = -1, dh = b6(), dj = dl ? dl.length : 0, at = false;
            di = (di < 0 ? ck(0, dj + di) : di) || 0;
            if (bD(dl)) {
                at = dh(dl, dk, di) > -1
            } else {
                if (typeof dj == "number") {
                    at = (cz(dl) ? dl.indexOf(dk, di) : dh(dl, dk, di)) > -1
                } else {
                    bO(dl, function (dm) {
                        if (++dg >= di) {
                            return !(at = dm === dk)
                        }
                    })
                }
            } return at
        } var bI = bT(function (at, dh, dg) {
            (a0.call(at, dg) ? at[dg]++ : at[dg] = 1)
        });
        function az(dj, dk, dg) {
            var at = true;
            dk = aU.createCallback(dk, dg, 3);
            var dh = -1, di = dj ? dj.length : 0;
            if (typeof di == "number") {
                while (++dh < di) {
                    if (!(at = !!dk(dj[dh], dh, dj))) {
                        break
                    }
                }
            } else {
                bO(dj, function (dm, dl, dn) {
                    return (at = !!dk(dm, dl, dn))
                })
            } return at
        } function bP(dk, dl, dg) {
            var at = [];
            dl = aU.createCallback(dl, dg, 3);
            var dh = -1, di = dk ? dk.length : 0;
            if (typeof di == "number") {
                while (++dh < di) {
                    var dj = dk[dh];
                    if (dl(dj, dh, dk)) {
                        at.push(dj)
                    }
                }
            } else {
                bO(dk, function (dn, dm, dp) {
                    if (dl(dn, dm, dp)) {
                        at.push(dn)
                    }
                })
            } return at
        } function bG(dk, dl, dg) {
            dl = aU.createCallback(dl, dg, 3);
            var dh = -1, di = dk ? dk.length : 0;
            if (typeof di == "number") {
                while (++dh < di) {
                    var dj = dk[dh];
                    if (dl(dj, dh, dk)) {
                        return dj
                    }
                }
            } else {
                var at;
                bO(dk, function (dn, dm, dp) {
                    if (dl(dn, dm, dp)) {
                        at = dn;
                        return false
                    }
                });
                return at
            }
        } function c8(dh, di, dg) {
            var at;
            di = aU.createCallback(di, dg, 3);
            ar(dh, function (dk, dj, dl) {
                if (di(dk, dj, dl)) {
                    at = dk;
                    return false
                }
            });
            return at
        } function bB(di, dj, at) {
            var dg = -1, dh = di ? di.length : 0;
            dj = dj && typeof at == "undefined" ? dj : cu(dj, at, 3);
            if (typeof dh == "number") {
                while (++dg < dh) {
                    if (dj(di[dg], dg, di) === false) {
                        break
                    }
                }
            } else {
                bO(di, dj)
            } return di
        } function ar(di, dj, at) {
            var dh = di ? di.length : 0;
            dj = dj && typeof at == "undefined" ? dj : cu(dj, at, 3);
            if (typeof dh == "number") {
                while (dh--) {
                    if (dj(di[dh], dh, di) === false) {
                        break
                    }
                }
            } else {
                var dg = ca(di);
                dh = dg.length;
                bO(di, function (dl, dk, dm) {
                    dk = dg ? dg[--dh] : --dh;
                    return dj(dm[dk], dk, dm)
                })
            } return di
        } var bq = bT(function (at, dh, dg) {
            (a0.call(at, dg) ? at[dg] : at[dg] = []).push(dh)
        });
        var c6 = bT(function (at, dh, dg) {
            at[dg] = dh
        });
        function aI(dl, dg) {
            var di = t(arguments, 2), dh = -1, dk = typeof dg == "function", dj = dl ? dl.length : 0, at = aG(typeof dj == "number" ? dj : 0);
            bB(dl, function (dm) {
                at[++dh] = (dk ? dg : dm[dg]).apply(dm, di)
            });
            return at
        } function bl(dj, dk, dg) {
            var dh = -1, di = dj ? dj.length : 0;
            dk = aU.createCallback(dk, dg, 3);
            if (typeof di == "number") {
                var at = aG(di);
                while (++dh < di) {
                    at[dh] = dk(dj[dh], dh, dj)
                }
            } else {
                at = [];
                bO(dj, function (dm, dl, dn) {
                    at[++dh] = dk(dm, dl, dn)
                })
            } return at
        } function bi(dl, dm, dg) {
            var dj = -Infinity, at = dj;
            if (typeof dm != "function" && dg && dg[dm] === dl) {
                dm = null
            } if (dm == null && bD(dl)) {
                var dh = -1, di = dl.length;
                while (++dh < di) {
                    var dk = dl[dh];
                    if (dk > at) {
                        at = dk
                    }
                }
            } else {
                dm = (dm == null && cz(dl)) ? p : aU.createCallback(dm, dg, 3);
                bB(dl, function (dp, dn, dr) {
                    var dq = dm(dp, dn, dr);
                    if (dq > dj) {
                        dj = dq;
                        at = dp
                    }
                })
            } return at
        } function cm(dl, dm, dg) {
            var dj = Infinity, at = dj;
            if (typeof dm != "function" && dg && dg[dm] === dl) {
                dm = null
            } if (dm == null && bD(dl)) {
                var dh = -1, di = dl.length;
                while (++dh < di) {
                    var dk = dl[dh];
                    if (dk < at) {
                        at = dk
                    }
                }
            } else {
                dm = (dm == null && cz(dl)) ? p : aU.createCallback(dm, dg, 3);
                bB(dl, function (dp, dn, dr) {
                    var dq = dm(dp, dn, dr);
                    if (dq < dj) {
                        dj = dq;
                        at = dp
                    }
                })
            } return at
        } var c9 = bl;
        function co(dk, dl, dg, at) {
            if (!dk) {
                return dg
            } var di = arguments.length < 3;
            dl = aU.createCallback(dl, at, 4);
            var dh = -1, dj = dk.length;
            if (typeof dj == "number") {
                if (di) {
                    dg = dk[++dh]
                } while (++dh < dj) {
                    dg = dl(dg, dk[dh], dh, dk)
                }
            } else {
                bO(dk, function (dn, dm, dp) {
                    dg = di ? (di = false, dn) : dl(dg, dn, dm, dp)
                })
            } return dg
        } function cU(di, dj, dg, at) {
            var dh = arguments.length < 3;
            dj = aU.createCallback(dj, at, 4);
            ar(di, function (dl, dk, dm) {
                dg = dh ? (dh = false, dl) : dj(dg, dl, dk, dm)
            });
            return dg
        } function aB(dg, dh, at) {
            dh = aU.createCallback(dh, at, 3);
            return bP(dg, function (dj, di, dk) {
                return !dh(dj, di, dk)
            })
        } function cT(dh, di, dg) {
            if (dh && typeof dh.length != "number") {
                dh = bw(dh)
            } if (di == null || dg) {
                return dh ? dh[ap(0, dh.length - 1)] : m
            } var at = bx(dh);
            at.length = an(ck(0, di), at.length);
            return at
        } function bx(di) {
            var dg = -1, dh = di ? di.length : 0, at = aG(typeof dh == "number" ? dh : 0);
            bB(di, function (dk) {
                var dj = ap(0, ++dg);
                at[dg] = at[dj];
                at[dj] = dk
            });
            return at
        } function a7(dg) {
            var at = dg ? dg.length : 0;
            return typeof at == "number" ? at : ca(dg).length
        } function a6(dj, dk, dg) {
            var at;
            dk = aU.createCallback(dk, dg, 3);
            var dh = -1, di = dj ? dj.length : 0;
            if (typeof di == "number") {
                while (++dh < di) {
                    if ((at = dk(dj[dh], dh, dj))) {
                        break
                    }
                }
            } else {
                bO(dj, function (dm, dl, dn) {
                    return !(at = dk(dm, dl, dn))
                })
            } return !!at
        } function a9(dl, dm, dg) {
            var di = -1, dk = bD(dm), dj = dl ? dl.length : 0, at = aG(typeof dj == "number" ? dj : 0);
            if (!dk) {
                dm = aU.createCallback(dm, dg, 3)
            } bB(dl, function (dq, dp, dr) {
                var dn = at[++di] = r();
                if (dk) {
                    dn.criteria = bl(dm, function (ds) {
                        return dq[ds]
                    })
                } else {
                    (dn.criteria = d())[0] = dm(dq, dp, dr)
                } dn.index = di;
                dn.value = dq
            });
            dj = at.length;
            at.sort(W);
            while (dj--) {
                var dh = at[dj];
                at[dj] = dh.value;
                if (!dk) {
                    R(dh.criteria)
                } o(dh)
            } return at
        } function aD(at) {
            if (at && typeof at.length == "number") {
                return t(at)
            } return bw(at)
        } var ak = bP;
        function aP(dj) {
            var dg = -1, dh = dj ? dj.length : 0, at = [];
            while (++dg < dh) {
                var di = dj[dg];
                if (di) {
                    at.push(di)
                }
            } return at
        } function ad(at) {
            return dd(at, bU(arguments, true, true, 1))
        } function c3(dj, di, at) {
            var dg = -1, dh = dj ? dj.length : 0;
            di = aU.createCallback(di, at, 3);
            while (++dg < dh) {
                if (di(dj[dg], dg, dj)) {
                    return dg
                }
            } return -1
        } function aM(di, dh, at) {
            var dg = di ? di.length : 0;
            dh = aU.createCallback(dh, at, 3);
            while (dg--) {
                if (dh(di[dg], dg, di)) {
                    return dg
                }
            } return -1
        } function bg(dk, dj, at) {
            var di = 0, dh = dk ? dk.length : 0;
            if (typeof dj != "number" && dj != null) {
                var dg = -1;
                dj = aU.createCallback(dj, at, 3);
                while (++dg < dh && dj(dk[dg], dg, dk)) {
                    di++
                }
            } else {
                di = dj;
                if (di == null || at) {
                    return dk ? dk[0] : m
                }
            } return t(dk, 0, an(ck(0, di), dh))
        } function cB(di, at, dh, dg) {
            if (typeof at != "boolean" && at != null) {
                dg = dh;
                dh = (typeof at != "function" && dg && dg[at] === di) ? null : at;
                at = false
            } if (dh != null) {
                di = bl(di, dh, dg)
            } return bU(di, at)
        } function c5(dj, di, dg) {
            if (typeof dg == "number") {
                var dh = dj ? dj.length : 0;
                dg = (dg < 0 ? ck(0, dh + dg) : dg || 0)
            } else {
                if (dg) {
                    var at = ba(dj, di);
                    return dj[at] === di ? at : -1
                }
            } return h(dj, di, dg)
        } function c7(dk, dj, at) {
            var di = 0, dh = dk ? dk.length : 0;
            if (typeof dj != "number" && dj != null) {
                var dg = dh;
                dj = aU.createCallback(dj, at, 3);
                while (dg-- && dj(dk[dg], dg, dk)) {
                    di++
                }
            } else {
                di = (dj == null || at) ? 1 : dj || di
            } return t(dk, 0, an(ck(0, dh - di), dh))
        } function cy() {
            var dp = [], dh = -1, dk = arguments.length, dn = d(), dq = b6(), dj = dq === h, dg = d();
            while (++dh < dk) {
                var dr = arguments[dh];
                if (bD(dr) || a5(dr)) {
                    dp.push(dr);
                    dn.push(dj && dr.length >= b && Z(dh ? dp[dh] : dg))
                }
            } var dm = dp[0], dl = -1, di = dm ? dm.length : 0, ds = [];
            outer: while (++dl < di) {
                var at = dn[0];
                dr = dm[dl];
                if ((at ? O(at, dr) : dq(dg, dr)) < 0) {
                    dh = dk;
                    (at || dg).push(dr);
                    while (--dh) {
                        at = dn[dh];
                        if ((at ? O(at, dr) : dq(dp[dh], dr)) < 0) {
                            continue outer
                        }
                    } ds.push(dr)
                }
            } while (dk--) {
                at = dn[dk];
                if (at) {
                    o(at)
                }
            } R(dn);
            R(dg);
            return ds
        } function bu(dk, dj, at) {
            var di = 0, dh = dk ? dk.length : 0;
            if (typeof dj != "number" && dj != null) {
                var dg = dh;
                dj = aU.createCallback(dj, at, 3);
                while (dg-- && dj(dk[dg], dg, dk)) {
                    di++
                }
            } else {
                di = dj;
                if (di == null || at) {
                    return dk ? dk[dh - 1] : m
                }
            } return t(dk, ck(0, dh - di))
        } function df(di, dh, dg) {
            var at = di ? di.length : 0;
            if (typeof dg == "number") {
                at = (dg < 0 ? ck(0, at + dg) : an(dg, at - 1)) + 1
            } while (at--) {
                if (di[at] === dh) {
                    return at
                }
            } return -1
        } function cc(dl) {
            var dh = arguments, at = 0, dj = dh.length, di = dl ? dl.length : 0;
            while (++at < dj) {
                var dg = -1, dk = dh[at];
                while (++dg < di) {
                    if (dl[dg] === dk) {
                        cn.call(dl, dg--, 1);
                        di--
                    }
                }
            } return dl
        } function aY(dk, dg, dj) {
            dk = +dk || 0;
            dj = typeof dj == "number" ? dj : (+dj || 1);
            if (dg == null) {
                dg = dk;
                dk = 0
            } var dh = -1, di = ck(0, aW((dg - dk) / (dj || 1))), at = aG(di);
            while (++dh < di) {
                at[dh] = dk;
                dk += dj
            } return at
        } function aN(dl, dk, dg) {
            var dh = -1, di = dl ? dl.length : 0, at = [];
            dk = aU.createCallback(dk, dg, 3);
            while (++dh < di) {
                var dj = dl[dh];
                if (dk(dj, dh, dl)) {
                    at.push(dj);
                    cn.call(dl, dh--, 1);
                    di--
                }
            } return at
        } function b9(dk, dj, at) {
            if (typeof dj != "number" && dj != null) {
                var di = 0, dg = -1, dh = dk ? dk.length : 0;
                dj = aU.createCallback(dj, at, 3);
                while (++dg < dh && dj(dk[dg], dg, dk)) {
                    di++
                }
            } else {
                di = (dj == null || at) ? 1 : ck(0, dj)
            } return t(dk, di)
        } function ba(dl, dj, dk, dg) {
            var at = 0, di = dl ? dl.length : at;
            dk = dk ? aU.createCallback(dk, dg, 1) : bk;
            dj = dk(dj);
            while (at < di) {
                var dh = (at + di) >>> 1;
                (dk(dl[dh]) < dj) ? at = dh + 1 : di = dh
            } return at
        } function av() {
            return af(bU(arguments, true, true))
        } function bR(di, dh, dg, at) {
            if (typeof dh != "boolean" && dh != null) {
                at = dg;
                dg = (typeof dh != "function" && at && at[dh] === di) ? null : dh;
                dh = false
            } if (dg != null) {
                dg = aU.createCallback(dg, at, 3)
            } return af(di, dh, dg)
        } function c0(at) {
            return dd(at, t(arguments, 1))
        } function bZ() {
            var dg = -1, dh = arguments.length;
            while (++dg < dh) {
                var di = arguments[dg];
                if (bD(di) || a5(di)) {
                    var at = at ? af(dd(at, di).concat(dd(di, at))) : di
                }
            } return at || []
        } function ao() {
            var di = arguments.length > 1 ? arguments : arguments[0], dg = -1, dh = di ? bi(c9(di, "length")) : 0, at = aG(dh < 0 ? 0 : dh);
            while (++dg < dh) {
                at[dg] = c9(di, dg)
            } return at
        } function cD(dk, dg) {
            var dh = -1, dj = dk ? dk.length : 0, at = {};
            if (!dg && dj && !bD(dk[0])) {
                dg = []
            } while (++dh < dj) {
                var di = dk[dh];
                if (dg) {
                    at[di] = dg[dh]
                } else {
                    if (di) {
                        at[di[0]] = di[1]
                    }
                }
            } return at
        } function aS(dg, at) {
            if (!ay(at)) {
                throw new aH
            } return function () {
                if (--dg < 1) {
                    return at.apply(this, arguments)
                }
            }
        } function bY(dg, at) {
            return arguments.length > 2 ? cM(dg, 17, t(arguments, 2), null, at) : cM(dg, 1, null, null, at)
        } function bv(dh) {
            var at = arguments.length > 1 ? bU(arguments, true, false, 1) : cI(dh), dg = -1, dj = at.length;
            while (++dg < dj) {
                var di = at[dg];
                dh[di] = cM(dh[di], 1, null, null, dh)
            } return dh
        } function cR(at, dg) {
            return arguments.length > 2 ? cM(dg, 19, t(arguments, 2), null, at) : cM(dg, 3, null, null, at)
        } function cF() {
            var at = arguments, dg = at.length;
            while (dg--) {
                if (!ay(at[dg])) {
                    throw new aH
                }
            } return function () {
                var dh = arguments, di = at.length;
                while (di--) {
                    dh = [at[di].apply(this, dh)]
                } return dh[0]
            }
        } function cP(at, dg) {
            dg = typeof dg == "number" ? dg : (+dg || at.length);
            return cM(at, 4, null, null, null, dg)
        } function cE(di, dn, du) {
            var dq, dl, dv, at, ds, dt, dr, dm = 0, dk = false, dp = true;
            if (!ay(di)) {
                throw new aH
            } dn = ck(0, dn) || 0;
            if (du === true) {
                var dh = true;
                dp = false
            } else {
                if (de(du)) {
                    dh = du.leading;
                    dk = "maxWait" in du && (ck(dn, du.maxWait) || 0);
                    dp = "trailing" in du ? du.trailing : dp
                }
            } var dj = function () {
                var dx = dn - (cg() - at);
                if (dx <= 0) {
                    if (dl) {
                        bS(dl)
                    } var dw = dr;
                    dl = dt = dr = m;
                    if (dw) {
                        dm = cg();
                        dv = di.apply(ds, dq);
                        if (!dt && !dl) {
                            dq = ds = null
                        }
                    }
                } else {
                    dt = aX(dj, dx)
                }
            };
            var dg = function () {
                if (dt) {
                    bS(dt)
                } dl = dt = dr = m;
                if (dp || (dk !== dn)) {
                    dm = cg();
                    dv = di.apply(ds, dq);
                    if (!dt && !dl) {
                        dq = ds = null
                    }
                }
            };
            return function () {
                dq = arguments;
                at = cg();
                ds = this;
                dr = dp && (dt || !dh);
                if (dk === false) {
                    var dw = dh && !dt
                } else {
                    if (!dl && !dh) {
                        dm = at
                    } var dy = dk - (at - dm), dx = dy <= 0;
                    if (dx) {
                        if (dl) {
                            dl = bS(dl)
                        } dm = at;
                        dv = di.apply(ds, dq)
                    } else {
                        if (!dl) {
                            dl = aX(dg, dy)
                        }
                    }
                } if (dx && dt) {
                    dt = bS(dt)
                } else {
                    if (!dt && dn !== dk) {
                        dt = aX(dj, dn)
                    }
                } if (dw) {
                    dx = true;
                    dv = di.apply(ds, dq)
                } if (dx && !dt && !dl) {
                    dq = ds = null
                } return dv
            }
        } function a1(dg) {
            if (!ay(dg)) {
                throw new aH
            } var at = t(arguments, 1);
            return aX(function () {
                dg.apply(m, at)
            }, 1)
        } function bM(dg, dh) {
            if (!ay(dg)) {
                throw new aH
            } var at = t(arguments, 2);
            return aX(function () {
                dg.apply(m, at)
            }, dh)
        } function a3(dg, dh) {
            if (!ay(dg)) {
                throw new aH
            } var at = function () {
                var di = at.cache, dj = dh ? dh.apply(this, arguments) : a + arguments[0];
                return a0.call(di, dj) ? di[dj] : (di[dj] = dg.apply(this, arguments))
            };
            at.cache = {};
            return at
        } function cx(dh) {
            var dg, at;
            if (!ay(dh)) {
                throw new aH
            } return function () {
                if (dg) {
                    return at
                } dg = true;
                at = dh.apply(this, arguments);
                dh = null;
                return at
            }
        } function cV(at) {
            return cM(at, 16, t(arguments, 1))
        } function cr(at) {
            return cM(at, 32, null, t(arguments, 1))
        } function cl(dg, dh, at) {
            var dj = true, di = true;
            if (!ay(dg)) {
                throw new aH
            } if (at === false) {
                dj = false
            } else {
                if (de(at)) {
                    dj = "leading" in at ? at.leading : dj;
                    di = "trailing" in at ? at.trailing : di
                }
            } N.leading = dj;
            N.maxWait = dh;
            N.trailing = di;
            return cE(dg, dh, N)
        } function bW(at, dg) {
            return cM(dg, 16, [at])
        } function cw(at) {
            return function () {
                return at
            }
        } function aE(dk, dg, dl) {
            var dj = typeof dk;
            if (dk == null || dj == "function") {
                return cu(dk, dg, dl)
            } if (dj != "object") {
                return a2(dk)
            } var di = ca(dk), dh = di[0], at = dk[dh];
            if (di.length == 1 && at === at && !de(at)) {
                return function (dn) {
                    var dm = dn[dh];
                    return at === dm && (at !== 0 || (1 / at == 1 / dm))
                }
            } return function (dn) {
                var dp = di.length, dm = false;
                while (dp--) {
                    if (!(dm = bc(dn[di[dp]], dk[di[dp]], null, true))) {
                        break
                    }
                } return dm
            }
        } function bb(at) {
            return at == null ? "" : cp(at).replace(ch, bo)
        } function bk(at) {
            return at
        } function aC(dg, dl, at) {
            var dh = true, dj = dl && cI(dl);
            if (!dl || (!at && !dj.length)) {
                if (at == null) {
                    at = dl
                } di = cQ;
                dl = dg;
                dg = aU;
                dj = cI(dl)
            } if (at === false) {
                dh = false
            } else {
                if (de(at) && "chain" in at) {
                    dh = at.chain
                }
            } var di = dg, dk = ay(di);
            bB(dj, function (dm) {
                var dn = dg[dm] = dl[dm];
                if (dk) {
                    di.prototype[dm] = function () {
                        var dq = this.__chain__, ds = this.__wrapped__, dr = [ds];
                        ax.apply(dr, arguments);
                        var dp = dn.apply(dg, dr);
                        if (dh || dq) {
                            if (ds === dp && de(dp)) {
                                return this
                            } dp = new di(dp);
                            dp.__chain__ = dq
                        } return dp
                    }
                }
            })
        } function cZ() {
            ai._ = cW;
            return this
        } function ag() { } var cg = b5(cg = cf.now) && cg || function () {
            return new cf().getTime()
        };
        var dc = db(F + "08") == 8 ? db : function (dg, at) {
            return db(cz(dg) ? dg.replace(X, "") : dg, at || 0)
        };
        function a2(at) {
            return function (dg) {
                return dg[at]
            }
        } function cd(dh, at, dk) {
            var dj = dh == null, dg = at == null;
            if (dk == null) {
                if (typeof dh == "boolean" && dg) {
                    dk = dh;
                    dh = 1
                } else {
                    if (!dg && typeof at == "boolean") {
                        dk = at;
                        dg = true
                    }
                }
            } if (dj && dg) {
                at = 1
            } dh = +dh || 0;
            if (dg) {
                at = dh;
                dh = 0
            } else {
                at = +at || 0
            } if (dk || dh % 1 || at % 1) {
                var di = bK();
                return an(dh + (di * (at - dh + parseFloat("1e-" + ((di + "").length - 1)))), at)
            } return ap(dh, at)
        } function aR(at, dg) {
            if (at) {
                var dh = at[dg];
                return ay(dh) ? at[dg]() : dh
            }
        } function bF(dt, dm, dw) {
            var dj = aU.templateSettings;
            dt = cp(dt || "");
            dw = bt({}, dw, dj);
            var dh = bt({}, dw.imports, dj.imports), dn = ca(dh), di = bw(dh);
            var ds, dp = 0, dr = dw.interpolate || Q, dg = "__p += '";
            var dv = cG((dw.escape || Q).source + "|" + dr.source + "|" + (dr === n ? A : Q).source + "|" + (dw.evaluate || Q).source + "|$", "g");
            dt.replace(dv, function (dx, dB, dz, dy, dA, dC) {
                dz || (dz = dy);
                dg += dt.slice(dp, dC).replace(U, f);
                if (dB) {
                    dg += "' +\n__e(" + dB + ") +\n'"
                } if (dA) {
                    ds = true;
                    dg += "';\n" + dA + ";\n__p += '"
                } if (dz) {
                    dg += "' +\n((__t = (" + dz + ")) == null ? '' : __t) +\n'"
                } dp = dC + dx.length;
                return dx
            });
            dg += "';\n";
            var dk = dw.variable, dl = dk;
            if (!dl) {
                dk = "obj";
                dg = "with (" + dk + ") {\n" + dg + "\n}\n"
            } dg = (ds ? dg.replace(x, "") : dg).replace(S, "$1").replace(e, "$1;");
            dg = "function(" + dk + ") {\n" + (dl ? "" : dk + " || (" + dk + " = {});\n") + "var __t, __p = '', __e = _.escape" + (ds ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + dg + "return __p\n}";
            var at = "\n/*\n//# sourceURL=" + (dw.sourceURL || "/lodash/template/source[" + (aa++) + "]") + "\n*/";
            try {
                var du = aZ(dn, "return " + dg + at).apply(m, di)
            } catch (dq) {
                dq.source = dg;
                throw dq
            } if (dm) {
                return du(dm)
            } du.source = dg;
            return du
        } function al(dj, di, dg) {
            dj = (dj = +dj) > -1 ? dj : 0;
            var dh = -1, at = aG(dj);
            di = cu(di, dg, 1);
            while (++dh < dj) {
                at[dh] = di(dh)
            } return at
        } function am(at) {
            return at == null ? "" : cp(at).replace(cb, bp)
        } function ci(at) {
            var dg = ++I;
            return cp(at == null ? "" : at) + dg
        } function by(at) {
            at = new cQ(at);
            at.__chain__ = true;
            return at
        } function cA(at, dg) {
            dg(at);
            return at
        } function bA() {
            this.__chain__ = true;
            return this
        } function bn() {
            return cp(this.__wrapped__)
        } function aV() {
            return this.__wrapped__
        } aU.after = aS;
        aU.assign = bs;
        aU.at = cN;
        aU.bind = bY;
        aU.bindAll = bv;
        aU.bindKey = cR;
        aU.chain = by;
        aU.compact = aP;
        aU.compose = cF;
        aU.constant = cw;
        aU.countBy = bI;
        aU.create = aQ;
        aU.createCallback = aE;
        aU.curry = cP;
        aU.debounce = cE;
        aU.defaults = bt;
        aU.defer = a1;
        aU.delay = bM;
        aU.difference = ad;
        aU.filter = bP;
        aU.flatten = cB;
        aU.forEach = bB;
        aU.forEachRight = ar;
        aU.forIn = aj;
        aU.forInRight = ct;
        aU.forOwn = bO;
        aU.forOwnRight = c1;
        aU.functions = cI;
        aU.groupBy = bq;
        aU.indexBy = c6;
        aU.initial = c7;
        aU.intersection = cy;
        aU.invert = b7;
        aU.invoke = aI;
        aU.keys = ca;
        aU.map = bl;
        aU.mapValues = bh;
        aU.max = bi;
        aU.memoize = a3;
        aU.merge = bJ;
        aU.min = cm;
        aU.omit = cv;
        aU.once = cx;
        aU.pairs = bz;
        aU.partial = cV;
        aU.partialRight = cr;
        aU.pick = bL;
        aU.pluck = c9;
        aU.property = a2;
        aU.pull = cc;
        aU.range = aY;
        aU.reject = aB;
        aU.remove = aN;
        aU.rest = b9;
        aU.shuffle = bx;
        aU.sortBy = a9;
        aU.tap = cA;
        aU.throttle = cl;
        aU.times = al;
        aU.toArray = aD;
        aU.transform = cX;
        aU.union = av;
        aU.uniq = bR;
        aU.values = bw;
        aU.where = ak;
        aU.without = c0;
        aU.wrap = bW;
        aU.xor = bZ;
        aU.zip = ao;
        aU.zipObject = cD;
        aU.collect = bl;
        aU.drop = b9;
        aU.each = bB;
        aU.eachRight = ar;
        aU.extend = bs;
        aU.methods = cI;
        aU.object = cD;
        aU.select = bP;
        aU.tail = b9;
        aU.unique = bR;
        aU.unzip = ao;
        aC(aU);
        aU.clone = cC;
        aU.cloneDeep = da;
        aU.contains = a4;
        aU.escape = bb;
        aU.every = az;
        aU.find = bG;
        aU.findIndex = c3;
        aU.findKey = cs;
        aU.findLast = c8;
        aU.findLastIndex = aM;
        aU.findLastKey = bN;
        aU.has = cY;
        aU.identity = bk;
        aU.indexOf = c5;
        aU.isArguments = a5;
        aU.isArray = bD;
        aU.isBoolean = bH;
        aU.isDate = a8;
        aU.isElement = b2;
        aU.isEmpty = cq;
        aU.isEqual = b3;
        aU.isFinite = aK;
        aU.isFunction = ay;
        aU.isNaN = bQ;
        aU.isNull = c4;
        aU.isNumber = br;
        aU.isObject = de;
        aU.isPlainObject = aO;
        aU.isRegExp = cS;
        aU.isString = cz;
        aU.isUndefined = bX;
        aU.lastIndexOf = df;
        aU.mixin = aC;
        aU.noConflict = cZ;
        aU.noop = ag;
        aU.now = cg;
        aU.parseInt = dc;
        aU.random = cd;
        aU.reduce = co;
        aU.reduceRight = cU;
        aU.result = aR;
        aU.runInContext = Y;
        aU.size = a7;
        aU.some = a6;
        aU.sortedIndex = ba;
        aU.template = bF;
        aU.unescape = am;
        aU.uniqueId = ci;
        aU.all = az;
        aU.any = a6;
        aU.detect = bG;
        aU.findWhere = bG;
        aU.foldl = co;
        aU.foldr = cU;
        aU.include = a4;
        aU.inject = co;
        aC(function () {
            var at = {};
            bO(aU, function (dh, dg) {
                if (!aU.prototype[dg]) {
                    at[dg] = dh
                }
            });
            return at
        }(), false);
        aU.first = bg;
        aU.last = bu;
        aU.sample = cT;
        aU.take = bg;
        aU.head = bg;
        bO(aU, function (dh, dg) {
            var at = dg !== "sample";
            if (!aU.prototype[dg]) {
                aU.prototype[dg] = function (dl, dk) {
                    var dj = this.__chain__, di = dh(this.__wrapped__, dl, dk);
                    return !dj && (dl == null || (dk && !(at && typeof dl == "function"))) ? di : new cQ(di, dj)
                }
            }
        });
        aU.VERSION = "2.4.1";
        aU.prototype.chain = bA;
        aU.prototype.toString = bn;
        aU.prototype.value = aV;
        aU.prototype.valueOf = aV;
        bB(["join", "pop", "shift"], function (at) {
            var dg = b8[at];
            aU.prototype[at] = function () {
                var di = this.__chain__, dh = dg.apply(this.__wrapped__, arguments);
                return di ? new cQ(dh, di) : dh
            }
        });
        bB(["push", "reverse", "sort", "unshift"], function (at) {
            var dg = b8[at];
            aU.prototype[at] = function () {
                dg.apply(this.__wrapped__, arguments);
                return this
            }
        });
        bB(["concat", "slice", "splice"], function (at) {
            var dg = b8[at];
            aU.prototype[at] = function () {
                return new cQ(dg.apply(this.__wrapped__, arguments), this.__chain__)
            }
        });
        return aU
    } var ab = Y();
    if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
        C._ = ab;
        define(function () {
            return ab
        })
    } else {
        if (V && z) {
            if (P) {
                (z.exports = ab)._ = ab
            } else {
                V._ = ab
            }
        } else {
            C._ = ab
        }
    }
}.call(this));
(function () {
    var x = this;
    var l = x._;
    var E = {};
    var D = Array.prototype, f = Object.prototype, s = Function.prototype;
    var I = D.push, p = D.slice, z = D.concat, d = f.toString, k = f.hasOwnProperty;
    var M = D.forEach, r = D.map, F = D.reduce, c = D.reduceRight, b = D.filter, C = D.every, q = D.some, o = D.indexOf, m = D.lastIndexOf, v = Array.isArray, e = Object.keys, G = s.bind;
    var N = function (O) {
        if (O instanceof N) {
            return O
        } if (!(this instanceof N)) {
            return new N(O)
        } this._wrapped = O
    };
    if (typeof exports !== "undefined") {
        if (typeof module !== "undefined" && module.exports) {
            exports = module.exports = N
        } exports._ = N
    } else {
        x._ = N
    } N.VERSION = "1.5.2";
    var J = N.each = N.forEach = function (T, Q, P) {
        if (T == null) {
            return
        } if (M && T.forEach === M) {
            T.forEach(Q, P)
        } else {
            if (T.length === +T.length) {
                for (var O = 0, S = T.length;
                    O < S;
                    O++) {
                        if (Q.call(P, T[O], O, T) === E) {
                            return
                        }
                }
            } else {
                var R = N.keys(T);
                for (var O = 0, S = R.length;
                    O < S;
                    O++) {
                        if (Q.call(P, T[R[O]], R[O], T) === E) {
                            return
                        }
                }
            }
        }
    };
    N.map = N.collect = function (R, Q, P) {
        var O = [];
        if (R == null) {
            return O
        } if (r && R.map === r) {
            return R.map(Q, P)
        } J(R, function (U, S, T) {
            O.push(Q.call(P, U, S, T))
        });
        return O
    };
    var g = "Reduce of empty array with no initial value";
    N.reduce = N.foldl = N.inject = function (S, R, O, Q) {
        var P = arguments.length > 2;
        if (S == null) {
            S = []
        } if (F && S.reduce === F) {
            if (Q) {
                R = N.bind(R, Q)
            } return P ? S.reduce(R, O) : S.reduce(R)
        } J(S, function (V, T, U) {
            if (!P) {
                O = V;
                P = true
            } else {
                O = R.call(Q, O, V, T, U)
            }
        });
        if (!P) {
            throw new TypeError(g)
        } return O
    };
    N.reduceRight = N.foldr = function (U, R, O, Q) {
        var P = arguments.length > 2;
        if (U == null) {
            U = []
        } if (c && U.reduceRight === c) {
            if (Q) {
                R = N.bind(R, Q)
            } return P ? U.reduceRight(R, O) : U.reduceRight(R)
        } var T = U.length;
        if (T !== +T) {
            var S = N.keys(U);
            T = S.length
        } J(U, function (X, V, W) {
            V = S ? S[--T] : --T;
            if (!P) {
                O = U[V];
                P = true
            } else {
                O = R.call(Q, O, U[V], V, W)
            }
        });
        if (!P) {
            throw new TypeError(g)
        } return O
    };
    N.find = N.detect = function (R, Q, P) {
        var O;
        B(R, function (U, S, T) {
            if (Q.call(P, U, S, T)) {
                O = U;
                return true
            }
        });
        return O
    };
    N.filter = N.select = function (R, Q, P) {
        var O = [];
        if (R == null) {
            return O
        } if (b && R.filter === b) {
            return R.filter(Q, P)
        } J(R, function (U, S, T) {
            if (Q.call(P, U, S, T)) {
                O.push(U)
            }
        });
        return O
    };
    N.reject = function (Q, P, O) {
        return N.filter(Q, function (T, R, S) {
            return !P.call(O, T, R, S)
        }, O)
    };
    N.every = N.all = function (R, Q, P) {
        Q || (Q = N.identity);
        var O = true;
        if (R == null) {
            return O
        } if (C && R.every === C) {
            return R.every(Q, P)
        } J(R, function (U, S, T) {
            if (!(O = O && Q.call(P, U, S, T))) {
                return E
            }
        });
        return !!O
    };
    var B = N.some = N.any = function (R, Q, P) {
        Q || (Q = N.identity);
        var O = false;
        if (R == null) {
            return O
        } if (q && R.some === q) {
            return R.some(Q, P)
        } J(R, function (U, S, T) {
            if (O || (O = Q.call(P, U, S, T))) {
                return E
            }
        });
        return !!O
    };
    N.contains = N.include = function (P, O) {
        if (P == null) {
            return false
        } if (o && P.indexOf === o) {
            return P.indexOf(O) != -1
        } return B(P, function (Q) {
            return Q === O
        })
    };
    N.invoke = function (Q, R) {
        var O = p.call(arguments, 2);
        var P = N.isFunction(R);
        return N.map(Q, function (S) {
            return (P ? R : S[R]).apply(S, O)
        })
    };
    N.pluck = function (P, O) {
        return N.map(P, function (Q) {
            return Q[O]
        })
    };
    N.where = function (P, O, Q) {
        if (N.isEmpty(O)) {
            return Q ? void 0 : []
        } return N[Q ? "find" : "filter"](P, function (S) {
            for (var R in O) {
                if (O[R] !== S[R]) {
                    return false
                }
            } return true
        })
    };
    N.findWhere = function (P, O) {
        return N.where(P, O, true)
    };
    N.max = function (R, Q, P) {
        if (!Q && N.isArray(R) && R[0] === +R[0] && R.length < 65535) {
            return Math.max.apply(Math, R)
        } if (!Q && N.isEmpty(R)) {
            return -Infinity
        } var O = { computed: -Infinity, value: -Infinity };
        J(R, function (V, S, U) {
            var T = Q ? Q.call(P, V, S, U) : V;
            T > O.computed && (O = { value: V, computed: T })
        });
        return O.value
    };
    N.min = function (R, Q, P) {
        if (!Q && N.isArray(R) && R[0] === +R[0] && R.length < 65535) {
            return Math.min.apply(Math, R)
        } if (!Q && N.isEmpty(R)) {
            return Infinity
        } var O = { computed: Infinity, value: Infinity };
        J(R, function (V, S, U) {
            var T = Q ? Q.call(P, V, S, U) : V;
            T < O.computed && (O = { value: V, computed: T })
        });
        return O.value
    };
    N.shuffle = function (R) {
        var Q;
        var P = 0;
        var O = [];
        J(R, function (S) {
            Q = N.random(P++);
            O[P - 1] = O[Q];
            O[Q] = S
        });
        return O
    };
    N.sample = function (P, Q, O) {
        if (arguments.length < 2 || O) {
            return P[N.random(P.length - 1)]
        } return N.shuffle(P).slice(0, Math.max(0, Q))
    };
    var a = function (O) {
        return N.isFunction(O) ? O : function (P) {
            return P[O]
        }
    };
    N.sortBy = function (R, Q, O) {
        var P = a(Q);
        return N.pluck(N.map(R, function (U, S, T) {
            return { value: U, index: S, criteria: P.call(O, U, S, T) }
        }).sort(function (V, U) {
            var T = V.criteria;
            var S = U.criteria;
            if (T !== S) {
                if (T > S || T === void 0) {
                    return 1
                } if (T < S || S === void 0) {
                    return -1
                }
            } return V.index - U.index
        }), "value")
    };
    var u = function (O) {
        return function (T, S, Q) {
            var P = {};
            var R = S == null ? N.identity : a(S);
            J(T, function (W, U) {
                var V = R.call(Q, W, U, T);
                O(P, V, W)
            });
            return P
        }
    };
    N.groupBy = u(function (O, P, Q) {
        (N.has(O, P) ? O[P] : (O[P] = [])).push(Q)
    });
    N.indexBy = u(function (O, P, Q) {
        O[P] = Q
    });
    N.countBy = u(function (O, P) {
        N.has(O, P) ? O[P]++ : O[P] = 1
    });
    N.sortedIndex = function (V, U, R, Q) {
        R = R == null ? N.identity : a(R);
        var T = R.call(Q, U);
        var O = 0, S = V.length;
        while (O < S) {
            var P = (O + S) >>> 1;
            R.call(Q, V[P]) < T ? O = P + 1 : S = P
        } return O
    };
    N.toArray = function (O) {
        if (!O) {
            return []
        } if (N.isArray(O)) {
            return p.call(O)
        } if (O.length === +O.length) {
            return N.map(O, N.identity)
        } return N.values(O)
    };
    N.size = function (O) {
        if (O == null) {
            return 0
        } return (O.length === +O.length) ? O.length : N.keys(O).length
    };
    N.first = N.head = N.take = function (Q, P, O) {
        if (Q == null) {
            return void 0
        } return (P == null) || O ? Q[0] : p.call(Q, 0, P)
    };
    N.initial = function (Q, P, O) {
        return p.call(Q, 0, Q.length - ((P == null) || O ? 1 : P))
    };
    N.last = function (Q, P, O) {
        if (Q == null) {
            return void 0
        } if ((P == null) || O) {
            return Q[Q.length - 1]
        } else {
            return p.call(Q, Math.max(Q.length - P, 0))
        }
    };
    N.rest = N.tail = N.drop = function (Q, P, O) {
        return p.call(Q, (P == null) || O ? 1 : P)
    };
    N.compact = function (O) {
        return N.filter(O, N.identity)
    };
    var y = function (P, Q, O) {
        if (Q && N.every(P, N.isArray)) {
            return z.apply(O, P)
        } J(P, function (R) {
            if (N.isArray(R) || N.isArguments(R)) {
                Q ? I.apply(O, R) : y(R, Q, O)
            } else {
                O.push(R)
            }
        });
        return O
    };
    N.flatten = function (P, O) {
        return y(P, O, [])
    };
    N.without = function (O) {
        return N.difference(O, p.call(arguments, 1))
    };
    N.uniq = N.unique = function (U, T, S, R) {
        if (N.isFunction(T)) {
            R = S;
            S = T;
            T = false
        } var P = S ? N.map(U, S, R) : U;
        var Q = [];
        var O = [];
        J(P, function (W, V) {
            if (T ? (!V || O[O.length - 1] !== W) : !N.contains(O, W)) {
                O.push(W);
                Q.push(U[V])
            }
        });
        return Q
    };
    N.union = function () {
        return N.uniq(N.flatten(arguments, true))
    };
    N.intersection = function (P) {
        var O = p.call(arguments, 1);
        return N.filter(N.uniq(P), function (Q) {
            return N.every(O, function (R) {
                return N.indexOf(R, Q) >= 0
            })
        })
    };
    N.difference = function (P) {
        var O = z.apply(D, p.call(arguments, 1));
        return N.filter(P, function (Q) {
            return !N.contains(O, Q)
        })
    };
    N.zip = function () {
        var Q = N.max(N.pluck(arguments, "length").concat(0));
        var P = new Array(Q);
        for (var O = 0;
            O < Q;
            O++) {
                P[O] = N.pluck(arguments, "" + O)
        } return P
    };
    N.object = function (S, P) {
        if (S == null) {
            return {}
        } var O = {};
        for (var Q = 0, R = S.length;
            Q < R;
            Q++) {
                if (P) {
                    O[S[Q]] = P[Q]
                } else {
                    O[S[Q][0]] = S[Q][1]
                }
        } return O
    };
    N.indexOf = function (S, Q, R) {
        if (S == null) {
            return -1
        } var O = 0, P = S.length;
        if (R) {
            if (typeof R == "number") {
                O = (R < 0 ? Math.max(0, P + R) : R)
            } else {
                O = N.sortedIndex(S, Q);
                return S[O] === Q ? O : -1
            }
        } if (o && S.indexOf === o) {
            return S.indexOf(Q, R)
        } for (;
            O < P;
            O++) {
                if (S[O] === Q) {
                    return O
                }
        } return -1
    };
    N.lastIndexOf = function (S, Q, R) {
        if (S == null) {
            return -1
        } var O = R != null;
        if (m && S.lastIndexOf === m) {
            return O ? S.lastIndexOf(Q, R) : S.lastIndexOf(Q)
        } var P = (O ? R : S.length);
        while (P--) {
            if (S[P] === Q) {
                return P
            }
        } return -1
    };
    N.range = function (T, Q, S) {
        if (arguments.length <= 1) {
            Q = T || 0;
            T = 0
        } S = arguments[2] || 1;
        var R = Math.max(Math.ceil((Q - T) / S), 0);
        var O = 0;
        var P = new Array(R);
        while (O < R) {
            P[O++] = T;
            T += S
        } return P
    };
    var H = function () { };
    N.bind = function (R, P) {
        var O, Q;
        if (G && R.bind === G) {
            return G.apply(R, p.call(arguments, 1))
        } if (!N.isFunction(R)) {
            throw new TypeError
        } O = p.call(arguments, 2);
        return Q = function () {
            if (!(this instanceof Q)) {
                return R.apply(P, O.concat(p.call(arguments)))
            } H.prototype = R.prototype;
            var T = new H;
            H.prototype = null;
            var S = R.apply(T, O.concat(p.call(arguments)));
            if (Object(S) === S) {
                return S
            } return T
        }
    };
    N.partial = function (P) {
        var O = p.call(arguments, 1);
        return function () {
            return P.apply(this, O.concat(p.call(arguments)))
        }
    };
    N.bindAll = function (P) {
        var O = p.call(arguments, 1);
        if (O.length === 0) {
            throw new Error("bindAll must be passed function names")
        } J(O, function (Q) {
            P[Q] = N.bind(P[Q], P)
        });
        return P
    };
    N.memoize = function (Q, P) {
        var O = {};
        P || (P = N.identity);
        return function () {
            var R = P.apply(this, arguments);
            return N.has(O, R) ? O[R] : (O[R] = Q.apply(this, arguments))
        }
    };
    N.delay = function (P, Q) {
        var O = p.call(arguments, 2);
        return setTimeout(function () {
            return P.apply(null, O)
        }, Q)
    };
    N.defer = function (O) {
        return N.delay.apply(N, [O, 1].concat(p.call(arguments, 1)))
    };
    N.throttle = function (P, R, V) {
        var O, T, W;
        var U = null;
        var S = 0;
        V || (V = {});
        var Q = function () {
            S = V.leading === false ? 0 : new Date;
            U = null;
            W = P.apply(O, T)
        };
        return function () {
            var X = new Date;
            if (!S && V.leading === false) {
                S = X
            } var Y = R - (X - S);
            O = this;
            T = arguments;
            if (Y <= 0) {
                clearTimeout(U);
                U = null;
                S = X;
                W = P.apply(O, T)
            } else {
                if (!U && V.trailing !== false) {
                    U = setTimeout(Q, Y)
                }
            } return W
        }
    };
    N.debounce = function (S, V, P) {
        var U, Q, R, T, O;
        return function () {
            R = this;
            Q = arguments;
            T = new Date();
            var X = function () {
                var Y = (new Date()) - T;
                if (Y < V) {
                    U = setTimeout(X, V - Y)
                } else {
                    U = null;
                    if (!P) {
                        O = S.apply(R, Q)
                    }
                }
            };
            var W = P && !U;
            if (!U) {
                U = setTimeout(X, V)
            } if (W) {
                O = S.apply(R, Q)
            } return O
        }
    };
    N.once = function (Q) {
        var O = false, P;
        return function () {
            if (O) {
                return P
            } O = true;
            P = Q.apply(this, arguments);
            Q = null;
            return P
        }
    };
    N.wrap = function (O, P) {
        return function () {
            var Q = [O];
            I.apply(Q, arguments);
            return P.apply(this, Q)
        }
    };
    N.compose = function () {
        var O = arguments;
        return function () {
            var P = arguments;
            for (var Q = O.length - 1;
                Q >= 0;
                Q--) {
                    P = [O[Q].apply(this, P)]
            } return P[0]
        }
    };
    N.after = function (P, O) {
        return function () {
            if (--P < 1) {
                return O.apply(this, arguments)
            }
        }
    };
    N.keys = e || function (Q) {
        if (Q !== Object(Q)) {
            throw new TypeError("Invalid object")
        } var P = [];
        for (var O in Q) {
            if (N.has(Q, O)) {
                P.push(O)
            }
        } return P
    };
    N.values = function (S) {
        var R = N.keys(S);
        var Q = R.length;
        var O = new Array(Q);
        for (var P = 0;
            P < Q;
            P++) {
                O[P] = S[R[P]]
        } return O
    };
    N.pairs = function (S) {
        var Q = N.keys(S);
        var P = Q.length;
        var R = new Array(P);
        for (var O = 0;
            O < P;
            O++) {
                R[O] = [Q[O], S[Q[O]]]
        } return R
    };
    N.invert = function (S) {
        var O = {};
        var R = N.keys(S);
        for (var P = 0, Q = R.length;
            P < Q;
            P++) {
                O[S[R[P]]] = R[P]
        } return O
    };
    N.functions = N.methods = function (Q) {
        var P = [];
        for (var O in Q) {
            if (N.isFunction(Q[O])) {
                P.push(O)
            }
        } return P.sort()
    };
    N.extend = function (O) {
        J(p.call(arguments, 1), function (P) {
            if (P) {
                for (var Q in P) {
                    O[Q] = P[Q]
                }
            }
        });
        return O
    };
    N.pick = function (P) {
        var Q = {};
        var O = z.apply(D, p.call(arguments, 1));
        J(O, function (R) {
            if (R in P) {
                Q[R] = P[R]
            }
        });
        return Q
    };
    N.omit = function (Q) {
        var R = {};
        var P = z.apply(D, p.call(arguments, 1));
        for (var O in Q) {
            if (!N.contains(P, O)) {
                R[O] = Q[O]
            }
        } return R
    };
    N.defaults = function (O) {
        J(p.call(arguments, 1), function (P) {
            if (P) {
                for (var Q in P) {
                    if (O[Q] === void 0) {
                        O[Q] = P[Q]
                    }
                }
            }
        });
        return O
    };
    N.clone = function (O) {
        if (!N.isObject(O)) {
            return O
        } return N.isArray(O) ? O.slice() : N.extend({}, O)
    };
    N.tap = function (P, O) {
        O(P);
        return P
    };
    var K = function (V, U, P, Q) {
        if (V === U) {
            return V !== 0 || 1 / V == 1 / U
        } if (V == null || U == null) {
            return V === U
        } if (V instanceof N) {
            V = V._wrapped
        } if (U instanceof N) {
            U = U._wrapped
        } var S = d.call(V);
        if (S != d.call(U)) {
            return false
        } switch (S) {
            case "[object String]": return V == String(U);
            case "[object Number]": return V != +V ? U != +U : (V == 0 ? 1 / V == 1 / U : V == +U);
            case "[object Date]": case "[object Boolean]": return +V == +U;
            case "[object RegExp]": return V.source == U.source && V.global == U.global && V.multiline == U.multiline && V.ignoreCase == U.ignoreCase
        }if (typeof V != "object" || typeof U != "object") {
            return false
        } var O = P.length;
        while (O--) {
            if (P[O] == V) {
                return Q[O] == U
            }
        } var T = V.constructor, R = U.constructor;
        if (T !== R && !(N.isFunction(T) && (T instanceof T) && N.isFunction(R) && (R instanceof R))) {
            return false
        } P.push(V);
        Q.push(U);
        var Y = 0, X = true;
        if (S == "[object Array]") {
            Y = V.length;
            X = Y == U.length;
            if (X) {
                while (Y--) {
                    if (!(X = K(V[Y], U[Y], P, Q))) {
                        break
                    }
                }
            }
        } else {
            for (var W in V) {
                if (N.has(V, W)) {
                    Y++;
                    if (!(X = N.has(U, W) && K(V[W], U[W], P, Q))) {
                        break
                    }
                }
            } if (X) {
                for (W in U) {
                    if (N.has(U, W) && !(Y--)) {
                        break
                    }
                } X = !Y
            }
        } P.pop();
        Q.pop();
        return X
    };
    N.isEqual = function (P, O) {
        return K(P, O, [], [])
    };
    N.isEmpty = function (P) {
        if (P == null) {
            return true
        } if (N.isArray(P) || N.isString(P)) {
            return P.length === 0
        } for (var O in P) {
            if (N.has(P, O)) {
                return false
            }
        } return true
    };
    N.isElement = function (O) {
        return !!(O && O.nodeType === 1)
    };
    N.isArray = v || function (O) {
        return d.call(O) == "[object Array]"
    };
    N.isObject = function (O) {
        return O === Object(O)
    };
    J(["Arguments", "Function", "String", "Number", "Date", "RegExp"], function (O) {
        N["is" + O] = function (P) {
            return d.call(P) == "[object " + O + "]"
        }
    });
    if (!N.isArguments(arguments)) {
        N.isArguments = function (O) {
            return !!(O && N.has(O, "callee"))
        }
    } if (typeof (/./) !== "function") {
        N.isFunction = function (O) {
            return typeof O === "function"
        }
    } N.isFinite = function (O) {
        return isFinite(O) && !isNaN(parseFloat(O))
    };
    N.isNaN = function (O) {
        return N.isNumber(O) && O != +O
    };
    N.isBoolean = function (O) {
        return O === true || O === false || d.call(O) == "[object Boolean]"
    };
    N.isNull = function (O) {
        return O === null
    };
    N.isUndefined = function (O) {
        return O === void 0
    };
    N.has = function (P, O) {
        return k.call(P, O)
    };
    N.noConflict = function () {
        x._ = l;
        return this
    };
    N.identity = function (O) {
        return O
    };
    N.times = function (S, R, Q) {
        var O = Array(Math.max(0, S));
        for (var P = 0;
            P < S;
            P++) {
                O[P] = R.call(Q, P)
        } return O
    };
    N.random = function (P, O) {
        if (O == null) {
            O = P;
            P = 0
        } return P + Math.floor(Math.random() * (O - P + 1))
    };
    var n = { escape: { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;" } };
    n.unescape = N.invert(n.escape);
    var L = { escape: new RegExp("[" + N.keys(n.escape).join("") + "]", "g"), unescape: new RegExp("(" + N.keys(n.unescape).join("|") + ")", "g") };
    N.each(["escape", "unescape"], function (O) {
        N[O] = function (P) {
            if (P == null) {
                return ""
            } return ("" + P).replace(L[O], function (Q) {
                return n[O][Q]
            })
        }
    });
    N.result = function (O, Q) {
        if (O == null) {
            return void 0
        } var P = O[Q];
        return N.isFunction(P) ? P.call(O) : P
    };
    N.mixin = function (O) {
        J(N.functions(O), function (P) {
            var Q = N[P] = O[P];
            N.prototype[P] = function () {
                var R = [this._wrapped];
                I.apply(R, arguments);
                return t.call(this, Q.apply(N, R))
            }
        })
    };
    var A = 0;
    N.uniqueId = function (O) {
        var P = ++A + "";
        return O ? O + P : P
    };
    N.templateSettings = { evaluate: /<%([\s\S]+?)%>/g, interpolate: /<%=([\s\S]+?)%>/g, escape: /<%-([\s\S]+?)%>/g };
    var w = /(.)^/;
    var h = { "'": "'", "\\": "\\", "\r": "r", "\n": "n", "\t": "t", "\u2028": "u2028", "\u2029": "u2029" };
    var j = /\\|'|\r|\n|\t|\u2028|\u2029/g;
    N.template = function (W, R, Q) {
        var P;
        Q = N.defaults({}, Q, N.templateSettings);
        var S = new RegExp([(Q.escape || w).source, (Q.interpolate || w).source, (Q.evaluate || w).source].join("|") + "|$", "g");
        var T = 0;
        var O = "__p+='";
        W.replace(S, function (Y, Z, X, ab, aa) {
            O += W.slice(T, aa).replace(j, function (ac) {
                return "\\" + h[ac]
            });
            if (Z) {
                O += "'+\n((__t=(" + Z + "))==null?'':_.escape(__t))+\n'"
            } if (X) {
                O += "'+\n((__t=(" + X + "))==null?'':__t)+\n'"
            } if (ab) {
                O += "';\n" + ab + "\n__p+='"
            } T = aa + Y.length;
            return Y
        });
        O += "';\n";
        if (!Q.variable) {
            O = "with(obj||{}){\n" + O + "}\n"
        } O = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + O + "return __p;\n";
        try {
            P = new Function(Q.variable || "obj", "_", O)
        } catch (U) {
            U.source = O;
            throw U
        } if (R) {
            return P(R, N)
        } var V = function (X) {
            return P.call(this, X, N)
        };
        V.source = "function(" + (Q.variable || "obj") + "){\n" + O + "}";
        return V
    };
    N.chain = function (O) {
        return N(O).chain()
    };
    var t = function (O) {
        return this._chain ? N(O).chain() : O
    };
    N.mixin(N);
    J(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (O) {
        var P = D[O];
        N.prototype[O] = function () {
            var Q = this._wrapped;
            P.apply(Q, arguments);
            if ((O == "shift" || O == "splice") && Q.length === 0) {
                delete Q[0]
            } return t.call(this, Q)
        }
    });
    J(["concat", "join", "slice"], function (O) {
        var P = D[O];
        N.prototype[O] = function () {
            return t.call(this, P.apply(this._wrapped, arguments))
        }
    });
    N.extend(N.prototype, {
        chain: function () {
            this._chain = true;
            return this
        }, value: function () {
            return this._wrapped
        }
    })
}).call(this);
(function () {
    var v = this;
    var C = v.Backbone;
    var g = [];
    var E = g.push;
    var o = g.slice;
    var u = g.splice;
    var A;
    if (typeof exports !== "undefined") {
        A = exports
    } else {
        A = v.Backbone = {}
    } A.VERSION = "1.0.0";
    var M = v._;
    if (!M && (typeof require !== "undefined")) {
        M = require("underscore")
    } A.$ = v.jQuery || v.Zepto || v.ender || v.$;
    A.noConflict = function () {
        v.Backbone = C;
        return this
    };
    A.emulateHTTP = false;
    A.emulateJSON = false;
    var K = A.Events = {
        on: function (N, Q, P) {
            if (!y(this, "on", N, [Q, P]) || !Q) {
                return this
            } this._events || (this._events = {});
            var O = this._events[N] || (this._events[N] = []);
            O.push({ callback: Q, context: P, ctx: P || this });
            return this
        }, once: function (O, R, P) {
            if (!y(this, "once", O, [R, P]) || !R) {
                return this
            } var N = this;
            var Q = M.once(function () {
                N.off(O, Q);
                R.apply(this, arguments)
            });
            Q._callback = R;
            return this.on(O, Q, P)
        }, off: function (N, W, O) {
            var U, V, X, T, S, P, R, Q;
            if (!this._events || !y(this, "off", N, [W, O])) {
                return this
            } if (!N && !W && !O) {
                this._events = {};
                return this
            } T = N ? [N] : M.keys(this._events);
            for (S = 0, P = T.length;
                S < P;
                S++) {
                    N = T[S];
                if (X = this._events[N]) {
                    this._events[N] = U = [];
                    if (W || O) {
                        for (R = 0, Q = X.length;
                            R < Q;
                            R++) {
                                V = X[R];
                            if ((W && W !== V.callback && W !== V.callback._callback) || (O && O !== V.context)) {
                                U.push(V)
                            }
                        }
                    } if (!U.length) {
                        delete this._events[N]
                    }
                }
            } return this
        }, trigger: function (P) {
            if (!this._events) {
                return this
            } var O = o.call(arguments, 1);
            if (!y(this, "trigger", P, O)) {
                return this
            } var Q = this._events[P];
            var N = this._events.all;
            if (Q) {
                b(Q, O)
            } if (N) {
                b(N, arguments)
            } return this
        }, stopListening: function (Q, N, S) {
            var O = this._listeners;
            if (!O) {
                return this
            } var P = !N && !S;
            if (typeof N === "object") {
                S = this
            } if (Q) {
                (O = {})[Q._listenerId] = Q
            } for (var R in O) {
                O[R].off(N, S, this);
                if (P) {
                    delete this._listeners[R]
                }
            } return this
        }
    };
    var x = /\s+/;
    var y = function (U, S, O, R) {
        if (!O) {
            return true
        } if (typeof O === "object") {
            for (var Q in O) {
                U[S].apply(U, [Q, O[Q]].concat(R))
            } return false
        } if (x.test(O)) {
            var T = O.split(x);
            for (var P = 0, N = T.length;
                P < N;
                P++) {
                    U[S].apply(U, [T[P]].concat(R))
            } return false
        } return true
    };
    var b = function (S, Q) {
        var T, R = -1, P = S.length, O = Q[0], N = Q[1], U = Q[2];
        switch (Q.length) {
            case 0: while (++R < P) {
                (T = S[R]).callback.call(T.ctx)
            } return;
            case 1: while (++R < P) {
                (T = S[R]).callback.call(T.ctx, O)
            } return;
            case 2: while (++R < P) {
                (T = S[R]).callback.call(T.ctx, O, N)
            } return;
            case 3: while (++R < P) {
                (T = S[R]).callback.call(T.ctx, O, N, U)
            } return;
            default: while (++R < P) {
                (T = S[R]).callback.apply(T.ctx, Q)
            }
        }
    };
    var D = { listenTo: "on", listenToOnce: "once" };
    M.each(D, function (N, O) {
        K[O] = function (R, P, T) {
            var Q = this._listeners || (this._listeners = {});
            var S = R._listenerId || (R._listenerId = M.uniqueId("l"));
            Q[S] = R;
            if (typeof P === "object") {
                T = this
            } R[N](P, T, this);
            return this
        }
    });
    K.bind = K.on;
    K.unbind = K.off;
    M.extend(A, K);
    var F = A.Model = function (N, P) {
        var Q;
        var O = N || {};
        P || (P = {});
        this.cid = M.uniqueId("c");
        this.attributes = {};
        M.extend(this, M.pick(P, G));
        if (P.parse) {
            O = this.parse(O, P) || {}
        } if (Q = M.result(this, "defaults")) {
            O = M.defaults({}, O, Q)
        } this.set(O, P);
        this.changed = {};
        this.initialize.apply(this, arguments)
    };
    var G = ["url", "urlRoot", "collection"];
    M.extend(F.prototype, K, {
        changed: null, validationError: null, idAttribute: "id", initialize: function () { }, toJSON: function (N) {
            return M.clone(this.attributes)
        }, sync: function () {
            return A.sync.apply(this, arguments)
        }, get: function (N) {
            return this.attributes[N]
        }, escape: function (N) {
            return M.escape(this.get(N))
        }, has: function (N) {
            return this.get(N) != null
        }, set: function (V, N, Z) {
            var T, W, X, U, S, Y, P, R;
            if (V == null) {
                return this
            } if (typeof V === "object") {
                W = V;
                Z = N
            } else {
                (W = {})[V] = N
            } Z || (Z = {});
            if (!this._validate(W, Z)) {
                return false
            } X = Z.unset;
            S = Z.silent;
            U = [];
            Y = this._changing;
            this._changing = true;
            if (!Y) {
                this._previousAttributes = M.clone(this.attributes);
                this.changed = {}
            } R = this.attributes, P = this._previousAttributes;
            if (this.idAttribute in W) {
                this.id = W[this.idAttribute]
            } for (T in W) {
                N = W[T];
                if (!M.isEqual(R[T], N)) {
                    U.push(T)
                } if (!M.isEqual(P[T], N)) {
                    this.changed[T] = N
                } else {
                    delete this.changed[T]
                } X ? delete R[T] : R[T] = N
            } if (!S) {
                if (U.length) {
                    this._pending = true
                } for (var Q = 0, O = U.length;
                    Q < O;
                    Q++) {
                        this.trigger("change:" + U[Q], this, R[U[Q]], Z)
                }
            } if (Y) {
                return this
            } if (!S) {
                while (this._pending) {
                    this._pending = false;
                    this.trigger("change", this, Z)
                }
            } this._pending = false;
            this._changing = false;
            return this
        }, unset: function (N, O) {
            return this.set(N, void 0, M.extend({}, O, { unset: true }))
        }, clear: function (O) {
            var N = {};
            for (var P in this.attributes) {
                N[P] = void 0
            } return this.set(N, M.extend({}, O, { unset: true }))
        }, hasChanged: function (N) {
            if (N == null) {
                return !M.isEmpty(this.changed)
            } return M.has(this.changed, N)
        }, changedAttributes: function (P) {
            if (!P) {
                return this.hasChanged() ? M.clone(this.changed) : false
            } var R, Q = false;
            var O = this._changing ? this._previousAttributes : this.attributes;
            for (var N in P) {
                if (M.isEqual(O[N], (R = P[N]))) {
                    continue
                } (Q || (Q = {}))[N] = R
            } return Q
        }, previous: function (N) {
            if (N == null || !this._previousAttributes) {
                return null
            } return this._previousAttributes[N]
        }, previousAttributes: function () {
            return M.clone(this._previousAttributes)
        }, fetch: function (O) {
            O = O ? M.clone(O) : {};
            if (O.parse === void 0) {
                O.parse = true
            } var N = this;
            var P = O.success;
            O.success = function (Q) {
                if (!N.set(N.parse(Q, O), O)) {
                    return false
                } if (P) {
                    P(N, Q, O)
                } N.trigger("sync", N, Q, O)
            };
            I(this, O);
            return this.sync("read", this, O)
        }, save: function (R, O, V) {
            var S, N, U, P = this.attributes;
            if (R == null || typeof R === "object") {
                S = R;
                V = O
            } else {
                (S = {})[R] = O
            } if (S && (!V || !V.wait) && !this.set(S, V)) {
                return false
            } V = M.extend({ validate: true }, V);
            if (!this._validate(S, V)) {
                return false
            } if (S && V.wait) {
                this.attributes = M.extend({}, P, S)
            } if (V.parse === void 0) {
                V.parse = true
            } var Q = this;
            var T = V.success;
            V.success = function (X) {
                Q.attributes = P;
                var W = Q.parse(X, V);
                if (V.wait) {
                    W = M.extend(S || {}, W)
                } if (M.isObject(W) && !Q.set(W, V)) {
                    return false
                } if (T) {
                    T(Q, X, V)
                } Q.trigger("sync", Q, X, V)
            };
            I(this, V);
            N = this.isNew() ? "create" : (V.patch ? "patch" : "update");
            if (N === "patch") {
                V.attrs = S
            } U = this.sync(N, this, V);
            if (S && V.wait) {
                this.attributes = P
            } return U
        }, destroy: function (O) {
            O = O ? M.clone(O) : {};
            var N = this;
            var R = O.success;
            var P = function () {
                N.trigger("destroy", N, N.collection, O)
            };
            O.success = function (S) {
                if (O.wait || N.isNew()) {
                    P()
                } if (R) {
                    R(N, S, O)
                } if (!N.isNew()) {
                    N.trigger("sync", N, S, O)
                }
            };
            if (this.isNew()) {
                O.success();
                return false
            } I(this, O);
            var Q = this.sync("delete", this, O);
            if (!O.wait) {
                P()
            } return Q
        }, url: function () {
            var N = M.result(this, "urlRoot") || M.result(this.collection, "url") || s();
            if (this.isNew()) {
                return N
            } return N + (N.charAt(N.length - 1) === "/" ? "" : "/") + encodeURIComponent(this.id)
        }, parse: function (O, N) {
            return O
        }, clone: function () {
            return new this.constructor(this.attributes)
        }, isNew: function () {
            return this.id == null
        }, isValid: function (N) {
            return this._validate({}, M.extend(N || {}, { validate: true }))
        }, _validate: function (P, O) {
            if (!O.validate || !this.validate) {
                return true
            } P = M.extend({}, this.attributes, P);
            var N = this.validationError = this.validate(P, O) || null;
            if (!N) {
                return true
            } this.trigger("invalid", this, N, M.extend(O || {}, { validationError: N }));
            return false
        }
    });
    var a = ["keys", "values", "pairs", "invert", "pick", "omit"];
    M.each(a, function (N) {
        F.prototype[N] = function () {
            var O = o.call(arguments);
            O.unshift(this.attributes);
            return M[N].apply(M, O)
        }
    });
    var c = A.Collection = function (O, N) {
        N || (N = {});
        if (N.url) {
            this.url = N.url
        } if (N.model) {
            this.model = N.model
        } if (N.comparator !== void 0) {
            this.comparator = N.comparator
        } this._reset();
        this.initialize.apply(this, arguments);
        if (O) {
            this.reset(O, M.extend({ silent: true }, N))
        }
    };
    var p = { add: true, remove: true, merge: true };
    var L = { add: true, merge: false, remove: false };
    M.extend(c.prototype, K, {
        model: F, initialize: function () { }, toJSON: function (N) {
            return this.map(function (O) {
                return O.toJSON(N)
            })
        }, sync: function () {
            return A.sync.apply(this, arguments)
        }, add: function (O, N) {
            return this.set(O, M.defaults(N || {}, L))
        }, remove: function (S, Q) {
            S = M.isArray(S) ? S.slice() : [S];
            Q || (Q = {});
            var R, N, P, O;
            for (R = 0, N = S.length;
                R < N;
                R++) {
                    O = this.get(S[R]);
                if (!O) {
                    continue
                } delete this._byId[O.id];
                delete this._byId[O.cid];
                P = this.indexOf(O);
                this.models.splice(P, 1);
                this.length--;
                if (!Q.silent) {
                    Q.index = P;
                    O.trigger("remove", O, this, Q)
                } this._removeReference(O)
            } return this
        }, set: function (O, aa) {
            aa = M.defaults(aa || {}, p);
            if (aa.parse) {
                O = this.parse(O, aa)
            } if (!M.isArray(O)) {
                O = O ? [O] : []
            } var V, R, X, Y, P, W;
            var Q = aa.at;
            var U = this.comparator && (Q == null) && aa.sort !== false;
            var S = M.isString(this.comparator) ? this.comparator : null;
            var Z = [], N = [], T = {};
            for (V = 0, R = O.length;
                V < R;
                V++) {
                    if (!(X = this._prepareModel(O[V], aa))) {
                        continue
                    } if (P = this.get(X)) {
                        if (aa.remove) {
                            T[P.cid] = true
                        } if (aa.merge) {
                            P.set(X.attributes, aa);
                            if (U && !W && P.hasChanged(S)) {
                                W = true
                            }
                        }
                    } else {
                        if (aa.add) {
                            Z.push(X);
                            X.on("all", this._onModelEvent, this);
                            this._byId[X.cid] = X;
                            if (X.id != null) {
                                this._byId[X.id] = X
                            }
                        }
                }
            } if (aa.remove) {
                for (V = 0, R = this.length;
                    V < R;
                    ++V) {
                        if (!T[(X = this.models[V]).cid]) {
                            N.push(X)
                        }
                } if (N.length) {
                    this.remove(N, aa)
                }
            } if (Z.length) {
                if (U) {
                    W = true
                } this.length += Z.length;
                if (Q != null) {
                    u.apply(this.models, [Q, 0].concat(Z))
                } else {
                    E.apply(this.models, Z)
                }
            } if (W) {
                this.sort({ silent: true })
            } if (aa.silent) {
                return this
            } for (V = 0, R = Z.length;
                V < R;
                V++) {
                    (X = Z[V]).trigger("add", X, this, aa)
            } if (W) {
                this.trigger("sort", this, aa)
            } return this
        }, reset: function (Q, O) {
            O || (O = {});
            for (var P = 0, N = this.models.length;
                P < N;
                P++) {
                    this._removeReference(this.models[P])
            } O.previousModels = this.models;
            this._reset();
            this.add(Q, M.extend({ silent: true }, O));
            if (!O.silent) {
                this.trigger("reset", this, O)
            } return this
        }, push: function (O, N) {
            O = this._prepareModel(O, N);
            this.add(O, M.extend({ at: this.length }, N));
            return O
        }, pop: function (O) {
            var N = this.at(this.length - 1);
            this.remove(N, O);
            return N
        }, unshift: function (O, N) {
            O = this._prepareModel(O, N);
            this.add(O, M.extend({ at: 0 }, N));
            return O
        }, shift: function (O) {
            var N = this.at(0);
            this.remove(N, O);
            return N
        }, slice: function (O, N) {
            return this.models.slice(O, N)
        }, get: function (N) {
            if (N == null) {
                return void 0
            } return this._byId[N.id != null ? N.id : N.cid || N]
        }, at: function (N) {
            return this.models[N]
        }, where: function (N, O) {
            if (M.isEmpty(N)) {
                return O ? void 0 : []
            } return this[O ? "find" : "filter"](function (P) {
                for (var Q in N) {
                    if (N[Q] !== P.get(Q)) {
                        return false
                    }
                } return true
            })
        }, findWhere: function (N) {
            return this.where(N, true)
        }, sort: function (N) {
            if (!this.comparator) {
                throw new Error("Cannot sort a set without a comparator")
            } N || (N = {});
            if (M.isString(this.comparator) || this.comparator.length === 1) {
                this.models = this.sortBy(this.comparator, this)
            } else {
                this.models.sort(M.bind(this.comparator, this))
            } if (!N.silent) {
                this.trigger("sort", this, N)
            } return this
        }, sortedIndex: function (N, Q, O) {
            Q || (Q = this.comparator);
            var P = M.isFunction(Q) ? Q : function (R) {
                return R.get(Q)
            };
            return M.sortedIndex(this.models, N, P, O)
        }, pluck: function (N) {
            return M.invoke(this.models, "get", N)
        }, fetch: function (N) {
            N = N ? M.clone(N) : {};
            if (N.parse === void 0) {
                N.parse = true
            } var P = N.success;
            var O = this;
            N.success = function (Q) {
                var R = N.reset ? "reset" : "set";
                O[R](Q, N);
                if (P) {
                    P(O, Q, N)
                } O.trigger("sync", O, Q, N)
            };
            I(this, N);
            return this.sync("read", this, N)
        }, create: function (O, N) {
            N = N ? M.clone(N) : {};
            if (!(O = this._prepareModel(O, N))) {
                return false
            } if (!N.wait) {
                this.add(O, N)
            } var Q = this;
            var P = N.success;
            N.success = function (R) {
                if (N.wait) {
                    Q.add(O, N)
                } if (P) {
                    P(O, R, N)
                }
            };
            O.save(null, N);
            return O
        }, parse: function (O, N) {
            return O
        }, clone: function () {
            return new this.constructor(this.models)
        }, _reset: function () {
            this.length = 0;
            this.models = [];
            this._byId = {}
        }, _prepareModel: function (P, O) {
            if (P instanceof F) {
                if (!P.collection) {
                    P.collection = this
                } return P
            } O || (O = {});
            O.collection = this;
            var N = new this.model(P, O);
            if (!N._validate(P, O)) {
                this.trigger("invalid", this, P, O);
                return false
            } return N
        }, _removeReference: function (N) {
            if (this === N.collection) {
                delete N.collection
            } N.off("all", this._onModelEvent, this)
        }, _onModelEvent: function (P, O, Q, N) {
            if ((P === "add" || P === "remove") && Q !== this) {
                return
            } if (P === "destroy") {
                this.remove(O, N)
            } if (O && P === "change:" + O.idAttribute) {
                delete this._byId[O.previous(O.idAttribute)];
                if (O.id != null) {
                    this._byId[O.id] = O
                }
            } this.trigger.apply(this, arguments)
        }
    });
    var z = ["forEach", "each", "map", "collect", "reduce", "foldl", "inject", "reduceRight", "foldr", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "max", "min", "toArray", "size", "first", "head", "take", "initial", "rest", "tail", "drop", "last", "without", "indexOf", "shuffle", "lastIndexOf", "isEmpty", "chain"];
    M.each(z, function (N) {
        c.prototype[N] = function () {
            var O = o.call(arguments);
            O.unshift(this.models);
            return M[N].apply(M, O)
        }
    });
    var l = ["groupBy", "countBy", "sortBy"];
    M.each(l, function (N) {
        c.prototype[N] = function (Q, O) {
            var P = M.isFunction(Q) ? Q : function (R) {
                return R.get(Q)
            };
            return M[N](this.models, P, O)
        }
    });
    var H = A.View = function (N) {
        this.cid = M.uniqueId("view");
        this._configure(N || {});
        this._ensureElement();
        this.initialize.apply(this, arguments);
        this.delegateEvents()
    };
    var w = /^(\S+)\s*(.*)$/;
    var e = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
    M.extend(H.prototype, K, {
        tagName: "div", $: function (N) {
            return this.$el.find(N)
        }, initialize: function () { }, render: function () {
            return this
        }, remove: function () {
            this.$el.remove();
            this.stopListening();
            return this
        }, setElement: function (N, O) {
            if (this.$el) {
                this.undelegateEvents()
            } this.$el = N instanceof A.$ ? N : A.$(N);
            this.el = this.$el[0];
            if (O !== false) {
                this.delegateEvents()
            } return this
        }, delegateEvents: function (R) {
            if (!(R || (R = M.result(this, "events")))) {
                return this
            } this.undelegateEvents();
            for (var Q in R) {
                var S = R[Q];
                if (!M.isFunction(S)) {
                    S = this[R[Q]]
                } if (!S) {
                    continue
                } var P = Q.match(w);
                var O = P[1], N = P[2];
                S = M.bind(S, this);
                O += ".delegateEvents" + this.cid;
                if (N === "") {
                    this.$el.on(O, S)
                } else {
                    this.$el.on(O, N, S)
                }
            } return this
        }, undelegateEvents: function () {
            this.$el.off(".delegateEvents" + this.cid);
            return this
        }, _configure: function (N) {
            if (this.options) {
                N = M.extend({}, M.result(this, "options"), N)
            } M.extend(this, M.pick(N, e));
            this.options = N
        }, _ensureElement: function () {
            if (!this.el) {
                var N = M.extend({}, M.result(this, "attributes"));
                if (this.id) {
                    N.id = M.result(this, "id")
                } if (this.className) {
                    N["class"] = M.result(this, "className")
                } var O = A.$("<" + M.result(this, "tagName") + ">").attr(N);
                this.setElement(O, false)
            } else {
                this.setElement(M.result(this, "el"), false)
            }
        }
    });
    A.sync = function (T, O, N) {
        var Q = k[T];
        M.defaults(N || (N = {}), { emulateHTTP: A.emulateHTTP, emulateJSON: A.emulateJSON });
        var S = { type: Q, dataType: "json" };
        if (!N.url) {
            S.url = M.result(O, "url") || s()
        } if (N.data == null && O && (T === "create" || T === "update" || T === "patch")) {
            S.contentType = "application/json";
            S.data = JSON.stringify(N.attrs || O.toJSON(N))
        } if (N.emulateJSON) {
            S.contentType = "application/x-www-form-urlencoded";
            S.data = S.data ? { model: S.data } : {}
        } if (N.emulateHTTP && (Q === "PUT" || Q === "DELETE" || Q === "PATCH")) {
            S.type = "POST";
            if (N.emulateJSON) {
                S.data._method = Q
            } var P = N.beforeSend;
            N.beforeSend = function (U) {
                U.setRequestHeader("X-HTTP-Method-Override", Q);
                if (P) {
                    return P.apply(this, arguments)
                }
            }
        } if (S.type !== "GET" && !N.emulateJSON) {
            S.processData = false
        } if (S.type === "PATCH" && window.ActiveXObject && !(window.external && window.external.msActiveXFilteringEnabled)) {
            S.xhr = function () {
                return new ActiveXObject("Microsoft.XMLHTTP")
            }
        } var R = N.xhr = A.ajax(M.extend(S, N));
        O.trigger("request", O, R, N);
        return R
    };
    var k = { create: "POST", update: "PUT", patch: "PATCH", "delete": "DELETE", read: "GET" };
    A.ajax = function () {
        return A.$.ajax.apply(A.$, arguments)
    };
    var q = A.Router = function (N) {
        N || (N = {});
        if (N.routes) {
            this.routes = N.routes
        } this._bindRoutes();
        this.initialize.apply(this, arguments)
    };
    var r = /\((.*?)\)/g;
    var t = /(\(\?)?:\w+/g;
    var d = /\*\w+/g;
    var h = /[\-{}\[\]+?.,\\\^$|#\s]/g;
    M.extend(q.prototype, K, {
        initialize: function () { }, route: function (O, P, Q) {
            if (!M.isRegExp(O)) {
                O = this._routeToRegExp(O)
            } if (M.isFunction(P)) {
                Q = P;
                P = ""
            } if (!Q) {
                Q = this[P]
            } var N = this;
            A.history.route(O, function (S) {
                var R = N._extractParameters(O, S);
                Q && Q.apply(N, R);
                N.trigger.apply(N, ["route:" + P].concat(R));
                N.trigger("route", P, R);
                A.history.trigger("route", N, P, R)
            });
            return this
        }, navigate: function (O, N) {
            A.history.navigate(O, N);
            return this
        }, _bindRoutes: function () {
            if (!this.routes) {
                return
            } this.routes = M.result(this, "routes");
            var O, N = M.keys(this.routes);
            while ((O = N.pop()) != null) {
                this.route(O, this.routes[O])
            }
        }, _routeToRegExp: function (N) {
            N = N.replace(h, "\\$&").replace(r, "(?:$1)?").replace(t, function (P, O) {
                return O ? P : "([^/]+)"
            }).replace(d, "(.*?)");
            return new RegExp("^" + N + "$")
        }, _extractParameters: function (N, O) {
            var P = N.exec(O).slice(1);
            return M.map(P, function (Q) {
                return Q ? decodeURIComponent(Q) : null
            })
        }
    });
    var j = A.History = function () {
        this.handlers = [];
        M.bindAll(this, "checkUrl");
        if (typeof window !== "undefined") {
            this.location = window.location;
            this.history = window.history
        }
    };
    var B = /^[#\/]|\s+$/g;
    var f = /^\/+|\/+$/g;
    var J = /msie [\w.]+/;
    var n = /\/$/;
    j.started = false;
    M.extend(j.prototype, K, {
        interval: 50, getHash: function (O) {
            var N = (O || this).location.href.match(/#(.*)$/);
            return N ? N[1] : ""
        }, getFragment: function (P, O) {
            if (P == null) {
                if (this._hasPushState || !this._wantsHashChange || O) {
                    P = this.location.pathname;
                    var N = this.root.replace(n, "");
                    if (!P.indexOf(N)) {
                        P = P.substr(N.length)
                    }
                } else {
                    P = this.getHash()
                }
            } return P.replace(B, "")
        }, start: function (P) {
            if (j.started) {
                throw new Error("Backbone.history has already been started")
            } j.started = true;
            this.options = M.extend({}, { root: "/" }, this.options, P);
            this.root = this.options.root;
            this._wantsHashChange = this.options.hashChange !== false;
            this._wantsPushState = !!this.options.pushState;
            this._hasPushState = !!(this.options.pushState && this.history && this.history.pushState);
            var O = this.getFragment();
            var N = document.documentMode;
            var R = (J.exec(navigator.userAgent.toLowerCase()) && (!N || N <= 7));
            this.root = ("/" + this.root + "/").replace(f, "/");
            if (R && this._wantsHashChange) {
                this.iframe = A.$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo("body")[0].contentWindow;
                this.navigate(O)
            } if (this._hasPushState) {
                A.$(window).on("popstate", this.checkUrl)
            } else {
                if (this._wantsHashChange && ("onhashchange" in window) && !R) {
                    A.$(window).on("hashchange", this.checkUrl)
                } else {
                    if (this._wantsHashChange) {
                        this._checkUrlInterval = setInterval(this.checkUrl, this.interval)
                    }
                }
            } this.fragment = O;
            var S = this.location;
            var Q = S.pathname.replace(/[^\/]$/, "$&/") === this.root;
            if (this._wantsHashChange && this._wantsPushState && !this._hasPushState && !Q) {
                this.fragment = this.getFragment(null, true);
                this.location.replace(this.root + this.location.search + "#" + this.fragment);
                return true
            } else {
                if (this._wantsPushState && this._hasPushState && Q && S.hash) {
                    this.fragment = this.getHash().replace(B, "");
                    this.history.replaceState({}, document.title, this.root + this.fragment + S.search)
                }
            } if (!this.options.silent) {
                return this.loadUrl()
            }
        }, stop: function () {
            A.$(window).off("popstate", this.checkUrl).off("hashchange", this.checkUrl);
            clearInterval(this._checkUrlInterval);
            j.started = false
        }, route: function (N, O) {
            this.handlers.unshift({ route: N, callback: O })
        }, checkUrl: function (O) {
            var N = this.getFragment();
            if (N === this.fragment && this.iframe) {
                N = this.getFragment(this.getHash(this.iframe))
            } if (N === this.fragment) {
                return false
            } if (this.iframe) {
                this.navigate(N)
            } this.loadUrl() || this.loadUrl(this.getHash())
        }, loadUrl: function (P) {
            var O = this.fragment = this.getFragment(P);
            var N = M.any(this.handlers, function (Q) {
                if (Q.route.test(O)) {
                    Q.callback(O);
                    return true
                }
            });
            return N
        }, navigate: function (P, O) {
            if (!j.started) {
                return false
            } if (!O || O === true) {
                O = { trigger: O }
            } P = this.getFragment(P || "");
            if (this.fragment === P) {
                return
            } this.fragment = P;
            var N = this.root + P;
            if (this._hasPushState) {
                this.history[O.replace ? "replaceState" : "pushState"]({}, document.title, N)
            } else {
                if (this._wantsHashChange) {
                    this._updateHash(this.location, P, O.replace);
                    if (this.iframe && (P !== this.getFragment(this.getHash(this.iframe)))) {
                        if (!O.replace) {
                            this.iframe.document.open().close()
                        } this._updateHash(this.iframe.location, P, O.replace)
                    }
                } else {
                    return this.location.assign(N)
                }
            } if (O.trigger) {
                this.loadUrl(P)
            }
        }, _updateHash: function (N, P, Q) {
            if (Q) {
                var O = N.href.replace(/(javascript:|#).*$/, "");
                N.replace(O + "#" + P)
            } else {
                N.hash = "#" + P
            }
        }
    });
    A.history = new j;
    var m = function (N, P) {
        var O = this;
        var R;
        if (N && M.has(N, "constructor")) {
            R = N.constructor
        } else {
            R = function () {
                return O.apply(this, arguments)
            }
        } M.extend(R, O, P);
        var Q = function () {
            this.constructor = R
        };
        Q.prototype = O.prototype;
        R.prototype = new Q;
        if (N) {
            M.extend(R.prototype, N)
        } R.__super__ = O.prototype;
        return R
    };
    F.extend = c.extend = q.extend = H.extend = j.extend = m;
    var s = function () {
        throw new Error('A "url" property or function must be specified')
    };
    var I = function (P, O) {
        var N = O.error;
        O.error = function (Q) {
            if (N) {
                N(P, Q, O)
            } P.trigger("error", P, Q, O)
        }
    }
}).call(this);
(function webpackUniversalModuleDefinition(a, b) {
    if (typeof exports === "object" && typeof module === "object") {
        module.exports = b()
    } else {
        if (typeof define === "function" && define.amd) {
            define([], b)
        } else {
            if (typeof exports === "object") {
                exports.Handlebars = b()
            } else {
                a.Handlebars = b()
            }
        }
    }
})(this, function () {
    return (function (a) {
        var b = {};
        function c(e) {
            if (b[e]) {
                return b[e].exports
            } var d = b[e] = { exports: {}, id: e, loaded: false };
            a[e].call(d.exports, d, d.exports, c);
            d.loaded = true;
            return d.exports
        } c.m = a;
        c.c = b;
        c.p = "";
        return c(0)
    })([(function (c, t, e) {
        var a = e(1)["default"];
        t.__esModule = true;
        var g = e(2);
        var d = a(g);
        var b = e(35);
        var o = a(b);
        var h = e(36);
        var p = e(41);
        var j = e(42);
        var k = a(j);
        var q = e(39);
        var s = a(q);
        var m = e(34);
        var l = a(m);
        var r = d["default"].create;
        function n() {
            var u = r();
            u.compile = function (v, w) {
                return p.compile(v, w, u)
            };
            u.precompile = function (v, w) {
                return p.precompile(v, w, u)
            };
            u.AST = o["default"];
            u.Compiler = p.Compiler;
            u.JavaScriptCompiler = k["default"];
            u.Parser = h.parser;
            u.parse = h.parse;
            return u
        } var f = n();
        f.create = n;
        l["default"](f);
        f.Visitor = s["default"];
        f["default"] = f;
        t["default"] = f;
        c.exports = t["default"]
    }), (function (b, a) {
        a["default"] = function (c) {
            return c && c.__esModule ? c : { "default": c }
        };
        a.__esModule = true
    }), (function (b, t, d) {
        var q = d(3)["default"];
        var a = d(1)["default"];
        t.__esModule = true;
        var s = d(4);
        var g = q(s);
        var r = d(21);
        var h = a(r);
        var m = d(6);
        var o = a(m);
        var n = d(5);
        var c = q(n);
        var f = d(22);
        var p = q(f);
        var k = d(34);
        var j = a(k);
        function l() {
            var u = new g.HandlebarsEnvironment();
            c.extend(u, g);
            u.SafeString = h["default"];
            u.Exception = o["default"];
            u.Utils = c;
            u.escapeExpression = c.escapeExpression;
            u.VM = p;
            u.template = function (v) {
                return p.template(v, u)
            };
            return u
        } var e = l();
        e.create = l;
        j["default"](e);
        e["default"] = e;
        t["default"] = e;
        b.exports = t["default"]
    }), (function (b, a) {
        a["default"] = function (e) {
            if (e && e.__esModule) {
                return e
            } else {
                var c = {};
                if (e != null) {
                    for (var d in e) {
                        if (Object.prototype.hasOwnProperty.call(e, d)) {
                            c[d] = e[d]
                        }
                    }
                } c["default"] = e;
                return c
            }
        };
        a.__esModule = true
    }), (function (e, w, g) {
        var c = g(1)["default"];
        w.__esModule = true;
        w.HandlebarsEnvironment = l;
        var o = g(5);
        var u = g(6);
        var f = c(u);
        var h = g(10);
        var x = g(18);
        var n = g(20);
        var d = c(n);
        var v = "4.0.11";
        w.VERSION = v;
        var r = 7;
        w.COMPILER_REVISION = r;
        var t = { 1: "<= 1.0.rc.2", 2: "== 1.0.0-rc.3", 3: "== 1.0.0-rc.4", 4: "== 1.x.x", 5: "== 2.0.0-alpha.x", 6: ">= 2.0.0-beta.1", 7: ">= 4.0.0" };
        w.REVISION_CHANGES = t;
        var q = "[object Object]";
        function l(A, z, y) {
            this.helpers = A || {};
            this.partials = z || {};
            this.decorators = y || {};
            h.registerDefaultHelpers(this);
            x.registerDefaultDecorators(this)
        } l.prototype = {
            constructor: l, logger: d["default"], log: d["default"].log, registerHelper: function p(y, z) {
                if (o.toString.call(y) === q) {
                    if (z) {
                        throw new f["default"]("Arg not supported with multiple helpers")
                    } o.extend(this.helpers, y)
                } else {
                    this.helpers[y] = z
                }
            }, unregisterHelper: function j(y) {
                delete this.helpers[y]
            }, registerPartial: function k(z, y) {
                if (o.toString.call(z) === q) {
                    o.extend(this.partials, z)
                } else {
                    if (typeof y === "undefined") {
                        throw new f["default"]('Attempting to register a partial called "' + z + '" as undefined')
                    } this.partials[z] = y
                }
            }, unregisterPartial: function s(y) {
                delete this.partials[y]
            }, registerDecorator: function b(y, z) {
                if (o.toString.call(y) === q) {
                    if (z) {
                        throw new f["default"]("Arg not supported with multiple decorators")
                    } o.extend(this.decorators, y)
                } else {
                    this.decorators[y] = z
                }
            }, unregisterDecorator: function a(y) {
                delete this.decorators[y]
            }
        };
        var m = d["default"].log;
        w.log = m;
        w.createFrame = o.createFrame;
        w.logger = d["default"]
    }), (function (d, g) {
        g.__esModule = true;
        g.extend = m;
        g.indexOf = n;
        g.escapeExpression = j;
        g.isEmpty = h;
        g.createFrame = p;
        g.blockParams = l;
        g.appendContextPath = e;
        var o = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;", "=": "&#x3D;" };
        var a = /[&<>"'`=]/g, f = /[&<>"'`=]/;
        function q(r) {
            return o[r]
        } function m(t) {
            for (var s = 1;
                s < arguments.length;
                s++) {
                    for (var r in arguments[s]) {
                        if (Object.prototype.hasOwnProperty.call(arguments[s], r)) {
                            t[r] = arguments[s][r]
                        }
                    }
            } return t
        } var c = Object.prototype.toString;
        g.toString = c;
        var b = function b(r) {
            return typeof r === "function"
        };
        if (b(/x/)) {
            g.isFunction = b = function (r) {
                return typeof r === "function" && c.call(r) === "[object Function]"
            }
        } g.isFunction = b;
        var k = Array.isArray || function (r) {
            return r && typeof r === "object" ? c.call(r) === "[object Array]" : false
        };
        g.isArray = k;
        function n(u, t) {
            for (var s = 0, r = u.length;
                s < r;
                s++) {
                    if (u[s] === t) {
                        return s
                    }
            } return -1
        } function j(r) {
            if (typeof r !== "string") {
                if (r && r.toHTML) {
                    return r.toHTML()
                } else {
                    if (r == null) {
                        return ""
                    } else {
                        if (!r) {
                            return r + ""
                        }
                    }
                } r = "" + r
            } if (!f.test(r)) {
                return r
            } return r.replace(a, q)
        } function h(r) {
            if (!r && r !== 0) {
                return true
            } else {
                if (k(r) && r.length === 0) {
                    return true
                } else {
                    return false
                }
            }
        } function p(r) {
            var s = m({}, r);
            s._parent = r;
            return s
        } function l(s, r) {
            s.path = r;
            return s
        } function e(r, s) {
            return (r ? r + "." : "") + s
        }
    }), (function (d, a, e) {
        var c = e(7)["default"];
        a.__esModule = true;
        var f = ["description", "fileName", "lineNumber", "message", "name", "number", "stack"];
        function b(m, l) {
            var n = l && l.loc, h = undefined, k = undefined;
            if (n) {
                h = n.start.line;
                k = n.start.column;
                m += " - " + h + ":" + k
            } var j = Error.prototype.constructor.call(this, m);
            for (var g = 0;
                g < f.length;
                g++) {
                    this[f[g]] = j[f[g]]
            } if (Error.captureStackTrace) {
                Error.captureStackTrace(this, b)
            } try {
                if (n) {
                    this.lineNumber = h;
                    if (c) {
                        Object.defineProperty(this, "column", { value: k, enumerable: true })
                    } else {
                        this.column = k
                    }
                }
            } catch (o) { }
        } b.prototype = new Error();
        a["default"] = b;
        d.exports = a["default"]
    }), (function (b, a, c) {
        b.exports = { "default": c(8), __esModule: true }
    }), (function (c, b, e) {
        var d = e(9);
        c.exports = function a(g, f, h) {
            return d.setDesc(g, f, h)
        }
    }), (function (c, a) {
        var b = Object;
        c.exports = { create: b.create, getProto: b.getPrototypeOf, isEnum: {}.propertyIsEnumerable, getDesc: b.getOwnPropertyDescriptor, setDesc: b.defineProperty, setDescs: b.defineProperties, getKeys: b.keys, getNames: b.getOwnPropertyNames, getSymbols: b.getOwnPropertySymbols, each: [].forEach }
    }), (function (e, t, f) {
        var c = f(1)["default"];
        t.__esModule = true;
        t.registerDefaultHelpers = p;
        var a = f(11);
        var n = c(a);
        var l = f(12);
        var d = c(l);
        var g = f(13);
        var s = c(g);
        var j = f(14);
        var b = c(j);
        var o = f(15);
        var q = c(o);
        var m = f(16);
        var h = c(m);
        var k = f(17);
        var r = c(k);
        function p(u) {
            n["default"](u);
            d["default"](u);
            s["default"](u);
            b["default"](u);
            q["default"](u);
            h["default"](u);
            r["default"](u)
        }
    }), (function (b, a, d) {
        a.__esModule = true;
        var c = d(5);
        a["default"] = function (e) {
            e.registerHelper("blockHelperMissing", function (h, g) {
                var f = g.inverse, j = g.fn;
                if (h === true) {
                    return j(this)
                } else {
                    if (h === false || h == null) {
                        return f(this)
                    } else {
                        if (c.isArray(h)) {
                            if (h.length > 0) {
                                if (g.ids) {
                                    g.ids = [g.name]
                                } return e.helpers.each(h, g)
                            } else {
                                return f(this)
                            }
                        } else {
                            if (g.data && g.ids) {
                                var k = c.createFrame(g.data);
                                k.contextPath = c.appendContextPath(g.data.contextPath, g.name);
                                g = { data: k }
                            } return j(h, g)
                        }
                    }
                }
            })
        };
        b.exports = a["default"]
    }), (function (c, a, f) {
        var d = f(1)["default"];
        a.__esModule = true;
        var e = f(5);
        var b = f(6);
        var g = d(b);
        a["default"] = function (h) {
            h.registerHelper("each", function (k, v) {
                if (!v) {
                    throw new g["default"]("Must pass iterator to #each")
                } var t = v.fn, o = v.inverse, q = 0, s = "", p = undefined, l = undefined;
                if (v.data && v.ids) {
                    l = e.appendContextPath(v.data.contextPath, v.ids[0]) + "."
                } if (e.isFunction(k)) {
                    k = k.call(this)
                } if (v.data) {
                    p = e.createFrame(v.data)
                } function m(x, j, w) {
                    if (p) {
                        p.key = x;
                        p.index = j;
                        p.first = j === 0;
                        p.last = !!w;
                        if (l) {
                            p.contextPath = l + x
                        }
                    } s = s + t(k[x], { data: p, blockParams: e.blockParams([k[x], x], [l + x, null]) })
                } if (k && typeof k === "object") {
                    if (e.isArray(k)) {
                        for (var n = k.length;
                            q < n;
                            q++) {
                                if (q in k) {
                                    m(q, q, q === k.length - 1)
                                }
                        }
                    } else {
                        var r = undefined;
                        for (var u in k) {
                            if (k.hasOwnProperty(u)) {
                                if (r !== undefined) {
                                    m(r, q - 1)
                                } r = u;
                                q++
                            }
                        } if (r !== undefined) {
                            m(r, q - 1, true)
                        }
                    }
                } if (q === 0) {
                    s = o(this)
                } return s
            })
        };
        c.exports = a["default"]
    }), (function (c, a, e) {
        var d = e(1)["default"];
        a.__esModule = true;
        var b = e(6);
        var f = d(b);
        a["default"] = function (g) {
            g.registerHelper("helperMissing", function () {
                if (arguments.length === 1) {
                    return undefined
                } else {
                    throw new f["default"]('Missing helper: "' + arguments[arguments.length - 1].name + '"')
                }
            })
        };
        c.exports = a["default"]
    }), (function (b, a, d) {
        a.__esModule = true;
        var c = d(5);
        a["default"] = function (e) {
            e.registerHelper("if", function (g, f) {
                if (c.isFunction(g)) {
                    g = g.call(this)
                } if (!f.hash.includeZero && !g || c.isEmpty(g)) {
                    return f.inverse(this)
                } else {
                    return f.fn(this)
                }
            });
            e.registerHelper("unless", function (g, f) {
                return e.helpers["if"].call(this, g, { fn: f.inverse, inverse: f.fn, hash: f.hash })
            })
        };
        b.exports = a["default"]
    }), (function (b, a) {
        a.__esModule = true;
        a["default"] = function (c) {
            c.registerHelper("log", function () {
                var e = [undefined], d = arguments[arguments.length - 1];
                for (var f = 0;
                    f < arguments.length - 1;
                    f++) {
                        e.push(arguments[f])
                } var g = 1;
                if (d.hash.level != null) {
                    g = d.hash.level
                } else {
                    if (d.data && d.data.level != null) {
                        g = d.data.level
                    }
                } e[0] = g;
                c.log.apply(c, e)
            })
        };
        b.exports = a["default"]
    }), (function (b, a) {
        a.__esModule = true;
        a["default"] = function (c) {
            c.registerHelper("lookup", function (e, d) {
                return e && e[d]
            })
        };
        b.exports = a["default"]
    }), (function (b, a, d) {
        a.__esModule = true;
        var c = d(5);
        a["default"] = function (e) {
            e.registerHelper("with", function (g, f) {
                if (c.isFunction(g)) {
                    g = g.call(this)
                } var h = f.fn;
                if (!c.isEmpty(g)) {
                    var j = f.data;
                    if (f.data && f.ids) {
                        j = c.createFrame(f.data);
                        j.contextPath = c.appendContextPath(f.data.contextPath, f.ids[0])
                    } return h(g, { data: j, blockParams: c.blockParams([g], [j && j.contextPath]) })
                } else {
                    return f.inverse(this)
                }
            })
        };
        b.exports = a["default"]
    }), (function (d, c, g) {
        var f = g(1)["default"];
        c.__esModule = true;
        c.registerDefaultDecorators = e;
        var b = g(19);
        var a = f(b);
        function e(h) {
            a["default"](h)
        }
    }), (function (b, a, d) {
        a.__esModule = true;
        var c = d(5);
        a["default"] = function (e) {
            e.registerDecorator("inline", function (k, j, f, h) {
                var g = k;
                if (!j.partials) {
                    j.partials = {};
                    g = function (o, m) {
                        var n = f.partials;
                        f.partials = c.extend({}, n, j.partials);
                        var l = k(o, m);
                        f.partials = n;
                        return l
                    }
                } j.partials[h.args[0]] = h.fn;
                return g
            })
        };
        b.exports = a["default"]
    }), (function (c, a, f) {
        a.__esModule = true;
        var e = f(5);
        var b = {
            methodMap: ["debug", "info", "warn", "error"], level: "info", lookupLevel: function g(j) {
                if (typeof j === "string") {
                    var h = e.indexOf(b.methodMap, j.toLowerCase());
                    if (h >= 0) {
                        j = h
                    } else {
                        j = parseInt(j, 10)
                    }
                } return j
            }, log: function d(m) {
                m = b.lookupLevel(m);
                if (typeof console !== "undefined" && b.lookupLevel(b.level) <= m) {
                    var l = b.methodMap[m];
                    if (!console[l]) {
                        l = "log"
                    } for (var h = arguments.length, k = Array(h > 1 ? h - 1 : 0), j = 1;
                        j < h;
                        j++) {
                            k[j - 1] = arguments[j]
                    } console[l].apply(console, k)
                }
            }
        };
        a["default"] = b;
        c.exports = a["default"]
    }), (function (b, a) {
        a.__esModule = true;
        function c(d) {
            this.string = d
        } c.prototype.toString = c.prototype.toHTML = function () {
            return "" + this.string
        };
        a["default"] = c;
        b.exports = a["default"]
    }), (function (b, s, e) {
        var l = e(23)["default"];
        var r = e(3)["default"];
        var a = e(1)["default"];
        s.__esModule = true;
        s.checkRevision = m;
        s.template = q;
        s.wrapProgram = h;
        s.resolvePartial = k;
        s.invokePartial = t;
        s.noop = f;
        var j = e(5);
        var d = r(j);
        var n = e(6);
        var c = a(n);
        var o = e(4);
        function m(w) {
            var v = w && w[0] || 1, y = o.COMPILER_REVISION;
            if (v !== y) {
                if (v < y) {
                    var u = o.REVISION_CHANGES[y], x = o.REVISION_CHANGES[v];
                    throw new c["default"]("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + u + ") or downgrade your runtime to an older version (" + x + ").")
                } else {
                    throw new c["default"]("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + w[1] + ").")
                }
            }
        } function q(E, y) {
            if (!y) {
                throw new c["default"]("No environment passed to template")
            } if (!E || !E.main) {
                throw new c["default"]("Unknown template object: " + typeof E)
            } E.main.decorator = E.main_d;
            y.VM.checkRevision(E.compiler);
            function F(J, M, K) {
                if (K.hash) {
                    M = d.extend({}, M, K.hash);
                    if (K.ids) {
                        K.ids[0] = true
                    }
                } J = y.VM.resolvePartial.call(this, J, M, K);
                var G = y.VM.invokePartial.call(this, J, M, K);
                if (G == null && y.compile) {
                    K.partials[K.name] = y.compile(J, E.compilerOptions, y);
                    G = K.partials[K.name](M, K)
                } if (G != null) {
                    if (K.indent) {
                        var I = G.split("\n");
                        for (var L = 0, H = I.length;
                            L < H;
                            L++) {
                                if (!I[L] && L + 1 === H) {
                                    break
                                } I[L] = K.indent + I[L]
                        } G = I.join("\n")
                    } return G
                } else {
                    throw new c["default"]("The partial " + K.name + " could not be compiled when running in runtime-only mode")
                }
            } var u = {
                strict: function D(H, G) {
                    if (!(G in H)) {
                        throw new c["default"]('"' + G + '" not defined in ' + H)
                    } return H[G]
                }, lookup: function v(J, H) {
                    var G = J.length;
                    for (var I = 0;
                        I < G;
                        I++) {
                            if (J[I] && J[I][H] != null) {
                                return J[I][H]
                            }
                    }
                }, lambda: function z(H, G) {
                    return typeof H === "function" ? H.call(G) : H
                }, escapeExpression: d.escapeExpression, invokePartial: F, fn: function C(H) {
                    var G = E[H];
                    G.decorator = E[H + "_d"];
                    return G
                }, programs: [], program: function x(I, L, H, K, M) {
                    var G = this.programs[I], J = this.fn(I);
                    if (L || M || K || H) {
                        G = h(this, I, J, L, H, K, M)
                    } else {
                        if (!G) {
                            G = this.programs[I] = h(this, I, J)
                        }
                    } return G
                }, data: function w(G, H) {
                    while (G && H--) {
                        G = G._parent
                    } return G
                }, merge: function B(I, G) {
                    var H = I || G;
                    if (I && G && I !== G) {
                        H = d.extend({}, G, I)
                    } return H
                }, nullContext: l({}), noop: y.VM.noop, compilerInfo: E.compiler
            };
            function A(I) {
                var H = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                var K = H.data;
                A._setup(H);
                if (!H.partial && E.useData) {
                    K = p(I, K)
                } var L = undefined, J = E.useBlockParams ? [] : undefined;
                if (E.useDepths) {
                    if (H.depths) {
                        L = I != H.depths[0] ? [I].concat(H.depths) : H.depths
                    } else {
                        L = [I]
                    }
                } function G(M) {
                    return "" + E.main(u, M, u.helpers, u.partials, K, J, L)
                } G = g(E.main, G, u, H.depths || [], K, J);
                return G(I, H)
            } A.isTop = true;
            A._setup = function (G) {
                if (!G.partial) {
                    u.helpers = u.merge(G.helpers, y.helpers);
                    if (E.usePartial) {
                        u.partials = u.merge(G.partials, y.partials)
                    } if (E.usePartial || E.useDecorators) {
                        u.decorators = u.merge(G.decorators, y.decorators)
                    }
                } else {
                    u.helpers = G.helpers;
                    u.partials = G.partials;
                    u.decorators = G.decorators
                }
            };
            A._child = function (G, I, H, J) {
                if (E.useBlockParams && !H) {
                    throw new c["default"]("must pass block params")
                } if (E.useDepths && !J) {
                    throw new c["default"]("must pass parent depths")
                } return h(u, G, E[G], I, 0, H, J)
            };
            return A
        } function h(u, w, x, z, v, y, B) {
            function A(D) {
                var C = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                var E = B;
                if (B && D != B[0] && !(D === u.nullContext && B[0] === null)) {
                    E = [D].concat(B)
                } return x(u, D, u.helpers, u.partials, C.data || z, y && [C.blockParams].concat(y), E)
            } A = g(x, A, u, B, z, y);
            A.program = w;
            A.depth = B ? B.length : 0;
            A.blockParams = v || 0;
            return A
        } function k(u, w, v) {
            if (!u) {
                if (v.name === "@partial-block") {
                    u = v.data["partial-block"]
                } else {
                    u = v.partials[v.name]
                }
            } else {
                if (!u.call && !v.name) {
                    v.name = u;
                    u = v.partials[u]
                }
            } return u
        } function t(u, w, v) {
            var y = v.data && v.data["partial-block"];
            v.partial = true;
            if (v.ids) {
                v.data.contextPath = v.ids[0] || v.data.contextPath
            } var x = undefined;
            if (v.fn && v.fn !== f) {
                (function () {
                    v.data = o.createFrame(v.data);
                    var A = v.fn;
                    x = v.data["partial-block"] = function z(C) {
                        var B = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                        B.data = o.createFrame(B.data);
                        B.data["partial-block"] = y;
                        return A(C, B)
                    };
                    if (A.partials) {
                        v.partials = d.extend({}, v.partials, A.partials)
                    }
                })()
            } if (u === undefined && x) {
                u = x
            } if (u === undefined) {
                throw new c["default"]("The partial " + v.name + " could not be found")
            } else {
                if (u instanceof Function) {
                    return u(w, v)
                }
            }
        } function f() {
            return ""
        } function p(u, v) {
            if (!v || !("root" in v)) {
                v = v ? o.createFrame(v) : {};
                v.root = u
            } return v
        } function g(w, z, u, A, y, x) {
            if (w.decorator) {
                var v = {};
                z = w.decorator(z, v, u, A && A[0], y, x, A);
                d.extend(z, v)
            } return z
        }
    }), (function (b, a, c) {
        b.exports = { "default": c(24), __esModule: true }
    }), (function (b, a, c) {
        c(25);
        b.exports = c(30).Object.seal
    }), (function (c, b, d) {
        var a = d(26);
        d(27)("seal", function (e) {
            return function f(g) {
                return e && a(g) ? e(g) : g
            }
        })
    }), (function (b, a) {
        b.exports = function (c) {
            return typeof c === "object" ? c !== null : typeof c === "function"
        }
    }), (function (d, c, e) {
        var f = e(28), b = e(30), a = e(33);
        d.exports = function (h, g) {
            var j = (b.Object || {})[h] || Object[h], k = {};
            k[h] = g(j);
            f(f.S + f.F * a(function () {
                j(1)
            }), "Object", k)
        }
    }), (function (e, d, g) {
        var f = g(29), c = g(30), b = g(31), a = "prototype";
        var h = function (t, l, j) {
            var k = t & h.F, n = t & h.G, r = t & h.S, m = t & h.P, q = t & h.B, v = t & h.W, p = n ? c : c[l] || (c[l] = {}), s = n ? f : r ? f[l] : (f[l] || {})[a], u, w, o;
            if (n) {
                j = l
            } for (u in j) {
                w = !k && s && u in s;
                if (w && u in p) {
                    continue
                } o = w ? s[u] : j[u];
                p[u] = n && typeof s[u] != "function" ? j[u] : q && w ? b(o, f) : v && s[u] == o ? (function (y) {
                    var x = function (z) {
                        return this instanceof y ? new y(z) : y(z)
                    };
                    x[a] = y[a];
                    return x
                })(o) : m && typeof o == "function" ? b(Function.call, o) : o;
                if (m) {
                    (p[a] || (p[a] = {}))[u] = o
                }
            }
        };
        h.F = 1;
        h.G = 2;
        h.S = 4;
        h.P = 8;
        h.B = 16;
        h.W = 32;
        e.exports = h
    }), (function (b, a) {
        var c = b.exports = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
        if (typeof __g == "number") {
            __g = c
        }
    }), (function (c, b) {
        var a = c.exports = { version: "1.2.6" };
        if (typeof __e == "number") {
            __e = a
        }
    }), (function (c, b, d) {
        var a = d(32);
        c.exports = function (e, g, f) {
            a(e);
            if (g === undefined) {
                return e
            } switch (f) {
                case 1: return function (h) {
                    return e.call(g, h)
                };
                case 2: return function (j, h) {
                    return e.call(g, j, h)
                };
                case 3: return function (j, h, k) {
                    return e.call(g, j, h, k)
                }
            }return function () {
                return e.apply(g, arguments)
            }
        }
    }), (function (b, a) {
        b.exports = function (c) {
            if (typeof c != "function") {
                throw TypeError(c + " is not a function!")
            } return c
        }
    }), (function (b, a) {
        b.exports = function (c) {
            try {
                return !!c()
            } catch (d) {
                return true
            }
        }
    }), (function (b, a) {
        (function (c) {
            a.__esModule = true;
            a["default"] = function (f) {
                var d = typeof c !== "undefined" ? c : window, e = d.Handlebars;
                f.noConflict = function () {
                    if (d.Handlebars === f) {
                        d.Handlebars = e
                    } return f
                }
            };
            b.exports = a["default"]
        }.call(a, (function () {
            return this
        }())))
    }), (function (c, a) {
        a.__esModule = true;
        var e = {
            helpers: {
                helperExpression: function d(g) {
                    return g.type === "SubExpression" || (g.type === "MustacheStatement" || g.type === "BlockStatement") && !!(g.params && g.params.length || g.hash)
                }, scopedId: function f(g) {
                    return (/^\.|this\b/.test(g.original))
                }, simpleId: function b(g) {
                    return g.parts.length === 1 && !e.helpers.scopedId(g) && !g.depth
                }
            }
        };
        a["default"] = e;
        c.exports = a["default"]
    }), (function (c, e, b) {
        var n = b(1)["default"];
        var g = b(3)["default"];
        e.__esModule = true;
        e.parse = d;
        var h = b(37);
        var j = n(h);
        var f = b(38);
        var m = n(f);
        var a = b(40);
        var l = g(a);
        var o = b(5);
        e.parser = j["default"];
        var k = {};
        o.extend(k, l);
        function d(p, q) {
            if (p.type === "Program") {
                return p
            } j["default"].yy = k;
            k.locInfo = function (s) {
                return new k.SourceLocation(q && q.srcName, s)
            };
            var r = new m["default"](q);
            return r.accept(j["default"].parse(p))
        }
    }), (function (c, b) {
        b.__esModule = true;
        var a = (function () {
            var k = {
                trace: function f() { }, yy: {}, symbols_: { error: 2, root: 3, program: 4, EOF: 5, program_repetition0: 6, statement: 7, mustache: 8, block: 9, rawBlock: 10, partial: 11, partialBlock: 12, content: 13, COMMENT: 14, CONTENT: 15, openRawBlock: 16, rawBlock_repetition_plus0: 17, END_RAW_BLOCK: 18, OPEN_RAW_BLOCK: 19, helperName: 20, openRawBlock_repetition0: 21, openRawBlock_option0: 22, CLOSE_RAW_BLOCK: 23, openBlock: 24, block_option0: 25, closeBlock: 26, openInverse: 27, block_option1: 28, OPEN_BLOCK: 29, openBlock_repetition0: 30, openBlock_option0: 31, openBlock_option1: 32, CLOSE: 33, OPEN_INVERSE: 34, openInverse_repetition0: 35, openInverse_option0: 36, openInverse_option1: 37, openInverseChain: 38, OPEN_INVERSE_CHAIN: 39, openInverseChain_repetition0: 40, openInverseChain_option0: 41, openInverseChain_option1: 42, inverseAndProgram: 43, INVERSE: 44, inverseChain: 45, inverseChain_option0: 46, OPEN_ENDBLOCK: 47, OPEN: 48, mustache_repetition0: 49, mustache_option0: 50, OPEN_UNESCAPED: 51, mustache_repetition1: 52, mustache_option1: 53, CLOSE_UNESCAPED: 54, OPEN_PARTIAL: 55, partialName: 56, partial_repetition0: 57, partial_option0: 58, openPartialBlock: 59, OPEN_PARTIAL_BLOCK: 60, openPartialBlock_repetition0: 61, openPartialBlock_option0: 62, param: 63, sexpr: 64, OPEN_SEXPR: 65, sexpr_repetition0: 66, sexpr_option0: 67, CLOSE_SEXPR: 68, hash: 69, hash_repetition_plus0: 70, hashSegment: 71, ID: 72, EQUALS: 73, blockParams: 74, OPEN_BLOCK_PARAMS: 75, blockParams_repetition_plus0: 76, CLOSE_BLOCK_PARAMS: 77, path: 78, dataName: 79, STRING: 80, NUMBER: 81, BOOLEAN: 82, UNDEFINED: 83, NULL: 84, DATA: 85, pathSegments: 86, SEP: 87, "$accept": 0, "$end": 1 }, terminals_: { 2: "error", 5: "EOF", 14: "COMMENT", 15: "CONTENT", 18: "END_RAW_BLOCK", 19: "OPEN_RAW_BLOCK", 23: "CLOSE_RAW_BLOCK", 29: "OPEN_BLOCK", 33: "CLOSE", 34: "OPEN_INVERSE", 39: "OPEN_INVERSE_CHAIN", 44: "INVERSE", 47: "OPEN_ENDBLOCK", 48: "OPEN", 51: "OPEN_UNESCAPED", 54: "CLOSE_UNESCAPED", 55: "OPEN_PARTIAL", 60: "OPEN_PARTIAL_BLOCK", 65: "OPEN_SEXPR", 68: "CLOSE_SEXPR", 72: "ID", 73: "EQUALS", 75: "OPEN_BLOCK_PARAMS", 77: "CLOSE_BLOCK_PARAMS", 80: "STRING", 81: "NUMBER", 82: "BOOLEAN", 83: "UNDEFINED", 84: "NULL", 85: "DATA", 87: "SEP" }, productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 1], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]], performAction: function e(q, r, l, s, t, u, n) {
                    var o = u.length - 1;
                    switch (t) {
                        case 1: return u[o - 1];
                            break;
                        case 2: this.$ = s.prepareProgram(u[o]);
                            break;
                        case 3: this.$ = u[o];
                            break;
                        case 4: this.$ = u[o];
                            break;
                        case 5: this.$ = u[o];
                            break;
                        case 6: this.$ = u[o];
                            break;
                        case 7: this.$ = u[o];
                            break;
                        case 8: this.$ = u[o];
                            break;
                        case 9: this.$ = { type: "CommentStatement", value: s.stripComment(u[o]), strip: s.stripFlags(u[o], u[o]), loc: s.locInfo(this._$) };
                            break;
                        case 10: this.$ = { type: "ContentStatement", original: u[o], value: u[o], loc: s.locInfo(this._$) };
                            break;
                        case 11: this.$ = s.prepareRawBlock(u[o - 2], u[o - 1], u[o], this._$);
                            break;
                        case 12: this.$ = { path: u[o - 3], params: u[o - 2], hash: u[o - 1] };
                            break;
                        case 13: this.$ = s.prepareBlock(u[o - 3], u[o - 2], u[o - 1], u[o], false, this._$);
                            break;
                        case 14: this.$ = s.prepareBlock(u[o - 3], u[o - 2], u[o - 1], u[o], true, this._$);
                            break;
                        case 15: this.$ = { open: u[o - 5], path: u[o - 4], params: u[o - 3], hash: u[o - 2], blockParams: u[o - 1], strip: s.stripFlags(u[o - 5], u[o]) };
                            break;
                        case 16: this.$ = { path: u[o - 4], params: u[o - 3], hash: u[o - 2], blockParams: u[o - 1], strip: s.stripFlags(u[o - 5], u[o]) };
                            break;
                        case 17: this.$ = { path: u[o - 4], params: u[o - 3], hash: u[o - 2], blockParams: u[o - 1], strip: s.stripFlags(u[o - 5], u[o]) };
                            break;
                        case 18: this.$ = { strip: s.stripFlags(u[o - 1], u[o - 1]), program: u[o] };
                            break;
                        case 19: var m = s.prepareBlock(u[o - 2], u[o - 1], u[o], u[o], false, this._$), p = s.prepareProgram([m], u[o - 1].loc);
                            p.chained = true;
                            this.$ = { strip: u[o - 2].strip, program: p, chain: true };
                            break;
                        case 20: this.$ = u[o];
                            break;
                        case 21: this.$ = { path: u[o - 1], strip: s.stripFlags(u[o - 2], u[o]) };
                            break;
                        case 22: this.$ = s.prepareMustache(u[o - 3], u[o - 2], u[o - 1], u[o - 4], s.stripFlags(u[o - 4], u[o]), this._$);
                            break;
                        case 23: this.$ = s.prepareMustache(u[o - 3], u[o - 2], u[o - 1], u[o - 4], s.stripFlags(u[o - 4], u[o]), this._$);
                            break;
                        case 24: this.$ = { type: "PartialStatement", name: u[o - 3], params: u[o - 2], hash: u[o - 1], indent: "", strip: s.stripFlags(u[o - 4], u[o]), loc: s.locInfo(this._$) };
                            break;
                        case 25: this.$ = s.preparePartialBlock(u[o - 2], u[o - 1], u[o], this._$);
                            break;
                        case 26: this.$ = { path: u[o - 3], params: u[o - 2], hash: u[o - 1], strip: s.stripFlags(u[o - 4], u[o]) };
                            break;
                        case 27: this.$ = u[o];
                            break;
                        case 28: this.$ = u[o];
                            break;
                        case 29: this.$ = { type: "SubExpression", path: u[o - 3], params: u[o - 2], hash: u[o - 1], loc: s.locInfo(this._$) };
                            break;
                        case 30: this.$ = { type: "Hash", pairs: u[o], loc: s.locInfo(this._$) };
                            break;
                        case 31: this.$ = { type: "HashPair", key: s.id(u[o - 2]), value: u[o], loc: s.locInfo(this._$) };
                            break;
                        case 32: this.$ = s.id(u[o - 1]);
                            break;
                        case 33: this.$ = u[o];
                            break;
                        case 34: this.$ = u[o];
                            break;
                        case 35: this.$ = { type: "StringLiteral", value: u[o], original: u[o], loc: s.locInfo(this._$) };
                            break;
                        case 36: this.$ = { type: "NumberLiteral", value: Number(u[o]), original: Number(u[o]), loc: s.locInfo(this._$) };
                            break;
                        case 37: this.$ = { type: "BooleanLiteral", value: u[o] === "true", original: u[o] === "true", loc: s.locInfo(this._$) };
                            break;
                        case 38: this.$ = { type: "UndefinedLiteral", original: undefined, value: undefined, loc: s.locInfo(this._$) };
                            break;
                        case 39: this.$ = { type: "NullLiteral", original: null, value: null, loc: s.locInfo(this._$) };
                            break;
                        case 40: this.$ = u[o];
                            break;
                        case 41: this.$ = u[o];
                            break;
                        case 42: this.$ = s.preparePath(true, u[o], this._$);
                            break;
                        case 43: this.$ = s.preparePath(false, u[o], this._$);
                            break;
                        case 44: u[o - 2].push({ part: s.id(u[o]), original: u[o], separator: u[o - 1] });
                            this.$ = u[o - 2];
                            break;
                        case 45: this.$ = [{ part: s.id(u[o]), original: u[o] }];
                            break;
                        case 46: this.$ = [];
                            break;
                        case 47: u[o - 1].push(u[o]);
                            break;
                        case 48: this.$ = [u[o]];
                            break;
                        case 49: u[o - 1].push(u[o]);
                            break;
                        case 50: this.$ = [];
                            break;
                        case 51: u[o - 1].push(u[o]);
                            break;
                        case 58: this.$ = [];
                            break;
                        case 59: u[o - 1].push(u[o]);
                            break;
                        case 64: this.$ = [];
                            break;
                        case 65: u[o - 1].push(u[o]);
                            break;
                        case 70: this.$ = [];
                            break;
                        case 71: u[o - 1].push(u[o]);
                            break;
                        case 78: this.$ = [];
                            break;
                        case 79: u[o - 1].push(u[o]);
                            break;
                        case 82: this.$ = [];
                            break;
                        case 83: u[o - 1].push(u[o]);
                            break;
                        case 86: this.$ = [];
                            break;
                        case 87: u[o - 1].push(u[o]);
                            break;
                        case 90: this.$ = [];
                            break;
                        case 91: u[o - 1].push(u[o]);
                            break;
                        case 94: this.$ = [];
                            break;
                        case 95: u[o - 1].push(u[o]);
                            break;
                        case 98: this.$ = [u[o]];
                            break;
                        case 99: u[o - 1].push(u[o]);
                            break;
                        case 100: this.$ = [u[o]];
                            break;
                        case 101: u[o - 1].push(u[o]);
                            break
                    }
                }, table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 13: 40, 15: [1, 20], 17: 39 }, { 20: 42, 56: 41, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 45, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 48, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 42, 56: 49, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 50, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 51] }, { 72: [1, 35], 86: 52 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 53, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 54, 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 55, 47: [2, 54] }, { 28: 60, 43: 61, 44: [1, 59], 47: [2, 56] }, { 13: 63, 15: [1, 20], 18: [1, 62] }, { 15: [2, 48], 18: [2, 48] }, { 33: [2, 86], 57: 64, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 65, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 66, 47: [1, 67] }, { 30: 68, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 69, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 70, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 71, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 75, 33: [2, 80], 50: 72, 63: 73, 64: 76, 65: [1, 44], 69: 74, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 80] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 51] }, { 20: 75, 53: 81, 54: [2, 84], 63: 82, 64: 76, 65: [1, 44], 69: 83, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 84, 47: [1, 67] }, { 47: [2, 55] }, { 4: 85, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 86, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 87, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 88, 47: [1, 67] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 75, 33: [2, 88], 58: 89, 63: 90, 64: 76, 65: [1, 44], 69: 91, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 92, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 93, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 31: 94, 33: [2, 60], 63: 95, 64: 76, 65: [1, 44], 69: 96, 70: 77, 71: 78, 72: [1, 79], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 66], 36: 97, 63: 98, 64: 76, 65: [1, 44], 69: 99, 70: 77, 71: 78, 72: [1, 79], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 22: 100, 23: [2, 52], 63: 101, 64: 76, 65: [1, 44], 69: 102, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 92], 62: 103, 63: 104, 64: 76, 65: [1, 44], 69: 105, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 106] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 107, 72: [1, 108], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 109], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 110] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 112, 46: 111, 47: [2, 76] }, { 33: [2, 70], 40: 113, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 114] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 75, 63: 116, 64: 76, 65: [1, 44], 67: 115, 68: [2, 96], 69: 117, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 118] }, { 32: 119, 33: [2, 62], 74: 120, 75: [1, 121] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 122, 74: 123, 75: [1, 121] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 124] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 125] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 109] }, { 20: 75, 63: 126, 64: 76, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 75, 33: [2, 72], 41: 127, 63: 128, 64: 76, 65: [1, 44], 69: 129, 70: 77, 71: 78, 72: [1, 79], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 130] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 131] }, { 33: [2, 63] }, { 72: [1, 133], 76: 132 }, { 33: [1, 134] }, { 33: [2, 69] }, { 15: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 135, 74: 136, 75: [1, 121] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 138], 77: [1, 137] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 139] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }], defaultActions: { 4: [2, 1], 55: [2, 55], 57: [2, 20], 61: [2, 57], 74: [2, 81], 83: [2, 85], 87: [2, 18], 91: [2, 89], 102: [2, 53], 105: [2, 93], 111: [2, 19], 112: [2, 77], 117: [2, 97], 120: [2, 63], 123: [2, 69], 124: [2, 12], 136: [2, 75], 137: [2, 32] }, parseError: function g(m, l) {
                    throw new Error(m)
                }, parse: function j(w) {
                    var D = this, t = [0], M = [null], y = [], N = this.table, m = "", x = 0, K = 0, o = 0, v = 2, A = 1;
                    this.lexer.setInput(w);
                    this.lexer.yy = this.yy;
                    this.yy.lexer = this.lexer;
                    this.yy.parser = this;
                    if (typeof this.lexer.yylloc == "undefined") {
                        this.lexer.yylloc = {}
                    } var n = this.lexer.yylloc;
                    y.push(n);
                    var q = this.lexer.options && this.lexer.options.ranges;
                    if (typeof this.yy.parseError === "function") {
                        this.parseError = this.yy.parseError
                    } function C(p) {
                        t.length = t.length - 2 * p;
                        M.length = M.length - p;
                        y.length = y.length - p
                    } function B() {
                        var p;
                        p = D.lexer.lex() || 1;
                        if (typeof p !== "number") {
                            p = D.symbols_[p] || p
                        } return p
                    } var J, F, s, I, O, z, H = {}, E, L, l, u;
                    while (true) {
                        s = t[t.length - 1];
                        if (this.defaultActions[s]) {
                            I = this.defaultActions[s]
                        } else {
                            if (J === null || typeof J == "undefined") {
                                J = B()
                            } I = N[s] && N[s][J]
                        } if (typeof I === "undefined" || !I.length || !I[0]) {
                            var G = "";
                            if (!o) {
                                u = [];
                                for (E in N[s]) {
                                    if (this.terminals_[E] && E > 2) {
                                        u.push("'" + this.terminals_[E] + "'")
                                    }
                                } if (this.lexer.showPosition) {
                                    G = "Parse error on line " + (x + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + u.join(", ") + ", got '" + (this.terminals_[J] || J) + "'"
                                } else {
                                    G = "Parse error on line " + (x + 1) + ": Unexpected " + (J == 1 ? "end of input" : "'" + (this.terminals_[J] || J) + "'")
                                } this.parseError(G, { text: this.lexer.match, token: this.terminals_[J] || J, line: this.lexer.yylineno, loc: n, expected: u })
                            }
                        } if (I[0] instanceof Array && I.length > 1) {
                            throw new Error("Parse Error: multiple actions possible at state: " + s + ", token: " + J)
                        } switch (I[0]) {
                            case 1: t.push(J);
                                M.push(this.lexer.yytext);
                                y.push(this.lexer.yylloc);
                                t.push(I[1]);
                                J = null;
                                if (!F) {
                                    K = this.lexer.yyleng;
                                    m = this.lexer.yytext;
                                    x = this.lexer.yylineno;
                                    n = this.lexer.yylloc;
                                    if (o > 0) {
                                        o--
                                    }
                                } else {
                                    J = F;
                                    F = null
                                } break;
                            case 2: L = this.productions_[I[1]][1];
                                H.$ = M[M.length - L];
                                H._$ = { first_line: y[y.length - (L || 1)].first_line, last_line: y[y.length - 1].last_line, first_column: y[y.length - (L || 1)].first_column, last_column: y[y.length - 1].last_column };
                                if (q) {
                                    H._$.range = [y[y.length - (L || 1)].range[0], y[y.length - 1].range[1]]
                                } z = this.performAction.call(H, m, K, x, this.yy, I[1], M, y);
                                if (typeof z !== "undefined") {
                                    return z
                                } if (L) {
                                    t = t.slice(0, -1 * L * 2);
                                    M = M.slice(0, -1 * L);
                                    y = y.slice(0, -1 * L)
                                } t.push(this.productions_[I[1]][0]);
                                M.push(H.$);
                                y.push(H._$);
                                l = N[t[t.length - 2]][t[t.length - 1]];
                                t.push(l);
                                break;
                            case 3: return true
                        }
                    } return true
                }
            };
            var d = (function () {
                var n = {
                    EOF: 1, parseError: function p(D, C) {
                        if (this.yy.parser) {
                            this.yy.parser.parseError(D, C)
                        } else {
                            throw new Error(D)
                        }
                    }, setInput: function o(C) {
                        this._input = C;
                        this._more = this._less = this.done = false;
                        this.yylineno = this.yyleng = 0;
                        this.yytext = this.matched = this.match = "";
                        this.conditionStack = ["INITIAL"];
                        this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };
                        if (this.options.ranges) {
                            this.yylloc.range = [0, 0]
                        } this.offset = 0;
                        return this
                    }, input: function y() {
                        var D = this._input[0];
                        this.yytext += D;
                        this.yyleng++;
                        this.offset++;
                        this.match += D;
                        this.matched += D;
                        var C = D.match(/(?:\r\n?|\n).*/g);
                        if (C) {
                            this.yylineno++;
                            this.yylloc.last_line++
                        } else {
                            this.yylloc.last_column++
                        } if (this.options.ranges) {
                            this.yylloc.range[1]++
                        } this._input = this._input.slice(1);
                        return D
                    }, unput: function w(E) {
                        var C = E.length;
                        var D = E.split(/(?:\r\n?|\n)/g);
                        this._input = E + this._input;
                        this.yytext = this.yytext.substr(0, this.yytext.length - C - 1);
                        this.offset -= C;
                        var G = this.match.split(/(?:\r\n?|\n)/g);
                        this.match = this.match.substr(0, this.match.length - 1);
                        this.matched = this.matched.substr(0, this.matched.length - 1);
                        if (D.length - 1) {
                            this.yylineno -= D.length - 1
                        } var F = this.yylloc.range;
                        this.yylloc = { first_line: this.yylloc.first_line, last_line: this.yylineno + 1, first_column: this.yylloc.first_column, last_column: D ? (D.length === G.length ? this.yylloc.first_column : 0) + G[G.length - D.length].length - D[0].length : this.yylloc.first_column - C };
                        if (this.options.ranges) {
                            this.yylloc.range = [F[0], F[0] + this.yyleng - C]
                        } return this
                    }, more: function u() {
                        this._more = true;
                        return this
                    }, less: function z(C) {
                        this.unput(this.match.slice(C))
                    }, pastInput: function s() {
                        var C = this.matched.substr(0, this.matched.length - this.match.length);
                        return (C.length > 20 ? "..." : "") + C.substr(-20).replace(/\n/g, "")
                    }, upcomingInput: function A() {
                        var C = this.match;
                        if (C.length < 20) {
                            C += this._input.substr(0, 20 - C.length)
                        } return (C.substr(0, 20) + (C.length > 20 ? "..." : "")).replace(/\n/g, "")
                    }, showPosition: function v() {
                        var C = this.pastInput();
                        var D = new Array(C.length + 1).join("-");
                        return C + this.upcomingInput() + "\n" + D + "^"
                    }, next: function r() {
                        if (this.done) {
                            return this.EOF
                        } if (!this._input) {
                            this.done = true
                        } var I, G, D, F, E, C;
                        if (!this._more) {
                            this.yytext = "";
                            this.match = ""
                        } var J = this._currentRules();
                        for (var H = 0;
                            H < J.length;
                            H++) {
                                D = this._input.match(this.rules[J[H]]);
                            if (D && (!G || D[0].length > G[0].length)) {
                                G = D;
                                F = H;
                                if (!this.options.flex) {
                                    break
                                }
                            }
                        } if (G) {
                            C = G[0].match(/(?:\r\n?|\n).*/g);
                            if (C) {
                                this.yylineno += C.length
                            } this.yylloc = { first_line: this.yylloc.last_line, last_line: this.yylineno + 1, first_column: this.yylloc.last_column, last_column: C ? C[C.length - 1].length - C[C.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + G[0].length };
                            this.yytext += G[0];
                            this.match += G[0];
                            this.matches = G;
                            this.yyleng = this.yytext.length;
                            if (this.options.ranges) {
                                this.yylloc.range = [this.offset, this.offset += this.yyleng]
                            } this._more = false;
                            this._input = this._input.slice(G[0].length);
                            this.matched += G[0];
                            I = this.performAction.call(this, this.yy, this, J[F], this.conditionStack[this.conditionStack.length - 1]);
                            if (this.done && this._input) {
                                this.done = false
                            } if (I) {
                                return I
                            } else {
                                return
                            }
                        } if (this._input === "") {
                            return this.EOF
                        } else {
                            return this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), { text: "", token: null, line: this.yylineno })
                        }
                    }, lex: function l() {
                        var C = this.next();
                        if (typeof C !== "undefined") {
                            return C
                        } else {
                            return this.lex()
                        }
                    }, begin: function m(C) {
                        this.conditionStack.push(C)
                    }, popState: function q() {
                        return this.conditionStack.pop()
                    }, _currentRules: function B() {
                        return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules
                    }, topState: function t() {
                        return this.conditionStack[this.conditionStack.length - 2]
                    }, pushState: function m(C) {
                        this.begin(C)
                    }
                };
                n.options = {};
                n.performAction = function x(H, D, G, C) {
                    function E(J, I) {
                        return D.yytext = D.yytext.substr(J, D.yyleng - I)
                    } var F = C;
                    switch (G) {
                        case 0: if (D.yytext.slice(-2) === "\\\\") {
                            E(0, 1);
                            this.begin("mu")
                        } else {
                            if (D.yytext.slice(-1) === "\\") {
                                E(0, 1);
                                this.begin("emu")
                            } else {
                                this.begin("mu")
                            }
                        } if (D.yytext) {
                            return 15
                        } break;
                        case 1: return 15;
                            break;
                        case 2: this.popState();
                            return 15;
                            break;
                        case 3: this.begin("raw");
                            return 15;
                            break;
                        case 4: this.popState();
                            if (this.conditionStack[this.conditionStack.length - 1] === "raw") {
                                return 15
                            } else {
                                D.yytext = D.yytext.substr(5, D.yyleng - 9);
                                return "END_RAW_BLOCK"
                            } break;
                        case 5: return 15;
                            break;
                        case 6: this.popState();
                            return 14;
                            break;
                        case 7: return 65;
                            break;
                        case 8: return 68;
                            break;
                        case 9: return 19;
                            break;
                        case 10: this.popState();
                            this.begin("raw");
                            return 23;
                            break;
                        case 11: return 55;
                            break;
                        case 12: return 60;
                            break;
                        case 13: return 29;
                            break;
                        case 14: return 47;
                            break;
                        case 15: this.popState();
                            return 44;
                            break;
                        case 16: this.popState();
                            return 44;
                            break;
                        case 17: return 34;
                            break;
                        case 18: return 39;
                            break;
                        case 19: return 51;
                            break;
                        case 20: return 48;
                            break;
                        case 21: this.unput(D.yytext);
                            this.popState();
                            this.begin("com");
                            break;
                        case 22: this.popState();
                            return 14;
                            break;
                        case 23: return 48;
                            break;
                        case 24: return 73;
                            break;
                        case 25: return 72;
                            break;
                        case 26: return 72;
                            break;
                        case 27: return 87;
                            break;
                        case 28: break;
                        case 29: this.popState();
                            return 54;
                            break;
                        case 30: this.popState();
                            return 33;
                            break;
                        case 31: D.yytext = E(1, 2).replace(/\\"/g, '"');
                            return 80;
                            break;
                        case 32: D.yytext = E(1, 2).replace(/\\'/g, "'");
                            return 80;
                            break;
                        case 33: return 85;
                            break;
                        case 34: return 82;
                            break;
                        case 35: return 82;
                            break;
                        case 36: return 83;
                            break;
                        case 37: return 84;
                            break;
                        case 38: return 81;
                            break;
                        case 39: return 75;
                            break;
                        case 40: return 77;
                            break;
                        case 41: return 72;
                            break;
                        case 42: D.yytext = D.yytext.replace(/\\([\\\]])/g, "$1");
                            return 72;
                            break;
                        case 43: return "INVALID";
                            break;
                        case 44: return 5;
                            break
                    }
                };
                n.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{(?=[^\/]))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]*?(?=(\{\{\{\{)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#>)/, /^(?:\{\{(~)?#\*?)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?\*?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[(\\\]|[^\]])*\])/, /^(?:.)/, /^(?:$)/];
                n.conditions = { mu: { rules: [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], inclusive: false }, emu: { rules: [2], inclusive: false }, com: { rules: [6], inclusive: false }, raw: { rules: [3, 4, 5], inclusive: false }, INITIAL: { rules: [0, 1, 44], inclusive: true } };
                return n
            })();
            k.lexer = d;
            function h() {
                this.yy = {}
            } h.prototype = k;
            k.Parser = h;
            return new h()
        })();
        b["default"] = a;
        c.exports = b["default"]
    }), (function (b, c, a) {
        var k = a(1)["default"];
        c.__esModule = true;
        var e = a(39);
        var l = k(e);
        function d() {
            var m = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
            this.options = m
        } d.prototype = new l["default"]();
        d.prototype.Program = function (t) {
            var v = !this.options.ignoreStandalone;
            var p = !this.isRootSeen;
            this.isRootSeen = true;
            var u = t.body;
            for (var s = 0, q = u.length;
                s < q;
                s++) {
                    var w = u[s], m = this.accept(w);
                if (!m) {
                    continue
                } var o = f(u, s, p), r = h(u, s, p), n = m.openStandalone && o, y = m.closeStandalone && r, x = m.inlineStandalone && o && r;
                if (m.close) {
                    g(u, s, true)
                } if (m.open) {
                    j(u, s, true)
                } if (v && x) {
                    g(u, s);
                    if (j(u, s)) {
                        if (w.type === "PartialStatement") {
                            w.indent = /([ \t]+$)/.exec(u[s - 1].original)[1]
                        }
                    }
                } if (v && n) {
                    g((w.program || w.inverse).body);
                    j(u, s)
                } if (v && y) {
                    g(u, s);
                    j((w.inverse || w.program).body)
                }
            } return t
        };
        d.prototype.BlockStatement = d.prototype.DecoratorBlock = d.prototype.PartialBlockStatement = function (s) {
            this.accept(s.program);
            this.accept(s.inverse);
            var o = s.program || s.inverse, m = s.program && s.inverse, n = m, r = m;
            if (m && m.chained) {
                n = m.body[0].program;
                while (r.chained) {
                    r = r.body[r.body.length - 1].program
                }
            } var p = { open: s.openStrip.open, close: s.closeStrip.close, openStandalone: h(o.body), closeStandalone: f((n || o).body) };
            if (s.openStrip.close) {
                g(o.body, null, true)
            } if (m) {
                var q = s.inverseStrip;
                if (q.open) {
                    j(o.body, null, true)
                } if (q.close) {
                    g(n.body, null, true)
                } if (s.closeStrip.open) {
                    j(r.body, null, true)
                } if (!this.options.ignoreStandalone && f(o.body) && h(n.body)) {
                    j(o.body);
                    g(n.body)
                }
            } else {
                if (s.closeStrip.open) {
                    j(o.body, null, true)
                }
            } return p
        };
        d.prototype.Decorator = d.prototype.MustacheStatement = function (m) {
            return m.strip
        };
        d.prototype.PartialStatement = d.prototype.CommentStatement = function (n) {
            var m = n.strip || {};
            return { inlineStandalone: true, open: m.open, close: m.close }
        };
        function f(m, o, n) {
            if (o === undefined) {
                o = m.length
            } var q = m[o - 1], p = m[o - 2];
            if (!q) {
                return n
            } if (q.type === "ContentStatement") {
                return (p || !n ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(q.original)
            }
        } function h(m, o, n) {
            if (o === undefined) {
                o = -1
            } var q = m[o + 1], p = m[o + 2];
            if (!q) {
                return n
            } if (q.type === "ContentStatement") {
                return (p || !n ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(q.original)
            }
        } function g(n, p, m) {
            var q = n[p == null ? 0 : p + 1];
            if (!q || q.type !== "ContentStatement" || !m && q.rightStripped) {
                return
            } var o = q.value;
            q.value = q.value.replace(m ? /^\s+/ : /^[ \t]*\r?\n?/, "");
            q.rightStripped = q.value !== o
        } function j(n, p, m) {
            var q = n[p == null ? n.length - 1 : p - 1];
            if (!q || q.type !== "ContentStatement" || !m && q.leftStripped) {
                return
            } var o = q.value;
            q.value = q.value.replace(m ? /\s+$/ : /[ \t]+$/, "");
            q.leftStripped = q.value !== o;
            return q.leftStripped
        } c["default"] = d;
        b.exports = c["default"]
    }), (function (c, z, e) {
        var a = e(1)["default"];
        z.__esModule = true;
        var u = e(6);
        var d = a(u);
        function y() {
            this.parents = []
        } y.prototype = {
            constructor: y, mutating: false, acceptKey: function r(C, B) {
                var D = this.accept(C[B]);
                if (this.mutating) {
                    if (D && !y.prototype[D.type]) {
                        throw new d["default"]('Unexpected node type "' + D.type + '" found when accepting ' + B + " on " + C.type)
                    } C[B] = D
                }
            }, acceptRequired: function v(C, B) {
                this.acceptKey(C, B);
                if (!C[B]) {
                    throw new d["default"](C.type + " requires " + B)
                }
            }, acceptArray: function w(D) {
                for (var C = 0, B = D.length;
                    C < B;
                    C++) {
                        this.acceptKey(D, C);
                    if (!D[C]) {
                        D.splice(C, 1);
                        C--;
                        B--
                    }
                }
            }, accept: function f(C) {
                if (!C) {
                    return
                } if (!this[C.type]) {
                    throw new d["default"]("Unknown type: " + C.type, C)
                } if (this.current) {
                    this.parents.unshift(this.current)
                } this.current = C;
                var B = this[C.type](C);
                this.current = this.parents.shift();
                if (!this.mutating || B) {
                    return B
                } else {
                    if (B !== false) {
                        return C
                    }
                }
            }, Program: function x(B) {
                this.acceptArray(B.body)
            }, MustacheStatement: o, Decorator: o, BlockStatement: h, DecoratorBlock: h, PartialStatement: A, PartialBlockStatement: function b(B) {
                A.call(this, B);
                this.acceptKey(B, "program")
            }, ContentStatement: function t() { }, CommentStatement: function n() { }, SubExpression: o, PathExpression: function g() { }, StringLiteral: function q() { }, NumberLiteral: function s() { }, BooleanLiteral: function m() { }, UndefinedLiteral: function p() { }, NullLiteral: function l() { }, Hash: function j(B) {
                this.acceptArray(B.pairs)
            }, HashPair: function k(B) {
                this.acceptRequired(B, "value")
            }
        };
        function o(B) {
            this.acceptRequired(B, "path");
            this.acceptArray(B.params);
            this.acceptKey(B, "hash")
        } function h(B) {
            o.call(this, B);
            this.acceptKey(B, "program");
            this.acceptKey(B, "inverse")
        } function A(B) {
            this.acceptRequired(B, "name");
            this.acceptArray(B.params);
            this.acceptKey(B, "hash")
        } z["default"] = y;
        c.exports = z["default"]
    }), (function (d, h, c) {
        var r = c(1)["default"];
        h.__esModule = true;
        h.SourceLocation = m;
        h.id = b;
        h.stripFlags = g;
        h.stripComment = p;
        h.preparePath = f;
        h.prepareMustache = l;
        h.prepareRawBlock = o;
        h.prepareBlock = q;
        h.prepareProgram = k;
        h.preparePartialBlock = n;
        var e = c(6);
        var a = r(e);
        function j(s, u) {
            u = u.path ? u.path.original : u;
            if (s.path.original !== u) {
                var t = { loc: s.path.loc };
                throw new a["default"](s.path.original + " doesn't match " + u, t)
            }
        } function m(t, s) {
            this.source = t;
            this.start = { line: s.first_line, column: s.first_column };
            this.end = { line: s.last_line, column: s.last_column }
        } function b(s) {
            if (/^\[.*\]$/.test(s)) {
                return s.substr(1, s.length - 2)
            } else {
                return s
            }
        } function g(s, t) {
            return { open: s.charAt(2) === "~", close: t.charAt(t.length - 3) === "~" }
        } function p(s) {
            return s.replace(/^\{\{~?\!-?-?/, "").replace(/-?-?~?\}\}$/, "")
        } function f(z, x, B) {
            B = this.locInfo(B);
            var v = z ? "@" : "", C = [], y = 0, u = "";
            for (var A = 0, w = x.length;
                A < w;
                A++) {
                    var t = x[A].part, s = x[A].original !== t;
                v += (x[A].separator || "") + t;
                if (!s && (t === ".." || t === "." || t === "this")) {
                    if (C.length > 0) {
                        throw new a["default"]("Invalid path: " + v, { loc: B })
                    } else {
                        if (t === "..") {
                            y++;
                            u += "../"
                        }
                    }
                } else {
                    C.push(t)
                }
            } return { type: "PathExpression", data: z, depth: y, parts: C, original: v, loc: B }
        } function l(A, u, w, x, t, z) {
            var y = x.charAt(3) || x.charAt(2), s = y !== "{" && y !== "&";
            var v = /\*/.test(x);
            return { type: v ? "Decorator" : "MustacheStatement", path: A, params: u, hash: w, escaped: s, strip: t, loc: this.locInfo(z) }
        } function o(s, v, w, u) {
            j(s, w);
            u = this.locInfo(u);
            var t = { type: "Program", body: v, strip: {}, loc: u };
            return { type: "BlockStatement", path: s.path, params: s.params, hash: s.hash, program: t, openStrip: {}, inverseStrip: {}, closeStrip: {}, loc: u }
        } function q(x, w, y, A, t, z) {
            if (A && A.path) {
                j(x, A)
            } var u = /\*/.test(x.open);
            w.blockParams = x.blockParams;
            var v = undefined, s = undefined;
            if (y) {
                if (u) {
                    throw new a["default"]("Unexpected inverse block on decorator", y)
                } if (y.chain) {
                    y.program.body[0].closeStrip = A.strip
                } s = y.strip;
                v = y.program
            } if (t) {
                t = v;
                v = w;
                w = t
            } return { type: u ? "DecoratorBlock" : "BlockStatement", path: x.path, params: x.params, hash: x.hash, program: w, inverse: v, openStrip: x.strip, inverseStrip: s, closeStrip: A && A.strip, loc: this.locInfo(z) }
        } function k(s, v) {
            if (!v && s.length) {
                var u = s[0].loc, t = s[s.length - 1].loc;
                if (u && t) {
                    v = { source: u.source, start: { line: u.start.line, column: u.start.column }, end: { line: t.end.line, column: t.end.column } }
                }
            } return { type: "Program", body: s, strip: {}, loc: v }
        } function n(t, s, v, u) {
            j(t, v);
            return { type: "PartialBlockStatement", name: t.path, params: t.params, hash: t.hash, program: s, openStrip: t.strip, closeStrip: v && v.strip, loc: this.locInfo(u) }
        }
    }), (function (d, K, k) {
        var T = k(1)["default"];
        K.__esModule = true;
        K.Compiler = y;
        K.precompile = S;
        K.compile = l;
        var R = k(6);
        var u = T(R);
        var b = k(5);
        var a = k(35);
        var e = T(a);
        var q = [].slice;
        function y() { } y.prototype = {
            compiler: y, equals: function x(V) {
                var U = this.opcodes.length;
                if (V.opcodes.length !== U) {
                    return false
                } for (var X = 0;
                    X < U;
                    X++) {
                        var Y = this.opcodes[X], W = V.opcodes[X];
                    if (Y.opcode !== W.opcode || !w(Y.args, W.args)) {
                        return false
                    }
                } U = this.children.length;
                for (var X = 0;
                    X < U;
                    X++) {
                        if (!this.children[X].equals(V.children[X])) {
                            return false
                        }
                } return true
            }, guid: 0, compile: function l(V, W) {
                this.sourceNode = [];
                this.opcodes = [];
                this.children = [];
                this.options = W;
                this.stringParams = W.stringParams;
                this.trackIds = W.trackIds;
                W.blockParams = W.blockParams || [];
                var X = W.knownHelpers;
                W.knownHelpers = { helperMissing: true, blockHelperMissing: true, each: true, "if": true, unless: true, "with": true, log: true, lookup: true };
                if (X) {
                    for (var U in X) {
                        if (U in X) {
                            this.options.knownHelpers[U] = X[U]
                        }
                    }
                } return this.accept(V)
            }, compileProgram: function p(V) {
                var X = new this.compiler(), U = X.compile(V, this.options), W = this.guid++;
                this.usePartial = this.usePartial || U.usePartial;
                this.children[W] = U;
                this.useDepths = this.useDepths || U.useDepths;
                return W
            }, accept: function f(V) {
                if (!this[V.type]) {
                    throw new u["default"]("Unknown type: " + V.type, V)
                } this.sourceNode.unshift(V);
                var U = this[V.type](V);
                this.sourceNode.shift();
                return U
            }, Program: function Q(V) {
                this.options.blockParams.unshift(V.blockParams);
                var U = V.body, X = U.length;
                for (var W = 0;
                    W < X;
                    W++) {
                        this.accept(U[W])
                } this.options.blockParams.shift();
                this.isSimple = X === 1;
                this.blockParams = V.blockParams ? V.blockParams.length : 0;
                return this
            }, BlockStatement: function P(X) {
                g(X);
                var V = X.program, U = X.inverse;
                V = V && this.compileProgram(V);
                U = U && this.compileProgram(U);
                var W = this.classifySexpr(X);
                if (W === "helper") {
                    this.helperSexpr(X, V, U)
                } else {
                    if (W === "simple") {
                        this.simpleSexpr(X);
                        this.opcode("pushProgram", V);
                        this.opcode("pushProgram", U);
                        this.opcode("emptyHash");
                        this.opcode("blockValue", X.path.original)
                    } else {
                        this.ambiguousSexpr(X, V, U);
                        this.opcode("pushProgram", V);
                        this.opcode("pushProgram", U);
                        this.opcode("emptyHash");
                        this.opcode("ambiguousBlockValue")
                    }
                } this.opcode("append")
            }, DecoratorBlock: function s(V) {
                var U = V.program && this.compileProgram(V.program);
                var X = this.setupFullMustacheParams(V, U, undefined), W = V.path;
                this.useDecorators = true;
                this.opcode("registerDecorator", X.length, W.original)
            }, PartialStatement: function L(X) {
                this.usePartial = true;
                var W = X.program;
                if (W) {
                    W = this.compileProgram(X.program)
                } var Z = X.params;
                if (Z.length > 1) {
                    throw new u["default"]("Unsupported number of partial arguments: " + Z.length, X)
                } else {
                    if (!Z.length) {
                        if (this.options.explicitPartialContext) {
                            this.opcode("pushLiteral", "undefined")
                        } else {
                            Z.push({ type: "PathExpression", parts: [], depth: 0 })
                        }
                    }
                } var Y = X.name.original, V = X.name.type === "SubExpression";
                if (V) {
                    this.accept(X.name)
                } this.setupFullMustacheParams(X, W, undefined, true);
                var U = X.indent || "";
                if (this.options.preventIndent && U) {
                    this.opcode("appendContent", U);
                    U = ""
                } this.opcode("invokePartial", V, Y, U);
                this.opcode("append")
            }, PartialBlockStatement: function H(U) {
                this.PartialStatement(U)
            }, MustacheStatement: function A(U) {
                this.SubExpression(U);
                if (U.escaped && !this.options.noEscape) {
                    this.opcode("appendEscaped")
                } else {
                    this.opcode("append")
                }
            }, Decorator: function h(U) {
                this.DecoratorBlock(U)
            }, ContentStatement: function j(U) {
                if (U.value) {
                    this.opcode("appendContent", U.value)
                }
            }, CommentStatement: function z() { }, SubExpression: function I(V) {
                g(V);
                var U = this.classifySexpr(V);
                if (U === "simple") {
                    this.simpleSexpr(V)
                } else {
                    if (U === "helper") {
                        this.helperSexpr(V)
                    } else {
                        this.ambiguousSexpr(V)
                    }
                }
            }, ambiguousSexpr: function v(Y, W, V) {
                var Z = Y.path, X = Z.parts[0], U = W != null || V != null;
                this.opcode("getContext", Z.depth);
                this.opcode("pushProgram", W);
                this.opcode("pushProgram", V);
                Z.strict = true;
                this.accept(Z);
                this.opcode("invokeAmbiguous", X, U)
            }, simpleSexpr: function F(U) {
                var V = U.path;
                V.strict = true;
                this.accept(V);
                this.opcode("resolvePossibleLambda")
            }, helperSexpr: function r(X, V, U) {
                var Z = this.setupFullMustacheParams(X, V, U), Y = X.path, W = Y.parts[0];
                if (this.options.knownHelpers[W]) {
                    this.opcode("invokeKnownHelper", Z.length, W)
                } else {
                    if (this.options.knownHelpersOnly) {
                        throw new u["default"]("You specified knownHelpersOnly, but used the unknown helper " + W, X)
                    } else {
                        Y.strict = true;
                        Y.falsy = true;
                        this.accept(Y);
                        this.opcode("invokeHelper", Z.length, Y.original, e["default"].helpers.simpleId(Y))
                    }
                }
            }, PathExpression: function c(V) {
                this.addDepth(V.depth);
                this.opcode("getContext", V.depth);
                var U = V.parts[0], X = e["default"].helpers.scopedId(V), W = !V.depth && !X && this.blockParamIndex(U);
                if (W) {
                    this.opcode("lookupBlockParam", W, V.parts)
                } else {
                    if (!U) {
                        this.opcode("pushContext")
                    } else {
                        if (V.data) {
                            this.options.data = true;
                            this.opcode("lookupData", V.depth, V.parts, V.strict)
                        } else {
                            this.opcode("lookupOnContext", V.parts, V.falsy, V.strict, X)
                        }
                    }
                }
            }, StringLiteral: function m(U) {
                this.opcode("pushString", U.value)
            }, NumberLiteral: function D(U) {
                this.opcode("pushLiteral", U.value)
            }, BooleanLiteral: function N(U) {
                this.opcode("pushLiteral", U.value)
            }, UndefinedLiteral: function n() {
                this.opcode("pushLiteral", "undefined")
            }, NullLiteral: function O() {
                this.opcode("pushLiteral", "null")
            }, Hash: function C(X) {
                var W = X.pairs, V = 0, U = W.length;
                this.opcode("pushHash");
                for (;
                    V < U;
                    V++) {
                        this.pushParam(W[V].value)
                } while (V--) {
                    this.opcode("assignToHash", W[V].key)
                } this.opcode("popHash")
            }, opcode: function E(U) {
                this.opcodes.push({ opcode: U, args: q.call(arguments, 1), loc: this.sourceNode[0].loc })
            }, addDepth: function t(U) {
                if (!U) {
                    return
                } this.useDepths = true
            }, classifySexpr: function J(X) {
                var Y = e["default"].helpers.simpleId(X.path);
                var Z = Y && !!this.blockParamIndex(X.path.parts[0]);
                var W = !Z && e["default"].helpers.helperExpression(X);
                var aa = !Z && (W || Y);
                if (aa && !W) {
                    var U = X.path.parts[0], V = this.options;
                    if (V.knownHelpers[U]) {
                        W = true
                    } else {
                        if (V.knownHelpersOnly) {
                            aa = false
                        }
                    }
                } if (W) {
                    return "helper"
                } else {
                    if (aa) {
                        return "ambiguous"
                    } else {
                        return "simple"
                    }
                }
            }, pushParams: function M(W) {
                for (var V = 0, U = W.length;
                    V < U;
                    V++) {
                        this.pushParam(W[V])
                }
            }, pushParam: function G(X) {
                var W = X.value != null ? X.value : X.original || "";
                if (this.stringParams) {
                    if (W.replace) {
                        W = W.replace(/^(\.?\.\/)*/g, "").replace(/\//g, ".")
                    } if (X.depth) {
                        this.addDepth(X.depth)
                    } this.opcode("getContext", X.depth || 0);
                    this.opcode("pushStringParam", W, X.type);
                    if (X.type === "SubExpression") {
                        this.accept(X)
                    }
                } else {
                    if (this.trackIds) {
                        var V = undefined;
                        if (X.parts && !e["default"].helpers.scopedId(X) && !X.depth) {
                            V = this.blockParamIndex(X.parts[0])
                        } if (V) {
                            var U = X.parts.slice(1).join(".");
                            this.opcode("pushId", "BlockParam", V, U)
                        } else {
                            W = X.original || W;
                            if (W.replace) {
                                W = W.replace(/^this(?:\.|$)/, "").replace(/^\.\//, "").replace(/^\.$/, "")
                            } this.opcode("pushId", X.type, W)
                        }
                    } this.accept(X)
                }
            }, setupFullMustacheParams: function B(X, V, U, W) {
                var Y = X.params;
                this.pushParams(Y);
                this.opcode("pushProgram", V);
                this.opcode("pushProgram", U);
                if (X.hash) {
                    this.accept(X.hash)
                } else {
                    this.opcode("emptyHash", W)
                } return Y
            }, blockParamIndex: function o(V) {
                for (var Y = 0, U = this.options.blockParams.length;
                    Y < U;
                    Y++) {
                        var W = this.options.blockParams[Y], X = W && b.indexOf(W, V);
                    if (W && X >= 0) {
                        return [Y, X]
                    }
                }
            }
        };
        function S(W, X, Y) {
            if (W == null || typeof W !== "string" && W.type !== "Program") {
                throw new u["default"]("You must pass a string or Handlebars AST to Handlebars.precompile. You passed " + W)
            } X = X || {};
            if (!("data" in X)) {
                X.data = true
            } if (X.compat) {
                X.useDepths = true
            } var V = Y.parse(W, X), U = new Y.Compiler().compile(V, X);
            return new Y.JavaScriptCompiler().compile(U, X)
        } function l(U, W, X) {
            if (W === undefined) {
                W = {}
            } if (U == null || typeof U !== "string" && U.type !== "Program") {
                throw new u["default"]("You must pass a string or Handlebars AST to Handlebars.compile. You passed " + U)
            } W = b.extend({}, W);
            if (!("data" in W)) {
                W.data = true
            } if (W.compat) {
                W.useDepths = true
            } var Z = undefined;
            function Y() {
                var ac = X.parse(U, W), ab = new X.Compiler().compile(ac, W), aa = new X.JavaScriptCompiler().compile(ab, W, undefined, true);
                return X.template(aa)
            } function V(aa, ab) {
                if (!Z) {
                    Z = Y()
                } return Z.call(this, aa, ab)
            } V._setup = function (aa) {
                if (!Z) {
                    Z = Y()
                } return Z._setup(aa)
            };
            V._child = function (aa, ac, ab, ad) {
                if (!Z) {
                    Z = Y()
                } return Z._child(aa, ac, ab, ad)
            };
            return V
        } function w(V, U) {
            if (V === U) {
                return true
            } if (b.isArray(V) && b.isArray(U) && V.length === U.length) {
                for (var W = 0;
                    W < V.length;
                    W++) {
                        if (!w(V[W], U[W])) {
                            return false
                        }
                } return true
            }
        } function g(V) {
            if (!V.path.parts) {
                var U = V.path;
                V.path = { type: "PathExpression", data: false, depth: 0, parts: [U.original + ""], original: U.original + "", loc: U.loc }
            }
        }
    }), (function (g, ah, q) {
        var aq = q(1)["default"];
        ah.__esModule = true;
        var F = q(4);
        var am = q(6);
        var J = aq(am);
        var b = q(5);
        var Z = q(43);
        var K = aq(Z);
        function k(at) {
            this.value = at
        } function c() { } c.prototype = {
            nameLookup: function P(au, at) {
                if (c.isValidJavaScriptVariableName(at)) {
                    return [au, ".", at]
                } else {
                    return [au, "[", JSON.stringify(at), "]"]
                }
            }, depthedLookup: function Q(at) {
                return [this.aliasable("container.lookup"), '(depths, "', at, '")']
            }, compilerInfo: function A() {
                var au = F.COMPILER_REVISION, at = F.REVISION_CHANGES[au];
                return [au, at]
            }, appendToBuffer: function ao(av, at, au) {
                if (!b.isArray(av)) {
                    av = [av]
                } av = this.source.wrap(av, at);
                if (this.environment.isSimple) {
                    return ["return ", av, ";"]
                } else {
                    if (au) {
                        return ["buffer += ", av, ";"]
                    } else {
                        av.appendToBuffer = true;
                        return av
                    }
                }
            }, initializeBuffer: function ak() {
                return this.quotedString("")
            }, compile: function r(ax, aG, au, aA) {
                this.environment = ax;
                this.options = aG;
                this.stringParams = this.options.stringParams;
                this.trackIds = this.options.trackIds;
                this.precompile = !aA;
                this.name = this.environment.name;
                this.isChild = !!au;
                this.context = au || { decorators: [], programs: [], environments: [] };
                this.preamble();
                this.stackSlot = 0;
                this.stackVars = [];
                this.aliases = {};
                this.registers = { list: [] };
                this.hashes = [];
                this.compileStack = [];
                this.inlineStack = [];
                this.blockParams = [];
                this.compileChildren(ax, aG);
                this.useDepths = this.useDepths || ax.useDepths || ax.useDecorators || this.options.compat;
                this.useBlockParams = this.useBlockParams || ax.useBlockParams;
                var aC = ax.opcodes, ay = undefined, aE = undefined, az = undefined, aw = undefined;
                for (az = 0, aw = aC.length;
                    az < aw;
                    az++) {
                        ay = aC[az];
                    this.source.currentLocation = ay.loc;
                    aE = aE || ay.loc;
                    this[ay.opcode].apply(this, ay.args)
                } this.source.currentLocation = aE;
                this.pushSource("");
                if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {
                    throw new J["default"]("Compile completed with content left on stack")
                } if (!this.decorators.isEmpty()) {
                    this.useDecorators = true;
                    this.decorators.prepend("var decorators = container.decorators;\n");
                    this.decorators.push("return fn;");
                    if (aA) {
                        this.decorators = Function.apply(this, ["fn", "props", "container", "depth0", "data", "blockParams", "depths", this.decorators.merge()])
                    } else {
                        this.decorators.prepend("function(fn, props, container, depth0, data, blockParams, depths) {\n");
                        this.decorators.push("}\n");
                        this.decorators = this.decorators.merge()
                    }
                } else {
                    this.decorators = undefined
                } var aD = this.createFunctionContext(aA);
                if (!this.isChild) {
                    var aB = { compiler: this.compilerInfo(), main: aD };
                    if (this.decorators) {
                        aB.main_d = this.decorators;
                        aB.useDecorators = true
                    } var at = this.context;
                    var av = at.programs;
                    var aF = at.decorators;
                    for (az = 0, aw = av.length;
                        az < aw;
                        az++) {
                            if (av[az]) {
                                aB[az] = av[az];
                                if (aF[az]) {
                                    aB[az + "_d"] = aF[az];
                                    aB.useDecorators = true
                                }
                            }
                    } if (this.environment.usePartial) {
                        aB.usePartial = true
                    } if (this.options.data) {
                        aB.useData = true
                    } if (this.useDepths) {
                        aB.useDepths = true
                    } if (this.useBlockParams) {
                        aB.useBlockParams = true
                    } if (this.options.compat) {
                        aB.compat = true
                    } if (!aA) {
                        aB.compiler = JSON.stringify(aB.compiler);
                        this.source.currentLocation = { start: { line: 1, column: 0 } };
                        aB = this.objectLiteral(aB);
                        if (aG.srcName) {
                            aB = aB.toStringWithSourceMap({ file: aG.destName });
                            aB.map = aB.map && aB.map.toString()
                        } else {
                            aB = aB.toString()
                        }
                    } else {
                        aB.compilerOptions = this.options
                    } return aB
                } else {
                    return aD
                }
            }, preamble: function Y() {
                this.lastContext = 0;
                this.source = new K["default"](this.options.srcName);
                this.decorators = new K["default"](this.options.srcName)
            }, createFunctionContext: function an(au) {
                var az = "";
                var ay = this.stackVars.concat(this.registers.list);
                if (ay.length > 0) {
                    az += ", " + ay.join(", ")
                } var ax = 0;
                for (var at in this.aliases) {
                    var av = this.aliases[at];
                    if (this.aliases.hasOwnProperty(at) && av.children && av.referenceCount > 1) {
                        az += ", alias" + ++ax + "=" + at;
                        av.children[0] = "alias" + ax
                    }
                } var aA = ["container", "depth0", "helpers", "partials", "data"];
                if (this.useBlockParams || this.useDepths) {
                    aA.push("blockParams")
                } if (this.useDepths) {
                    aA.push("depths")
                } var aw = this.mergeSource(az);
                if (au) {
                    aA.push(aw);
                    return Function.apply(this, aA)
                } else {
                    return this.source.wrap(["function(", aA.join(","), ") {\n  ", aw, "}"])
                }
            }, mergeSource: function D(ay) {
                var aw = this.environment.isSimple, av = !this.forceBuffer, at = undefined, au = undefined, ax = undefined, az = undefined;
                this.source.each(function (aA) {
                    if (aA.appendToBuffer) {
                        if (ax) {
                            aA.prepend("  + ")
                        } else {
                            ax = aA
                        } az = aA
                    } else {
                        if (ax) {
                            if (!au) {
                                at = true
                            } else {
                                ax.prepend("buffer += ")
                            } az.add(";");
                            ax = az = undefined
                        } au = true;
                        if (!aw) {
                            av = false
                        }
                    }
                });
                if (av) {
                    if (ax) {
                        ax.prepend("return ");
                        az.add(";")
                    } else {
                        if (!au) {
                            this.source.push('return "";')
                        }
                    }
                } else {
                    ay += ", buffer = " + (at ? "" : this.initializeBuffer());
                    if (ax) {
                        ax.prepend("return buffer + ");
                        az.add(";")
                    } else {
                        this.source.push("return buffer;")
                    }
                } if (ay) {
                    this.source.prepend("var " + ay.substring(2) + (at ? "" : ";\n"))
                } return this.source.merge()
            }, blockValue: function d(au) {
                var av = this.aliasable("helpers.blockHelperMissing"), aw = [this.contextName(0)];
                this.setupHelperArgs(au, 0, aw);
                var at = this.popStack();
                aw.splice(1, 0, at);
                this.push(this.source.functionCall(av, "call", aw))
            }, ambiguousBlockValue: function U() {
                var at = this.aliasable("helpers.blockHelperMissing"), av = [this.contextName(0)];
                this.setupHelperArgs("", 0, av, true);
                this.flushInline();
                var au = this.topStack();
                av.splice(1, 0, au);
                this.pushSource(["if (!", this.lastHelper, ") { ", au, " = ", this.source.functionCall(at, "call", av), "}"])
            }, appendContent: function f(at) {
                if (this.pendingContent) {
                    at = this.pendingContent + at
                } else {
                    this.pendingLocation = this.source.currentLocation
                } this.pendingContent = at
            }, append: function ab() {
                if (this.isInline()) {
                    this.replaceStack(function (au) {
                        return [" != null ? ", au, ' : ""']
                    });
                    this.pushSource(this.appendToBuffer(this.popStack()))
                } else {
                    var at = this.popStack();
                    this.pushSource(["if (", at, " != null) { ", this.appendToBuffer(at, undefined, true), " }"]);
                    if (this.environment.isSimple) {
                        this.pushSource(["else { ", this.appendToBuffer("''", undefined, true), " }"])
                    }
                }
            }, appendEscaped: function n() {
                this.pushSource(this.appendToBuffer([this.aliasable("container.escapeExpression"), "(", this.popStack(), ")"]))
            }, getContext: function B(at) {
                this.lastContext = at
            }, pushContext: function u() {
                this.pushStackLiteral(this.contextName(this.lastContext))
            }, lookupOnContext: function ar(aw, av, at, ax) {
                var au = 0;
                if (!ax && this.options.compat && !this.lastContext) {
                    this.push(this.depthedLookup(aw[au++]))
                } else {
                    this.pushContext()
                } this.resolvePath("context", aw, au, av, at)
            }, lookupBlockParam: function C(au, at) {
                this.useBlockParams = true;
                this.push(["blockParams[", au[0], "][", au[1], "]"]);
                this.resolvePath("context", at, 1)
            }, lookupData: function p(av, au, at) {
                if (!av) {
                    this.pushStackLiteral("data")
                } else {
                    this.pushStackLiteral("container.data(data, " + av + ")")
                } this.resolvePath("data", au, 0, true, at)
            }, resolvePath: function R(aw, ay, av, ax, au) {
                var az = this;
                if (this.options.strict || this.options.assumeObjects) {
                    this.push(W(this.options.strict && au, this, ay, aw));
                    return
                } var at = ay.length;
                for (;
                    av < at;
                    av++) {
                        this.replaceStack(function (aB) {
                            var aA = az.nameLookup(aB, ay[av], aw);
                            if (!ax) {
                                return [" != null ? ", aA, " : ", aB]
                            } else {
                                return [" && ", aA]
                            }
                        })
                }
            }, resolvePossibleLambda: function ag() {
                this.push([this.aliasable("container.lambda"), "(", this.popStack(), ", ", this.contextName(0), ")"])
            }, pushStringParam: function ap(at, au) {
                this.pushContext();
                this.pushString(au);
                if (au !== "SubExpression") {
                    if (typeof at === "string") {
                        this.pushString(at)
                    } else {
                        this.pushStackLiteral(at)
                    }
                }
            }, emptyHash: function y(at) {
                if (this.trackIds) {
                    this.push("{}")
                } if (this.stringParams) {
                    this.push("{}");
                    this.push("{}")
                } this.pushStackLiteral(at ? "undefined" : "{}")
            }, pushHash: function S() {
                if (this.hash) {
                    this.hashes.push(this.hash)
                } this.hash = { values: [], types: [], contexts: [], ids: [] }
            }, popHash: function O() {
                var at = this.hash;
                this.hash = this.hashes.pop();
                if (this.trackIds) {
                    this.push(this.objectLiteral(at.ids))
                } if (this.stringParams) {
                    this.push(this.objectLiteral(at.contexts));
                    this.push(this.objectLiteral(at.types))
                } this.push(this.objectLiteral(at.values))
            }, pushString: function l(at) {
                this.pushStackLiteral(this.quotedString(at))
            }, pushLiteral: function I(at) {
                this.pushStackLiteral(at)
            }, pushProgram: function w(at) {
                if (at != null) {
                    this.pushStackLiteral(this.programExpression(at))
                } else {
                    this.pushStackLiteral(null)
                }
            }, registerDecorator: function L(aw, av) {
                var at = this.nameLookup("decorators", av, "decorator"), au = this.setupHelperArgs(av, aw);
                this.decorators.push(["fn = ", this.decorators.functionCall(at, "", ["fn", "props", "container", au]), " || fn;"])
            }, invokeHelper: function aa(ax, at, av) {
                var az = this.popStack(), au = this.setupHelper(ax, at), ay = av ? [au.name, " || "] : "";
                var aw = ["("].concat(ay, az);
                if (!this.options.strict) {
                    aw.push(" || ", this.aliasable("helpers.helperMissing"))
                } aw.push(")");
                this.push(this.source.functionCall(aw, "call", au.callParams))
            }, invokeKnownHelper: function o(av, at) {
                var au = this.setupHelper(av, at);
                this.push(this.source.functionCall(au.name, "call", au.callParams))
            }, invokeAmbiguous: function al(at, ax) {
                this.useRegister("helper");
                var ay = this.popStack();
                this.emptyHash();
                var au = this.setupHelper(0, at, ax);
                var av = this.lastHelper = this.nameLookup("helpers", at, "helper");
                var aw = ["(", "(helper = ", av, " || ", ay, ")"];
                if (!this.options.strict) {
                    aw[0] = "(helper = ";
                    aw.push(" != null ? helper : ", this.aliasable("helpers.helperMissing"))
                } this.push(["(", aw, au.paramsInit ? ["),(", au.paramsInit] : [], "),", "(typeof helper === ", this.aliasable('"function"'), " ? ", this.source.functionCall("helper", "call", au.callParams), " : helper))"])
            }, invokePartial: function T(au, aw, at) {
                var ax = [], av = this.setupParams(aw, 1, ax);
                if (au) {
                    aw = this.popStack();
                    delete av.name
                } if (at) {
                    av.indent = JSON.stringify(at)
                } av.helpers = "helpers";
                av.partials = "partials";
                av.decorators = "container.decorators";
                if (!au) {
                    ax.unshift(this.nameLookup("partials", aw, "partial"))
                } else {
                    ax.unshift(aw)
                } if (this.options.compat) {
                    av.depths = "depths"
                } av = this.objectLiteral(av);
                ax.push(av);
                this.push(this.source.functionCall("container.invokePartial", "", ax))
            }, assignToHash: function j(au) {
                var aw = this.popStack(), at = undefined, av = undefined, ay = undefined;
                if (this.trackIds) {
                    ay = this.popStack()
                } if (this.stringParams) {
                    av = this.popStack();
                    at = this.popStack()
                } var ax = this.hash;
                if (at) {
                    ax.contexts[au] = at
                } if (av) {
                    ax.types[au] = av
                } if (ay) {
                    ax.ids[au] = ay
                } ax.values[au] = aw
            }, pushId: function e(au, at, av) {
                if (au === "BlockParam") {
                    this.pushStackLiteral("blockParams[" + at[0] + "].path[" + at[1] + "]" + (av ? " + " + JSON.stringify("." + av) : ""))
                } else {
                    if (au === "PathExpression") {
                        this.pushString(at)
                    } else {
                        if (au === "SubExpression") {
                            this.pushStackLiteral("true")
                        } else {
                            this.pushStackLiteral("null")
                        }
                    }
                }
            }, compiler: c, compileChildren: function G(ay, aB) {
                var aw = ay.children, av = undefined, at = undefined;
                for (var az = 0, ax = aw.length;
                    az < ax;
                    az++) {
                        av = aw[az];
                    at = new this.compiler();
                    var au = this.matchExistingProgram(av);
                    if (au == null) {
                        this.context.programs.push("");
                        var aA = this.context.programs.length;
                        av.index = aA;
                        av.name = "program" + aA;
                        this.context.programs[aA] = at.compile(av, aB, this.context, !this.precompile);
                        this.context.decorators[aA] = at.decorators;
                        this.context.environments[aA] = av;
                        this.useDepths = this.useDepths || at.useDepths;
                        this.useBlockParams = this.useBlockParams || at.useBlockParams;
                        av.useDepths = this.useDepths;
                        av.useBlockParams = this.useBlockParams
                    } else {
                        av.index = au.index;
                        av.name = "program" + au.index;
                        this.useDepths = this.useDepths || au.useDepths;
                        this.useBlockParams = this.useBlockParams || au.useBlockParams
                    }
                }
            }, matchExistingProgram: function t(aw) {
                for (var av = 0, au = this.context.environments.length;
                    av < au;
                    av++) {
                        var at = this.context.environments[av];
                    if (at && at.equals(aw)) {
                        return at
                    }
                }
            }, programExpression: function H(at) {
                var av = this.environment.children[at], au = [av.index, "data", av.blockParams];
                if (this.useBlockParams || this.useDepths) {
                    au.push("blockParams")
                } if (this.useDepths) {
                    au.push("depths")
                } return "container.program(" + au.join(", ") + ")"
            }, useRegister: function X(at) {
                if (!this.registers[at]) {
                    this.registers[at] = true;
                    this.registers.list.push(at)
                }
            }, push: function af(at) {
                if (!(at instanceof k)) {
                    at = this.source.wrap(at)
                } this.inlineStack.push(at);
                return at
            }, pushStackLiteral: function m(at) {
                this.push(new k(at))
            }, pushSource: function v(at) {
                if (this.pendingContent) {
                    this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));
                    this.pendingContent = undefined
                } if (at) {
                    this.source.push(at)
                }
            }, replaceStack: function a(aA) {
                var ay = ["("], at = undefined, ax = undefined, av = undefined;
                if (!this.isInline()) {
                    throw new J["default"]("replaceStack on non-inline")
                } var az = this.popStack(true);
                if (az instanceof k) {
                    at = [az.value];
                    ay = ["(", at];
                    av = true
                } else {
                    ax = true;
                    var au = this.incrStack();
                    ay = ["((", this.push(au), " = ", az, ")"];
                    at = this.topStack()
                } var aw = aA.call(this, at);
                if (!av) {
                    this.popStack()
                } if (ax) {
                    this.stackSlot--
                } this.push(ay.concat(aw, ")"))
            }, incrStack: function V() {
                this.stackSlot++;
                if (this.stackSlot > this.stackVars.length) {
                    this.stackVars.push("stack" + this.stackSlot)
                } return this.topStackName()
            }, topStackName: function aj() {
                return "stack" + this.stackSlot
            }, flushInline: function ai() {
                var aw = this.inlineStack;
                this.inlineStack = [];
                for (var av = 0, au = aw.length;
                    av < au;
                    av++) {
                        var ax = aw[av];
                    if (ax instanceof k) {
                        this.compileStack.push(ax)
                    } else {
                        var at = this.incrStack();
                        this.pushSource([at, " = ", ax, ";"]);
                        this.compileStack.push(at)
                    }
                }
            }, isInline: function x() {
                return this.inlineStack.length
            }, popStack: function h(at) {
                var av = this.isInline(), au = (av ? this.inlineStack : this.compileStack).pop();
                if (!at && au instanceof k) {
                    return au.value
                } else {
                    if (!av) {
                        if (!this.stackSlot) {
                            throw new J["default"]("Invalid stack pop")
                        } this.stackSlot--
                    } return au
                }
            }, topStack: function E() {
                var at = this.isInline() ? this.inlineStack : this.compileStack, au = at[at.length - 1];
                if (au instanceof k) {
                    return au.value
                } else {
                    return au
                }
            }, contextName: function ae(at) {
                if (this.useDepths && at) {
                    return "depths[" + at + "]"
                } else {
                    return "depth" + at
                }
            }, quotedString: function z(at) {
                return this.source.quotedString(at)
            }, objectLiteral: function s(at) {
                return this.source.objectLiteral(at)
            }, aliasable: function ad(au) {
                var at = this.aliases[au];
                if (at) {
                    at.referenceCount++;
                    return at
                } at = this.aliases[au] = this.source.wrap(au);
                at.aliasable = true;
                at.referenceCount = 1;
                return at
            }, setupHelper: function ac(ax, av, au) {
                var aw = [], az = this.setupHelperArgs(av, ax, aw, au);
                var at = this.nameLookup("helpers", av, "helper"), ay = this.aliasable(this.contextName(0) + " != null ? " + this.contextName(0) + " : (container.nullContext || {})");
                return { params: aw, paramsInit: az, name: at, callParams: [ay].concat(aw) }
            }, setupParams: function N(av, az, ax) {
                var aE = {}, aC = [], aD = [], au = [], at = !ax, aw = undefined;
                if (at) {
                    ax = []
                } aE.name = this.quotedString(av);
                aE.hash = this.popStack();
                if (this.trackIds) {
                    aE.hashIds = this.popStack()
                } if (this.stringParams) {
                    aE.hashTypes = this.popStack();
                    aE.hashContexts = this.popStack()
                } var ay = this.popStack(), aB = this.popStack();
                if (aB || ay) {
                    aE.fn = aB || "container.noop";
                    aE.inverse = ay || "container.noop"
                } var aA = az;
                while (aA--) {
                    aw = this.popStack();
                    ax[aA] = aw;
                    if (this.trackIds) {
                        au[aA] = this.popStack()
                    } if (this.stringParams) {
                        aD[aA] = this.popStack();
                        aC[aA] = this.popStack()
                    }
                } if (at) {
                    aE.args = this.source.generateArray(ax)
                } if (this.trackIds) {
                    aE.ids = this.source.generateArray(au)
                } if (this.stringParams) {
                    aE.types = this.source.generateArray(aD);
                    aE.contexts = this.source.generateArray(aC)
                } if (this.options.data) {
                    aE.data = "data"
                } if (this.useBlockParams) {
                    aE.blockParams = "blockParams"
                } return aE
            }, setupHelperArgs: function M(av, ax, aw, au) {
                var at = this.setupParams(av, ax, aw);
                at = this.objectLiteral(at);
                if (au) {
                    this.useRegister("options");
                    aw.push("options");
                    return ["options=", at]
                } else {
                    if (aw) {
                        aw.push(at);
                        return ""
                    } else {
                        return at
                    }
                }
            }
        };
        (function () {
            var at = ("break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false").split(" ");
            var aw = c.RESERVED_WORDS = {};
            for (var av = 0, au = at.length;
                av < au;
                av++) {
                    aw[at[av]] = true
            }
        })();
        c.isValidJavaScriptVariableName = function (at) {
            return !c.RESERVED_WORDS[at] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(at)
        };
        function W(az, ax, ay, aw) {
            var au = ax.popStack(), av = 0, at = ay.length;
            if (az) {
                at--
            } for (;
                av < at;
                av++) {
                    au = ax.nameLookup(au, ay[av], aw)
            } if (az) {
                return [ax.aliasable("container.strict"), "(", au, ", ", ax.quotedString(ay[av]), ")"]
            } else {
                return au
            }
        } ah["default"] = c;
        g.exports = ah["default"]
    }), (function (b, y, d) {
        y.__esModule = true;
        var q = d(5);
        var g = undefined;
        try {
            if (false) {
                var t = require("source-map");
                g = t.SourceNode
            }
        } catch (h) { } if (!g) {
            g = function (z, A, B, C) {
                this.src = "";
                if (C) {
                    this.add(C)
                }
            };
            g.prototype = {
                add: function s(z) {
                    if (q.isArray(z)) {
                        z = z.join("")
                    } this.src += z
                }, prepend: function x(z) {
                    if (q.isArray(z)) {
                        z = z.join("")
                    } this.src = z + this.src
                }, toStringWithSourceMap: function e() {
                    return { code: this.toString() }
                }, toString: function v() {
                    return this.src
                }
            }
        } function c(C, A, E) {
            if (q.isArray(C)) {
                var B = [];
                for (var D = 0, z = C.length;
                    D < z;
                    D++) {
                        B.push(A.wrap(C[D], E))
                } return B
            } else {
                if (typeof C === "boolean" || typeof C === "number") {
                    return C + ""
                }
            } return C
        } function l(z) {
            this.srcFile = z;
            this.source = []
        } l.prototype = {
            isEmpty: function r() {
                return !this.source.length
            }, prepend: function x(z, A) {
                this.source.unshift(this.wrap(z, A))
            }, push: function m(z, A) {
                this.source.push(this.wrap(z, A))
            }, merge: function j() {
                var z = this.empty();
                this.each(function (A) {
                    z.add(["  ", A, "\n"])
                });
                return z
            }, each: function f(A) {
                for (var B = 0, z = this.source.length;
                    B < z;
                    B++) {
                        A(this.source[B])
                }
            }, empty: function p() {
                var z = this.currentLocation || { start: {} };
                return new g(z.start.line, z.start.column, this.srcFile)
            }, wrap: function o(z) {
                var A = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];
                if (z instanceof g) {
                    return z
                } z = c(z, this, A);
                return new g(A.start.line, A.start.column, this.srcFile, z)
            }, functionCall: function w(A, z, B) {
                B = this.generateList(B);
                return this.wrap([A, z ? "." + z + "(" : "(", B, ")"])
            }, quotedString: function n(z) {
                return '"' + (z + "").replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029") + '"'
            }, objectLiteral: function u(D) {
                var C = [];
                for (var A in D) {
                    if (D.hasOwnProperty(A)) {
                        var B = c(D[A], this);
                        if (B !== "undefined") {
                            C.push([this.quotedString(A), ":", B])
                        }
                    }
                } var z = this.generateList(C);
                z.prepend("{");
                z.add("}");
                return z
            }, generateList: function a(A) {
                var B = this.empty();
                for (var C = 0, z = A.length;
                    C < z;
                    C++) {
                        if (C) {
                            B.add(",")
                        } B.add(c(A[C], this))
                } return B
            }, generateArray: function k(z) {
                var A = this.generateList(z);
                A.prepend("[");
                A.add("]");
                return A
            }
        };
        y["default"] = l;
        b.exports = y["default"]
    })])
});
if (!window.CQ_Analytics) {
    window.CQ_Analytics = {}
} CQ_Analytics.Operator = (function () {
    return function () { }
})();
CQ_Analytics.Operator.IS = "is";
CQ_Analytics.Operator.EQUALS = "equals";
CQ_Analytics.Operator.NOT_EQUAL = "notequal";
CQ_Analytics.Operator.GREATER = "greater";
CQ_Analytics.Operator.GREATER_OR_EQUAL = "greaterorequal";
CQ_Analytics.Operator.OLDER = "older";
CQ_Analytics.Operator.OLDER_OR_EQUAL = "olderorequal";
CQ_Analytics.Operator.LESS = "less";
CQ_Analytics.Operator.LESS_OR_EQUAL = "lessorequal";
CQ_Analytics.Operator.YOUNGER = "younger";
CQ_Analytics.Operator.YOUNGER_OR_EQUAL = "youngerorequal";
CQ_Analytics.Operator.CONTAINS = "contains";
CQ_Analytics.Operator.BEGINS_WITH = "beginswith";
CQ_Analytics.Operator.EXISTS = "exists";
CQ_Analytics.Operator.DOES_NOT_EXIST = "doesnotexist";
CQ_Analytics.Operator.formatIP = function (b) {
    var c = String(b).match(/^([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)$/);
    var a = b;
    if (c && c.length === 5) {
        c.shift();
        a = [];
        while (c.length) {
            a.push(("00" + c.shift()).slice(-3))
        } a = a.join(".")
    } return a
};
CQ_Analytics.OperatorActions = function () {
    var mapping = {};
    var addOperator = function (name, text, operation) {
        mapping[name] = [text, operation]
    };
    addOperator(CQ_Analytics.Operator.EQUALS, "equals", "==");
    addOperator(CQ_Analytics.Operator.IS, "is", "==");
    addOperator(CQ_Analytics.Operator.NOT_EQUAL, "is not equal to", "!=");
    addOperator(CQ_Analytics.Operator.GREATER, "is greater than", ">");
    addOperator(CQ_Analytics.Operator.GREATER_OR_EQUAL, "is equal to or greater than", ">=");
    addOperator(CQ_Analytics.Operator.OLDER, "is older than", ">");
    addOperator(CQ_Analytics.Operator.OLDER_OR_EQUAL, "is equal to or older than", ">=");
    addOperator(CQ_Analytics.Operator.LESS, "is less than", "<");
    addOperator(CQ_Analytics.Operator.LESS_OR_EQUAL, "is equal to or less than", "<=");
    addOperator(CQ_Analytics.Operator.YOUNGER, "is younger than", "<");
    addOperator(CQ_Analytics.Operator.YOUNGER_OR_EQUAL, "is equal to or younger than", "<=");
    addOperator(CQ_Analytics.Operator.CONTAINS, "contains", function (s1, s2) {
        if (s1) {
            if (s2) {
                s1 = "" + s1;
                s2 = "" + s2;
                return s1.toLowerCase().indexOf(s2.toLowerCase()) != -1
            } return true
        } return false
    });
    addOperator(CQ_Analytics.Operator.BEGINS_WITH, "begins with", function (s1, s2) {
        if (s1) {
            if (s2) {
                s1 = "" + s1;
                s2 = "" + s2;
                return s1.toLowerCase().indexOf(s2.toLowerCase()) == 0
            } return true
        } return false
    });
    addOperator(CQ_Analytics.Operator.EXISTS, "exists", function (s1) {
        return !!s1
    });
    addOperator(CQ_Analytics.Operator.DOES_NOT_EXIST, "does not exist", function (s1) {
        return !s1
    });
    var getByIndex = function (op, index) {
        if (mapping[op] && mapping[op][index]) {
            return mapping[op][index]
        } return ""
    };
    var escapeQuote = function (str) {
        if (str) {
            str = str.replace(new RegExp("\\'", "ig"), str)
        } return str
    };
    return {
        getText: function (operator) {
            return getByIndex(operator, 0)
        }, setText: function (operator, newText) {
            if (mapping[operator] && mapping[operator][0]) {
                mapping[operator][0] = newText
            }
        }, getOperation: function (operator) {
            return getByIndex(operator, 1)
        }, operate: function (object, property, operator, value, valueFormat) {
            var op = this.getOperation(operator);
            op = op ? op : operator;
            if ((!valueFormat || valueFormat === "") && (op in { "<": 1, "<=": 1, ">": 1, ">=": 1 }) && !isNaN(parseFloat(value - 0))) {
                valueFormat = "parseFloat"
            } try {
                if (object) {
                    var toEval = "";
                    var objectValue = CQ.shared.XSS.getXSSTablePropertyValue(object, property);
                    if (typeof op == "function") {
                        return op.call(this, objectValue, value, valueFormat)
                    } else {
                        if (valueFormat) {
                            toEval = valueFormat + "('" + objectValue + "') " + op + " " + valueFormat + "('" + value + "')"
                        } else {
                            var s1 = escapeQuote(objectValue);
                            var s2 = escapeQuote(value);
                            toEval = "'" + s1 + "' " + op + " '" + s2 + "'"
                        } var b = eval(toEval);
                        return b
                    }
                }
            } catch (e) { } return false
        }
    }
}();
CQ_Analytics.Utils = new function () {
    return {
        registerDocumentEventHandler: function (c, b) {
            var a = window.document[c];
            if (typeof window.document[c] != "function") {
                window.document[c] = b
            } else {
                window.document[c] = function (d) {
                    if (a) {
                        a(d)
                    } b(d)
                }
            }
        }, eventWrapper: function (a) {
            return function (d) {
                var c, b;
                if (document.all) {
                    c = window.event.keyCode;
                    b = window.event
                } else {
                    c = (typeof (d.which) != "undefined") ? d.which : 0;
                    b = d
                } if (b) {
                    a(b, c)
                }
            }
        }, loadElement: function (a, b) {
            $CQ("#" + b).load(a)
        }, loadTeaserElement: function (a, d) {
            var e = $CQ("#" + d).css("height");
            var f = $CQ("#" + d).height();
            if (f > 0) {
                $CQ("#" + d).css("height", f)
            } var g = function (n) {
                if (n && n != "") {
                    var m = $CQ(n).css("display", "none");
                    var h = $CQ("#" + d)[0];
                    $CQ("#" + d).empty().append(m);
                    if (h && h.parentElement) {
                        $CQ(h.parentElement).trigger("target-dom-loaded")
                    } m.fadeIn(function () {
                        if (e && e != "0px") {
                            $CQ("#" + d).css("height", e)
                        }
                    })
                } else {
                    if (e && e != "0px") {
                        $CQ("#" + d).css("height", e)
                    }
                }
            };
            var j = function (h, m) {
                if (!CQ_Analytics.Utils.teasersCache) {
                    CQ_Analytics.Utils.teasersCache = {}
                } CQ_Analytics.Utils.teasersCache[h] = m
            };
            var b = function () {
                if (CQ_Analytics.Utils.teasersCache && CQ_Analytics.Utils.teasersCache[a]) {
                    g(CQ_Analytics.Utils.teasersCache[a])
                } else {
                    CQ_Analytics.Utils.teasersLoading = CQ_Analytics.Utils.teasersLoading || {};
                    if (CQ_Analytics.Utils.teasersLoading[a]) {
                        window.setTimeout(function () {
                            CQ_Analytics.Utils.loadTeaserElement(a, d)
                        }, 100)
                    } else {
                        CQ_Analytics.Utils.teasersLoading[a] = true;
                        k()
                    }
                }
            };
            var k = function () {
                var m = a;
                var h = location.href;
                if (typeof CQ_CONTENT_PATH != "undefined") {
                    h = CQ_CONTENT_PATH
                } var n = CQ.shared.HTTP.getParameter(h, "wcmmode");
                if (n) {
                    m += (m.indexOf("?") > 0 ? "&" : "?") + "wcmmode=" + n
                } CQ.shared.HTTP.get(m, function (s, r, p) {
                    if (r) {
                        var q = p.body;
                        if (q) {
                            q = q.replace(new RegExp("\\n", "ig"), "");
                            q = q.replace(new RegExp("\\r", "ig"), "");
                            j(a, q);
                            delete CQ_Analytics.Utils.teasersLoading[a];
                            b()
                        }
                    } else {
                        j(a, "")
                    }
                })
            };
            var c = $CQ("#" + d).children().length;
            if (c > 0) {
                var l = 0;
                $CQ("#" + d).children().fadeOut(function () {
                    var h = $CQ(this);
                    window.setTimeout(function () {
                        h.remove();
                        l++;
                        if (l >= c) {
                            b()
                        }
                    }, 50)
                })
            } else {
                b()
            }
        }, clearElement: function (a) {
            if (a) {
                $CQ("#" + a).html("")
            }
        }, indexOf: function (d, c) {
            for (var b = 0, a = d.length;
                b < a;
                b++) {
                    if (d[b] == c) {
                        return b
                    }
            } return -1
        }, load: function (a, c, b) {
            return CQ.shared.HTTP.get(a, c, b)
        }, post: function (a, d, c, b) {
            return CQ.shared.HTTP.post(a, d, c, b)
        }, getPagePath: function () {
            return CQ.shared.HTTP.getPath()
        }, getPath: function (a) {
            return CQ.shared.HTTP.getPath(a)
        }, addParameter: function (b, a, c) {
            return CQ.shared.HTTP.addParameter(b, a, c)
        }, removeParameters: function (a) {
            return CQ.shared.HTTP.removeParameters(a)
        }, removeAnchor: function (a) {
            return CQ.shared.HTTP.removeAnchor(a)
        }, getSchemeAndAuthority: function (a) {
            return CQ.shared.HTTP.getSchemeAndAuthority(a)
        }, internalize: function (a, b) {
            return CQ.shared.HTTP.internalize(b)
        }, externalize: function (a, b) {
            return CQ.shared.HTTP.externalize(a, b)
        }, encodePathOfURI: function (a) {
            return CQ.shared.HTTP.encodePathOfURI(a)
        }, encodePath: function (a) {
            return CQ.shared.HTTP.encodePath(a)
        }, getContextPath: function () {
            return CQ.shared.HTTP.getContextPath()
        }, detectContextPath: function () {
            return CQ.shared.HTTP.detectContextPath()
        }, urlEncode: function (h) {
            if (!h) {
                return ""
            } if (typeof h == "string") {
                return h
            } var c = [];
            for (var f in h) {
                var e = h[f], b = encodeURIComponent(f);
                var g = typeof e;
                if (g == "undefined") {
                    c.push(b, "=&")
                } else {
                    if (g != "function" && g != "object") {
                        c.push(b, "=", encodeURIComponent(e), "&")
                    } else {
                        if (typeof e == "array") {
                            if (e.length) {
                                for (var d = 0, a = e.length;
                                    d < a;
                                    d++) {
                                        c.push(b, "=", encodeURIComponent(e[d] === undefined ? "" : e[d]), "&")
                                }
                            } else {
                                c.push(b, "=&")
                            }
                        }
                    }
                }
            } c.pop();
            return c.join("")
        }, getUID: function () {
            var a = Math.floor(Math.random() * (Math.pow(2, 42) - 1));
            return this.getTimestamp().toString(16) + a.toString(16)
        }, getTimestamp: function () {
            var a = new Date();
            return a.getTime()
        }, insert: function (d, c, b) {
            if (!d || isNaN(c) || !b) {
                return d
            } var a = "";
            var f = 0;
            var e = c;
            while (e < d.length) {
                a += d.substring(f, e) + b;
                f += c;
                e += c
            } if (f < d.length) {
                a += d.substring(f)
            } return a
        }, addListener: function () {
            if (window.addEventListener) {
                return function (d, b, c, a) {
                    d.addEventListener(b, c, (a))
                }
            } else {
                if (window.attachEvent) {
                    return function (d, b, c, a) {
                        d.attachEvent("on" + b, c)
                    }
                } else {
                    return function () { }
                }
            }
        }, removeListener: function () {
            if (window.removeEventListener) {
                return function (d, b, c, a) {
                    d.removeEventListener(b, c, (a))
                }
            } else {
                if (window.detachEvent) {
                    return function (c, a, b) {
                        c.detachEvent("on" + a, b)
                    }
                } else {
                    return function () { }
                }
            }
        }
    }
};
CQ_Analytics.ClickstreamcloudRenderingUtils = new function () {
    return {
        createLink: function (f, d, b, a) {
            var c = document.createElement("a");
            c.href = a;
            c.onclick = d;
            c.innerHTML = f;
            if (b) {
                for (var e in b) {
                    if (b.hasOwnProperty(e)) {
                        c[e] = b[e]
                    }
                }
            } return c
        }, createStaticLink: function (d, a, c) {
            var b = document.createElement("a");
            b.href = a;
            b.innerHTML = d;
            b.title = c;
            b.alt = c;
            return b
        }, createNameValue: function (b, d, a, e) {
            var c = document.createElement("span");
            c.className = a || "ccl-data";
            c.innerHTML = b + " = " + d;
            c.title = e;
            c.alt = e;
            return c
        }, createText: function (d, a, c) {
            var b = document.createElement("span");
            b.className = a || "ccl-data";
            if (d && d.indexOf && ((d.indexOf("/home") != -1 && d.indexOf("/image") != -1) || (d.indexOf("/") != -1 && d.indexOf(".png") != -1))) {
                b.innerHTML = '<img src="' + d + '.prof.thumbnail.png" border="0">'
            } else {
                if (d && d.indexOf && d.indexOf("www.gravatar.com") != -1) {
                    b.innerHTML = '<img src="' + d + '">'
                } else {
                    b.innerHTML = d
                }
            } b.title = c;
            b.alt = c;
            return b
        }, createEditablePropertySpan: function (b, d) {
            var a = "var editSpan = this.nextSibling; this.style.display = 'none'; editSpan.style.display = 'block';";
            var e = "var editSpan = this.parentNode; var readSpan = this.parentNode.previousSibling;var newValue = this.value;editSpan.style.display = 'none'; readSpan.innerHTML = '" + b + " = '+value; readSpan.style.display = 'block';";
            var c = document.createElement("span");
            c.innerHTML = '<span class="ccl-data" onclick="' + a + '">' + b + " = " + d + "</span>";
            c.innerHTML += '<span class="ccl-data" style="display: none;">' + b + ' = <input class="ccl-input" type="text" value="' + d + '" onblur="' + e + '"></span>';
            c.className = "ccl-data";
            return c
        }
    }
};
var generateURLSignature = function (a, d, c) {
    if (a && a.match(/^https?:\/\/maps\.googleapis\.com\//)) {
        var b = a.replace(/^https?:\/\/[^/]*/, "").replace(/&amp;/g, "&");
        $CQ.ajax({ url: CQ.shared.HTTP.externalize("/etc/cloudsettings/default/contexthub/geolocation.signature.json"), method: "get", dataType: "json", cache: false, data: { url: b } }).done(function (e, h, g) {
            if (g && g.responseJSON) {
                var f = this.baseURL.replace(/&amp;/g, "&");
                f += "&client=" + g.responseJSON.client;
                f += "&channel=" + g.responseJSON.channel;
                f += "&signature=" + g.responseJSON.signature;
                d(f)
            } else {
                if (typeof c === "function") {
                    c()
                }
            }
        }.bind({ baseURL: a })).fail(c)
    } else {
        d(a)
    }
};
CQ_Analytics.ClientContextUtils = new function () {
    return {
        renderStoreProperty: function (f, c, b, d, e, a) {
            if (CQ_Analytics && CQ_Analytics.CCM) {
                CQ_Analytics.CCM.onReady(function () {
                    var g = function () {
                        var h = CQ_Analytics.StoreRegistry.getStore(c);
                        if (h) {
                            var j = function () {
                                var n = h.getProperty(b) || a;
                                var m = $CQ("#" + f);
                                if (m.attr("contenteditable") && m.attr("contenteditable") != "inherit") {
                                    return
                                } if (typeof (n) == "string" && ((n.indexOf("/") == 0 && (n.toLowerCase().indexOf(".png") != -1 || n.toLowerCase().indexOf(".jpg") != -1 || n.toLowerCase().indexOf(".gif") != -1) || n.toLowerCase().indexOf("http") == 0))) {
                                    if (!n || n == "") {
                                        m.children().remove();
                                        if (CQ_Analytics.isUIAvailable) {
                                            m.html(CQ.I18n.getMessage("No", null, "Ex: No address, No keywords") + " " + b)
                                        } else {
                                            m.html("No " + b)
                                        }
                                    } else {
                                        var k = "";
                                        if (m.parents(".cq-cc-thumbnail").length == 0 || n.toLowerCase().indexOf("http") == 0 || n.indexOf("/libs/wcm/mobile") == 0) {
                                            k = n.replace(new RegExp("&amp;", "g"), "&")
                                        } else {
                                            k = "/etc/clientcontext/shared/thumbnail/content.png";
                                            k = CQ.shared.HTTP.addParameter(k, "path", CQ_Analytics.Variables.replaceVariables(n))
                                        } k = CQ_Analytics.Variables.replaceVariables(k);
                                        var l = m.find("div").css("background-image") || "";
                                        if (l.indexOf(k + ")") === -1) {
                                            if (h.fireEvent("beforepropertyrender", h, f) !== false) {
                                                generateURLSignature(CQ.shared.HTTP.externalize(k), function (o) {
                                                    m.html("");
                                                    m.children().remove();
                                                    $CQ("<div>").addClass("cq-cc-thumbnail-img").css("background-image", "url(" + o + ")").appendTo(m);
                                                    h.fireEvent("propertyrender", h, f)
                                                })
                                            }
                                        }
                                    }
                                } else {
                                    n = CQ_Analytics.Variables.replaceVariables(n);
                                    if (CQ_Analytics.isUIAvailable) {
                                        n = (!n || n == "") ? CQ.I18n.getMessage("No", null, "Ex: No address, No keywords") + " " + b : n = d + n + e
                                    } else {
                                        n = (!n || n == "") ? "No " + b : n = d + n + e
                                    } if (m.html() != n) {
                                        if (h.fireEvent("beforepropertyrender", h, f) !== false) {
                                            m.html(n);
                                            h.fireEvent("propertyrender", h, f)
                                        }
                                    }
                                }
                            };
                            if (h.fireEvent("beforeinitialpropertyrender", h, f) !== false) {
                                j();
                                if (h.addListener) {
                                    h.addListener("update", function () {
                                        j()
                                    })
                                } h.fireEvent("initialpropertyrender", h, f)
                            }
                        }
                    };
                    CQ_Analytics.ClientContextUtils.onStoreRegistered(c, g)
                })
            }
        }, renderStore: function (b, a) {
            if (CQ_Analytics && CQ_Analytics.CCM && b && a) {
                CQ_Analytics.CCM.onReady(function () {
                    var c = function () {
                        var d = CQ_Analytics.StoreRegistry.getStore(a);
                        if (d) {
                            d.divId = b;
                            var e = function () {
                                if (d.fireEvent("beforerender", d, d.divId) !== false) {
                                    d.renderer(d, d.divId);
                                    d.fireEvent("render", d, d.divId)
                                }
                            };
                            if (d.fireEvent("beforeinitialrender", d, b) !== false) {
                                e();
                                if (d.addListener) {
                                    d.addListener("update", function () {
                                        e()
                                    })
                                } d.fireEvent("initialrender", d, b)
                            }
                        }
                    };
                    CQ_Analytics.ClientContextUtils.onStoreRegistered(a, c)
                })
            }
        }, storesOptionsProvider: function () {
            var c = [];
            var a = CQ_Analytics.StoreRegistry.getStores();
            for (var b in a) {
                c.push({ value: b })
            } return c
        }, storePropertiesOptionsProvider: function (c, e) {
            var b = [];
            var a = CQ_Analytics.StoreRegistry.getStore(c);
            if (a) {
                var g = a.getPropertyNames();
                for (var d = 0;
                    d < g.length;
                    d++) {
                        var f = g[d];
                    if (!CQ.shared.XSS.KEY_REGEXP.test(f)) {
                        var h = { value: f };
                        if (e) {
                            h.text = f + " - " + a.getProperty(f)
                        } b.push(h)
                    }
                }
            } return b
        }, onStoreRegistered: function (b, c) {
            if (c) {
                var a = CQ_Analytics.StoreRegistry.getStore(b);
                if (a) {
                    c.call(a, a)
                } else {
                    CQ_Analytics.CCM.addListener("storeregister", function (f, d) {
                        if (d.getName() == b) {
                            c.call(d, d)
                        }
                    })
                }
            }
        }, onStoreInitialized: function (c, e, b) {
            if (b === true) {
                b = CQ_Analytics.ClientContextUtils.DEFAULT_INIT_DELAY
            } var d = function () {
                var f = CQ_Analytics.StoreRegistry.getStore(c);
                if (f.DELAYED_INIT_TIMEOUT) {
                    window.clearTimeout(f.DELAYED_INIT_TIMEOUT);
                    f.DELAYED_INIT_TIMEOUT = null
                } if (b > 0) {
                    f.DELAYED_INIT_TIMEOUT = window.setTimeout(function () {
                        f.DELAYED_INIT_TIMEOUT = null;
                        e.call(f, "initialize", f)
                    }, b)
                } else {
                    e.call(f, "initialize", f)
                }
            };
            var a = CQ_Analytics.StoreRegistry.getStore(c);
            if (a) {
                if (a.isInitialized()) {
                    d.call(a);
                    a.addListener("initialize", function (g, f) {
                        d.call(f)
                    })
                } else {
                    a.addListener("initialize", function (g, f) {
                        d.call(f)
                    })
                }
            } else {
                CQ_Analytics.CCM.addListener("storeregister", function (g, f) {
                    if (f.getName() == c) {
                        CQ_Analytics.ClientContextUtils.onStoreInitialized(c, e, b)
                    }
                })
            }
        }, init: function (c, b, a) {
            CQ_Analytics.ClientContextMgr.PATH = c;
            CQ_Analytics.ClientContextMgr.loadConfig(a, true);
            $CQ.ajax({ url: CQ.shared.HTTP.externalize(c + "/content/jcr:content/stores.init.js"), cache: false, async: true, dataType: "script", data: { path: b } })
        }, initUI: function (c, a, b) {
            CQ_Analytics.ClientContextUI.create(c, a, b)
        }
    }
};
CQ_Analytics.ClientContextUtils.DEFAULT_INIT_DELAY = 200;
CQ_Analytics.Variables = new function () {
    return {
        containsVariable: function (a) {
            return CQ_Analytics.Variables.getVariables(a).length > 0
        }, getVariables: function (b) {
            if (!b || typeof (b) != "string") {
                return []
            } var a = b.match(new RegExp("\\$\\{([\\w/]*)\\}", "ig"));
            return a ? a : []
        }, replaceVariables: function (e) {
            if (!e) {
                return e
            } var f = "";
            var d = e;
            var g = CQ_Analytics.Variables.getVariables(e);
            while (g.length > 0 && f.indexOf(g.join()) == -1) {
                for (var c = 0;
                    c < g.length;
                    c++) {
                        var b = CQ_Analytics.Variables.getPropertyPath(g[c]);
                    var a = CQ_Analytics.ClientContext.get(b) || "";
                    d = CQ_Analytics.Variables.replace(d, b, a)
                } f += g.join();
                g = CQ_Analytics.Variables.getVariables(d)
            } return d
        }, getPropertyPath: function (a) {
            if (!a || a.length < 2) {
                return null
            } return a.substring(2, a.length - 1)
        }, getPropertyName: function (a) {
            var c = CQ_Analytics.Variables.getPropertyPath(a);
            if (c) {
                var b = c.split("/");
                if (b.length == 3) {
                    return b[2]
                }
            } return null
        }, getStoreName: function (a) {
            var c = CQ_Analytics.Variables.getPropertyPath(a);
            if (c) {
                var b = c.split("/");
                if (b.length > 1) {
                    return b[1]
                }
            } return null
        }, replace: function (a, b, c) {
            return a.replace(new RegExp("\\$\\{" + b + "\\}", "ig"), c)
        }
    }
};
CQ_Analytics.SessionPersistence = CQ.shared.ClientSidePersistence;
CQ_Analytics.Cookie = CQ.shared.ClientSidePersistence.CookieHelper;
CQ_Analytics.Observable = function () {
    this.fireEvent = function (d) {
        if (d && this.listeners && !this.suppressEvents) {
            d = d.toLowerCase();
            var b = Array.prototype.slice.call(arguments, 0);
            var e = this.listeners.slice(0);
            for (var c = 0;
                c < e.length;
                c++) {
                    var a = e[c];
                if (d == a.event) {
                    if (a.fireFn.apply(a.scope || this || window, b) === false) {
                        return false
                    }
                }
            }
        } return true
    }
};
CQ_Analytics.Observable.prototype.addListener = function (c, a, b) {
    this.listeners = this.listeners || new Array();
    if (c && a) {
        this.listeners.push({ event: c.toLowerCase(), fireFn: a, scope: b })
    }
};
CQ_Analytics.Observable.prototype.removeListener = function (c, a) {
    this.listeners = this.listeners || new Array();
    if (c && a) {
        for (var b = 0;
            b < this.listeners.length;
            b++) {
                if (this.listeners[b].event == c && this.listeners[b].fireFn == a) {
                    this.listeners.splice(b, 1)
                }
        }
    }
};
CQ_Analytics.Observable.prototype.setSuppressEvents = function (a) {
    this.suppressEvents = a
};
CQ_Analytics.Observable.prototype.listeners = null;
CQ_Analytics.Observable.prototype.suppressEvents = false;
if (!CQ_Analytics.StoreRegistry) {
    CQ_Analytics.StoreRegistry = new function () {
        var a = {};
        return {
            register: function (b) {
                if (b.STORENAME) {
                    a[b.STORENAME] = b
                }
            }, getStores: function () {
                return a
            }, getStore: function (b) {
                return a[b]
            }
        }
    }()
} CQ_Analytics.SessionStore = function () { };
CQ_Analytics.SessionStore.prototype = new CQ_Analytics.Observable();
CQ_Analytics.SessionStore.prototype.setProperty = function (a, b) {
    if (this.data == null) {
        this.init()
    } this.data[a] = b;
    this.fireEvent("update", a)
};
CQ_Analytics.SessionStore.prototype.setProperties = function (b) {
    if (this.data == null) {
        this.init()
    } var d = [];
    for (var a in b) {
        if (b.hasOwnProperty(a)) {
            d.push(a);
            var c = b[a];
            this.data[a] = c
        }
    } if (d.length > 0) {
        this.fireEvent("update", d)
    }
};
CQ_Analytics.SessionStore.prototype.initialized = false;
CQ_Analytics.SessionStore.prototype.init = function () {
    this.initialized = true;
    this.fireEvent("initialize", this)
};
CQ_Analytics.SessionStore.prototype.getLabel = function (a) {
    return a
};
CQ_Analytics.SessionStore.prototype.getLink = function (a) {
    return a
};
CQ_Analytics.SessionStore.prototype.removeProperty = function (a) {
    if (this.data == null) {
        this.init()
    } if (this.data[a]) {
        delete this.data[a]
    } this.fireEvent("update", a)
};
CQ_Analytics.SessionStore.prototype.getPropertyNames = function (a) {
    if (this.data == null) {
        this.init()
    } a = a ? a : [];
    var b = new Array();
    for (var c in this.data) {
        if (CQ_Analytics.Utils.indexOf(a, c) == -1) {
            b.push(c)
        }
    } return b
};
CQ_Analytics.SessionStore.prototype.getSessionStore = function () {
    return this
};
CQ_Analytics.SessionStore.prototype.clear = function () {
    this.data = null
};
CQ_Analytics.SessionStore.prototype.getData = function (b) {
    if (this.data == null) {
        this.init()
    } if (b) {
        var a = {};
        for (var c in this.data) {
            if (CQ_Analytics.Utils.indexOf(b, c) == -1) {
                a[c] = this.data[c]
            }
        } return a
    } else {
        return this.data
    }
};
CQ_Analytics.SessionStore.prototype.reset = function () {
    if (this.data != null) {
        this.data = null;
        this.fireEvent("update")
    }
};
CQ_Analytics.SessionStore.prototype.getProperty = function (b, a) {
    if (this.data == null) {
        this.init()
    } var d = this.data[b];
    if (!a) {
        var c = CQ.shared.XSS.getXSSValue(d);
        return c
    } return d
};
CQ_Analytics.SessionStore.prototype.getName = function () {
    return this.STORENAME
};
CQ_Analytics.SessionStore.prototype.addInitProperty = function (a, b) {
    if (!this.initProperty) {
        this.initProperty = {}
    } this.initProperty[a] = b
};
CQ_Analytics.SessionStore.prototype.getInitProperty = function (a) {
    return this.initProperty ? this.initProperty[a] : null
};
CQ_Analytics.SessionStore.prototype.loadInitProperties = function (c, a) {
    if (c) {
        for (var b in c) {
            this.addInitProperty(b, c[b]);
            if (a && this.data && this.data[b] === undefined) {
                this.setProperty(b, c[b])
            }
        }
    }
};
CQ_Analytics.SessionStore.prototype.isInitialized = function () {
    return this.initialized
};
CQ_Analytics.PersistedSessionStore = function () { };
CQ_Analytics.PersistedSessionStore.prototype = new CQ_Analytics.SessionStore();
CQ_Analytics.PersistedSessionStore.prototype.STOREKEY = "key";
CQ_Analytics.PersistedSessionStore.prototype.setNonPersisted = function (a) {
    if (!this.nonPersisted) {
        this.nonPersisted = {}
    } this.nonPersisted[a] = true
};
CQ_Analytics.PersistedSessionStore.EXCLUDED_PROPERTIES_REGEX = "^generated*";
CQ_Analytics.PersistedSessionStore.prototype.isPersisted = function (a) {
    if (!this.nonPersisted) {
        this.nonPersisted = {}
    } return this.nonPersisted[a] !== true && !new RegExp(CQ_Analytics.PersistedSessionStore.EXCLUDED_PROPERTIES_REGEX, "ig").test(a) && !$CQ.isFunction(this.data[a]) && (typeof this.data[a]) != "object"
};
CQ_Analytics.PersistedSessionStore.prototype.getStoreKey = function () {
    return this.STOREKEY
};
CQ_Analytics.PersistedSessionStore.prototype.persist = function () {
    if (this.fireEvent("beforepersist") !== false) {
        var a = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
        a.set(this.getStoreKey(), this.toString());
        this.fireEvent("persist")
    }
};
CQ_Analytics.PersistedSessionStore.prototype.setProperty = function (a, b) {
    if (this.data == null) {
        this.init()
    } this.data[a] = b;
    if (this.isPersisted(a)) {
        this.persist()
    } this.fireEvent("update", a)
};
CQ_Analytics.PersistedSessionStore.prototype.setProperties = function (b) {
    if (this.data == null) {
        this.init()
    } var d = [];
    var e = false;
    for (var a in b) {
        if (b.hasOwnProperty(a)) {
            d.push(a);
            var c = b[a];
            this.data[a] = c;
            if (this.isPersisted(a)) {
                e = true
            }
        }
    } if (e) {
        this.persist()
    } if (d.length > 0) {
        this.fireEvent("update", d)
    }
};
CQ_Analytics.PersistedSessionStore.prototype.toString = function () {
    var b = null;
    if (this.data) {
        var a = function (e) {
            if (!e || typeof (e) != "string") {
                return e
            } var d = e;
            d = d.replace(new RegExp(",", "g"), "&#44;");
            d = d.replace(new RegExp("=", "g"), "&#61;");
            d = d.replace(new RegExp("\\|", "g"), "&#124;");
            return d
        };
        for (var c in this.data) {
            if (this.isPersisted(c) && this.data.hasOwnProperty(c)) {
                b = (b === null ? "" : b + ",");
                b += (c + "=" + a(this.data[c]))
            }
        }
    } return b
};
CQ_Analytics.PersistedSessionStore.prototype.parse = function (e) {
    var d = function (h) {
        if (!h || typeof (h) != "string") {
            return h
        } var g = h;
        g = g.replace(new RegExp("&#44;", "g"), ",");
        g = g.replace(new RegExp("&#61;", "g"), "=");
        g = g.replace(new RegExp("&#124;", "g"), "|");
        return g
    };
    var c = {};
    var f = e.split(",");
    for (var a in f) {
        if (f.hasOwnProperty(a)) {
            var b = f[a].split("=");
            if (b.length == 2) {
                c[b[0]] = d(b[1])
            }
        }
    } return c
};
CQ_Analytics.PersistedSessionStore.prototype.reset = function (a) {
    if (this.data != null) {
        this.data = {};
        this.persist();
        this.data = null;
        if (!a) {
            this.fireEvent("update")
        }
    }
};
CQ_Analytics.PersistedSessionStore.prototype.removeProperty = function (a) {
    if (this.data == null) {
        this.init()
    } if (this.data[a]) {
        delete this.data[a];
        if (this.isPersisted(a)) {
            this.persist()
        }
    } this.fireEvent("update", a)
};
CQ_Analytics.PersistedSessionStore.prototype.clear = function () {
    var a = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
    a.remove(this.getStoreKey());
    this.data = null
};
if (!CQ_Analytics.ClientContextMgr) {
    CQ_Analytics.ClientContextMgr = function () {
        this.clientcontext = null;
        this.clientcontextToServer = null;
        this.stores = {};
        this.data = null;
        this.config = null;
        this.isConfigLoaded = false;
        this.areStoresLoaded = false
    };
    CQ_Analytics.ClientContextMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.ClientContextMgr.prototype.STOREKEY = "CLIENTCONTEXT";
    CQ_Analytics.ClientContextMgr.prototype.STORENAME = "clientcontext";
    CQ_Analytics.ClientContextMgr.prototype.INITIALIZATION_EVENT_TIMER = 1000;
    CQ_Analytics.ClientContextMgr.prototype.CONFIG_PATH = CQ_Analytics.Utils.externalize("/etc/clientcontext/legacy/config.json", true);
    CQ_Analytics.ClientContextMgr.prototype.init = function () {
        if (!this.initialized) {
            this.clientcontext = {};
            this.clientcontextToServer = {}
        } var a = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
        var b = a.get(this.getStoreKey());
        if (b) {
            this.data = this.parse(b)
        } else {
            this.data = {}
        } this.initialized = true;
        this.fireEvent("initialize", this)
    };
    CQ_Analytics.ClientContextMgr.prototype.getSessionId = function () {
        if (!this.data.sessionId) {
            this.setSessionId(CQ_Analytics.Utils.getUID())
        } return this.data.sessionId
    };
    CQ_Analytics.ClientContextMgr.prototype.setSessionId = function (a) {
        if (a) {
            this.setProperty("sessionId", a)
        }
    };
    CQ_Analytics.ClientContextMgr.prototype.getVisitorId = function () {
        return this.data.visitorId
    };
    CQ_Analytics.ClientContextMgr.prototype.setVisitorId = function (a) {
        this.setProperty("visitorId", a)
    };
    CQ_Analytics.ClientContextMgr.prototype.getId = function () {
        var a = this.getVisitorId();
        if (!a) {
            return this.getSessionId()
        } return a
    };
    CQ_Analytics.ClientContextMgr.prototype.isAnonymous = function () {
        var a = this.getVisitorId();
        return (!a)
    };
    CQ_Analytics.ClientContextMgr.prototype.isMode = function (a) {
        return CQ_Analytics.ClientContextMgr.ServerStorage.isMode(a)
    };
    CQ_Analytics.ClientContextMgr.prototype.get = function (a) {
        if (this.clientcontext == null) {
            this.init()
        } if (a) {
            return this.clientcontextToServer
        } return this.clientcontext
    };
    CQ_Analytics.ClientContextMgr.prototype.register = function (c) {
        if (this.clientcontext == null) {
            this.init()
        } var a = this;
        this.clientcontext[c.getName()] = c.getData();
        this.stores[c.getName()] = c;
        CQ_Analytics.StoreRegistry.register(c);
        var b = this.getStoreConfig(c.getName());
        if (b.stats !== false && b.stats != "false") {
            this.clientcontextToServer[c.getName()] = c.getData(b.excludedFromStats)
        } if (this.initTimer) {
            window.clearTimeout(this.initTimer);
            this.initTimer = null
        } var d = this.isConfigLoaded && typeof this.config.initializationEventTimer !== "undefined" ? this.config.initializationEventTimer : this.INITIALIZATION_EVENT_TIMER;
        this.initTimer = window.setTimeout(function () {
            a.fireEvent("storesinitialize");
            a.areStoresInitialized = true
        }, d);
        c.addListener("update", function () {
            a.update(c)
        });
        CQ_Analytics.ClientContextMgr.ServerStorage.handleStoreRegistration(c);
        this.addListener("clear", function () {
            c.clear()
        });
        this.fireEvent("storeregister", c);
        this.fireEvent("storeupdate", c)
    };
    CQ_Analytics.ClientContextMgr.prototype.update = function (b) {
        if (this.clientcontext == null) {
            this.init()
        } this.clientcontext[b.getName()] = b.getData();
        var a = this.getStoreConfig(b.getName());
        if (a.stats !== false && a.stats != "false") {
            this.clientcontextToServer[b.getName()] = b.getData(a.excludedFromStats)
        } this.fireEvent("storeupdate", b)
    };
    CQ_Analytics.ClientContextMgr.prototype.startPosting = function () {
        return CQ_Analytics.ClientContextMgr.ServerStorage.startPosting()
    };
    CQ_Analytics.ClientContextMgr.prototype.stopPosting = function () {
        return CQ_Analytics.ClientContextMgr.ServerStorage.stopPosting()
    };
    CQ_Analytics.ClientContextMgr.prototype.post = function () {
        return CQ_Analytics.ClientContextMgr.ServerStorage.post()
    };
    CQ_Analytics.ClientContextMgr.prototype.getCCMToJCR = function () {
        return CQ_Analytics.ClientContextMgr.ServerStorage.getCCMToJCR()
    };
    CQ_Analytics.ClientContextMgr.prototype.getName = function () {
        return this.STORENAME
    };
    CQ_Analytics.ClientContextMgr.prototype.clear = function () {
        this.clientcontext = null;
        this.clientcontextToServer = null;
        this.fireEvent("clear")
    };
    CQ_Analytics.ClientContextMgr.prototype.getRegisteredStore = function (a) {
        return this.stores && this.stores[a] ? this.stores[a] : null
    };
    CQ_Analytics.ClientContextMgr.prototype.loadConfig = function (c, autoConfig) {
        var setConfig = function (ccm, config) {
            if (typeof config === "undefined") {
                config = {}
            } ccm.config = config;
            ccm.isConfigLoaded = true;
            ccm.fireEvent("configloaded");
            ccm.fireEvent("storesloaded");
            ccm.areStoresLoaded = true
        };
        if (c) {
            setConfig(this, c)
        } else {
            if (!autoConfig) {
                var params = {};
                params.path = CQ_Analytics.Utils.getPagePath();
                params.cq_ck = new Date().valueOf();
                var url = this.CONFIG_PATH;
                url += "?" + CQ_Analytics.Utils.urlEncode(params);
                CQ_Analytics.Utils.load(url, function (data, status, response) {
                    var config = {};
                    try {
                        config = eval("config = " + response.responseText)
                    } catch (error) { } setConfig(this, config)
                }, this)
            } else {
                setConfig(this, {})
            }
        }
    };
    CQ_Analytics.ClientContextMgr.prototype.getConfig = function () {
        return this.config
    };
    CQ_Analytics.ClientContextMgr.prototype.getStoreConfig = function (a) {
        if (this.config && this.config.configs && this.config.configs[a] && this.config.configs[a]["store"]) {
            return this.config.configs[a]["store"]
        } return {}
    };
    CQ_Analytics.ClientContextMgr.prototype.getEditConfig = function (a) {
        if (this.config && this.config.configs && this.config.configs[a] && this.config.configs[a]["edit"]) {
            return this.config.configs[a]["edit"]
        } return {}
    };
    CQ_Analytics.ClientContextMgr.prototype.getUIConfig = function (a) {
        if (this.config && this.config.configs && this.config.configs[a] && this.config.configs[a]["ui"]) {
            return this.config.configs[a]["ui"]
        } return {}
    };
    CQ_Analytics.ClientContextMgr.prototype.getInitialData = function (a) {
        if (this.config && this.config.data && this.config.data[a]) {
            return this.config.data[a]
        } return {}
    };
    CQ_Analytics.ClientContextMgr.prototype.getStores = function () {
        return this.stores
    };
    CQ_Analytics.ClientContextMgr.prototype.onReady = function (b, a) {
        if (b) {
            if (this.areStoresLoaded) {
                b.call(a)
            } else {
                this.addListener("storesloaded", b, a)
            }
        }
    };
    CQ_Analytics.ClientContextMgr = new CQ_Analytics.ClientContextMgr();
    CQ_Analytics.CCM = CQ_Analytics.ClientContextMgr;
    CQ_Analytics.ClickstreamcloudMgr = CQ_Analytics.CCM;
    CQ_Analytics.ContextCloudMgr = CQ_Analytics.CCM;
    CQ_Analytics.ClientContextMgr.PATH = null;
    CQ_Analytics.ClientContextMgr.getClientContextURL = function (a) {
        return CQ_Analytics.ClientContextMgr.PATH + a
    };
    window.setTimeout(function () {
        CQ_Analytics.CCM.init()
    }, 1);
    CQ_Analytics.Utils.addListener(window, "unload", function () {
        try {
            for (var b in CQ_Analytics.ClientContextMgr) {
                delete CQ_Analytics.ClientContextMgr[b]
            } CQ_Analytics.ClientContextMgr = null
        } catch (a) { } CQ_Analytics.CCM = null
    })
} if (window.CQ_Analytics && window.CQ_Analytics.ClientContextMgr && !window.CQ_Analytics.ClientContextMgr.ServerStorage) {
    CQ_Analytics.ClientContextMgr.ServerStorage = function () {
        this.posting = false;
        this.initialized = false
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_MODE_PAGELOAD = 1;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_MODE_TIMER = 2;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_MODE_DATAUPDATE = 4;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_TIMER = 600;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_PROCESS_TIMER = 60;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_MODE = 6;
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.POST_PATH = "/var/statistics/";
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.init = function () {
        if (this.isMode(CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_TIMER)) {
            var a = this;
            var b = function () {
                a.timer = window.setInterval(function () {
                    try {
                        var d = parseInt(a.data.lastPost);
                        var f = false;
                        if (isNaN(d)) {
                            f = true
                        } else {
                            var e = new Date().getTime();
                            if (e > d + CQ_Analytics.ClientContextMgr.ServerStorage.POST_TIMER * 1000) {
                                f = true
                            }
                        }
                    } catch (c) { } if (f) {
                        a.post()
                    }
                }, CQ_Analytics.ClientContextMgr.ServerStorage.POST_PROCESS_TIMER * 1000)
            };
            b.call(this)
        } this.initialized = true
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.isMode = function (a) {
        return (CQ_Analytics.CCM.POST_MODE & a) > 0
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.handleStoreRegistration = function (a) {
        if (!this.initialized) {
            this.init()
        } if (this.isMode(CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_DATAUPDATE)) {
            a.addListener("persist", function () {
                CQ_Analytics.ClientContextMgr.ServerStorage.post(a)
            })
        }
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.startPosting = function () {
        this.posting = true
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.stopPosting = function () {
        this.posting = false
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.post = function (d, f) {
        if (this.posting || f) {
            try {
                var g = this.getCCMToJCR(d);
                var e = CQ_Analytics.Utils.getTimestamp();
                g["./jcr:primaryType"] = "nt:unstructured";
                g["./sessionId"] = CQ_Analytics.CCM.getSessionId();
                var c = this.POST_PATH + "clientcontext/";
                if (CQ_Analytics.CCM.isAnonymous()) {
                    var a = CQ_Analytics.Utils.insert(CQ_Analytics.CCM.getId(), 2, "/");
                    c += "anonymous/" + a + "/" + e
                } else {
                    c += "users/" + CQ_Analytics.CCM.getId() + "/" + e
                } CQ_Analytics.Utils.post(c, null, g);
                this.lastPost = e
            } catch (b) { }
        }
    };
    CQ_Analytics.ClientContextMgr.ServerStorage.prototype.getCCMToJCR = function (g) {
        var c = CQ_Analytics.CCM.get(true);
        var e = {};
        for (var j in c) {
            if (!g || j == g) {
                var a = c[j], b = encodeURIComponent(j);
                var f = typeof a;
                if (f == "object") {
                    for (var d in a) {
                        var h = a[d];
                        d = d.replace(":", "/");
                        e["./" + j + "/./" + d] = h
                    }
                } else {
                    e["./" + j] = a
                }
            }
        } return e
    };
    CQ_Analytics.ClientContextMgr.ServerStorage = new CQ_Analytics.ClientContextMgr.ServerStorage();
    CQ_Analytics.ClickstreamcloudMgr.POST_MODE_PAGELOAD = CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_PAGELOAD;
    CQ_Analytics.ClickstreamcloudMgr.POST_MODE_TIMER = CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_TIMER;
    CQ_Analytics.ClickstreamcloudMgr.POST_MODE_DATAUPDATE = CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE_DATAUPDATE;
    CQ_Analytics.ClickstreamcloudMgr.POST_TIMER = CQ_Analytics.ClientContextMgr.ServerStorage.POST_PROCESS_TIMER;
    CQ_Analytics.ClickstreamcloudMgr.POST_PROCESS_TIMER = CQ_Analytics.ClientContextMgr.ServerStorage.POST_PROCESS_TIMER;
    CQ_Analytics.ClickstreamcloudMgr.POST_MODE = CQ_Analytics.ClientContextMgr.ServerStorage.POST_MODE;
    CQ_Analytics.ClickstreamcloudMgr.POST_PATH = CQ_Analytics.ClientContextMgr.ServerStorage.POST_PATH
} CQ_Analytics.Percentile = {};
CQ_Analytics.Percentile.matchesPercentiles = function (b) {
    var d = ClientContext.get("/surferinfo/percentile");
    if (!d) {
        d = Math.round(Math.random() * 100);
        ClientContext.set("/surferinfo/percentile", d)
    } else {
        d = Number(d)
    } for (var c = 0;
        c < b.length;
        c++) {
            var a = b[c];
        if ((Number(a.start) <= d) && (d < Number(a.end))) {
            return true
        }
    } return false
};
if (!CQ_Analytics.SegmentMgr) {
    CQ_Analytics.SegmentMgr = function () {
        this.SEGMENTATION_ROOT = "/etc/segmentation";
        this.SEGMENT_SELECTOR = ".segment.js";
        this.SEGMENTATION_SCRIPT_LOADER = "cq-segmentation-loader";
        this.segments = {};
        this.boosts = {};
        var a = this;
        this.fireUpdate = function () {
            a.fireEvent("update")
        };
        this.init()
    };
    CQ_Analytics.SegmentMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.SegmentMgr.prototype.STORENAME = "segments";
    CQ_Analytics.SegmentMgr.prototype.register = function (a, c, b) {
        this.segments[a] = c;
        if (this.rulesCache && this.rulesCache[a]) {
            this.rulesCache[a] = false
        } this.boosts[a] = !isNaN(b) ? parseInt(b) : 0;
        this.fireUpdate()
    };
    CQ_Analytics.SegmentMgr.prototype.resolveArray = function (e, g, b) {
        g = g || CQ_Analytics.ClientContextMgr.get();
        if (!(e instanceof Array)) {
            return this.resolve(e, g)
        } b = (b == "AND" ? "AND" : "OR");
        var a = (b == "AND");
        for (var d = 0;
            d < e.length;
            d++) {
                var f = e[d];
            var c = this.resolve(f, g);
            if (b == "AND") {
                if (c !== true) {
                    return c
                }
            } else {
                if (c === true) {
                    return true
                }
            }
        } return a
    };
    CQ_Analytics.SegmentMgr.prototype.resolve = function (segmentPath, clientcontext) {
        clientcontext = clientcontext || CQ_Analytics.ClientContextMgr.get();
        if (!segmentPath) {
            return false
        } if (segmentPath instanceof Array) {
            return this.resolveArray(segmentPath, clientcontext)
        } if (segmentPath.indexOf(this.SEGMENTATION_ROOT) != 0) {
            return false
        } if (segmentPath == this.SEGMENTATION_ROOT) {
            return true
        } if (!this.segments[segmentPath]) {
            return true
        } var parent = segmentPath.substring(0, segmentPath.lastIndexOf("/"));
        if (parent.indexOf(this.SEGMENTATION_ROOT) == 0) {
            var pres = this.resolve(parent, clientcontext);
            if (pres !== true) {
                return pres
            }
        } var rules = "function(clientcontext, contextcloud, clickstreamcloud) { return true ";
        rules += " && ( " + this.segments[segmentPath] + " ) ";
        rules += ";}";
        var res = true;
        try {
            var f = null;
            this.rulesCache = this.rulesCache || {};
            if (this.rulesCache[segmentPath]) {
                f = this.rulesCache[segmentPath]
            } else {
                eval("f = " + rules + "");
                this.rulesCache[segmentPath] = f
            } var e = (f == null || f(clientcontext, clientcontext, clientcontext));
            res = res && (e === true)
        } catch (error) {
            return "Unresolved - Error while evaluating segment " + segmentPath + " : " + error.message
        } return res
    };
    CQ_Analytics.SegmentMgr.prototype.getResolved = function (c) {
        c = c || CQ_Analytics.ClientContextMgr.get();
        var a = new Array();
        for (var b in this.segments) {
            if (this.resolve(b, c) === true) {
                a.push(b)
            }
        } return a
    };
    CQ_Analytics.SegmentMgr.prototype.getMaxBoost = function (e, g) {
        if (!(e instanceof Array)) {
            return this.getBoost(e)
        } var c = 0;
        for (var d = 0;
            d < e.length;
            d++) {
                var f = e[d];
            if (this.resolve(f, g) === true) {
                var a = this.boosts[f] || 0;
                if (a > c) {
                    c = a
                }
            }
        } return c
    };
    CQ_Analytics.SegmentMgr.prototype.getBoost = function (a) {
        if (!(a instanceof Array)) {
            a = [a]
        } return this.boosts[a] || 0
    };
    CQ_Analytics.SegmentMgr.prototype.reload = function (path) {
        var url = path;
        if (!url) {
            url = this.SEGMENTATION_ROOT
        } if (url) {
            if (url.indexOf(this.SEGMENT_SELECTOR) == -1) {
                url += this.SEGMENT_SELECTOR
            } try {
                url += (url.indexOf("?") === -1 ? "?" : "&") + "_=" + (new Date().getTime());
                CQ_Analytics.Utils.load(url, function (config, status, response) {
                    if (response && response.responseText) {
                        eval(response.responseText)
                    }
                }, this);
                var response = CQ.HTTP.get(scripts[i].src)
            } catch (err) { }
        }
    };
    CQ_Analytics.SegmentMgr.prototype.getSessionStore = function () {
        return this
    };
    CQ_Analytics.SegmentMgr.prototype.getProperty = function (a) {
        return a
    };
    CQ_Analytics.SegmentMgr.prototype.getLink = function (a) {
        return a + ".html"
    };
    CQ_Analytics.SegmentMgr.prototype.getLabel = function (c) {
        if (c) {
            var b = c;
            var a = b.lastIndexOf("/");
            if (a != -1) {
                b = b.substring(a + 1, b.length)
            } var d = this.resolve(c);
            if (d === true) {
                return b
            } else {
                if (d !== true) {
                    return '<span class="invalid" title="' + d + '" alt="' + d + '">' + b + "</span>"
                }
            }
        } return c
    };
    CQ_Analytics.SegmentMgr.prototype.getPropertyNames = function () {
        return this.getResolved()
    };
    CQ_Analytics.SegmentMgr = new CQ_Analytics.SegmentMgr();
    CQ_Analytics.SegmentMgr.loadSegments = function (a) {
        CQ_Analytics.SegmentMgr.areSegmentsLoaded = false;
        if (!a || (a.length === 0)) {
            CQ_Analytics.SegmentMgr.areSegmentsLoaded = true;
            CQ_Analytics.SegmentMgr.fireEvent("segmentsload")
        } else {
            $CQ.ajax({ url: CQ.shared.HTTP.externalize(a + this.SEGMENT_SELECTOR), dataType: "script", async: true, cache: true }).complete(function () {
                CQ_Analytics.SegmentMgr.areSegmentsLoaded = true;
                CQ_Analytics.SegmentMgr.fireEvent("segmentsload")
            })
        }
    };
    CQ_Analytics.SegmentMgr.renderer = function (a, c) {
        if (a && a.STORENAME == CQ_Analytics.SegmentMgr.STORENAME) {
            var e = a.getPropertyNames();
            var f = [];
            f.push("<div>");
            for (var d = 0;
                d < e.length;
                d++) {
                    var b = e[d];
                f.push('<span title="' + a.getProperty(b) + '" ><a href="' + CQ.shared.HTTP.externalize(a.getLink(b)) + '"  title="' + a.getProperty(b) + '" >' + a.getLabel(b) + "</a></span>")
            } f.push("</div>");
            $CQ("#" + c).children().remove();
            $CQ("#" + c).append(f.join(""))
        }
    };
    CQ_Analytics.ClientContextMgr.addListener("storeupdate", CQ_Analytics.SegmentMgr.fireUpdate);
    CQ_Analytics.Utils.addListener(window, "unload", function () {
        try {
            for (var b in CQ_Analytics.SegmentMgr) {
                delete CQ_Analytics.SegmentMgr[b]
            }
        } catch (a) { } CQ_Analytics.SegmentMgr = null
    })
} if (!CQ_Analytics.StrategyMgr) {
    CQ_Analytics.StrategyMgr = function () {
        this.strategies = {}
    };
    CQ_Analytics.StrategyMgr.prototype = {};
    CQ_Analytics.StrategyMgr.prototype.isRegistered = function (a) {
        return !!this.strategies[a]
    };
    CQ_Analytics.StrategyMgr.prototype.register = function (b, a) {
        if (typeof a == "function") {
            this.strategies[b] = a
        }
    };
    CQ_Analytics.StrategyMgr.prototype.choose = function (b, a) {
        if (a.length == 1) {
            return a[0]
        } if (this.strategies[b]) {
            return this.strategies[b].call(this, a)
        } return null
    };
    CQ_Analytics.StrategyMgr = new CQ_Analytics.StrategyMgr()
} CQ_Analytics.StrategyMgr.register("clickstream-score", function (h) {
    if (h.length == 1) {
        return h[0]
    } var a = [];
    if (window.CQ_Analytics && window.CQ_Analytics.TagCloudMgr) {
        var m = CQ_Analytics.TagCloudMgr.getTags();
        m = m || {};
        var l = -1;
        for (var e = 0;
            e < h.length;
            e++) {
                var g = 0;
            var k = h[e].tags;
            if (k) {
                for (var d = 0;
                    d < k.length;
                    d++) {
                        var f = k[d].tagID;
                    g += parseInt(m[f]) || 0
                }
            } if (g == l) {
                a.push(h[e])
            } else {
                if (g > l) {
                    a = [];
                    a.push(h[e]);
                    l = g
                }
            }
        }
    } else {
        a = h
    } if (a.length == 1) {
        return a[0]
    } var b = null;
    if (window.CQ_Analytics && window.CQ_Analytics.PageDataMgr) {
        b = CQ_Analytics.PageDataMgr.getProperty("random")
    } if (!b) {
        b = window.CQ_StrategyRandom
    } if (!b) {
        b = window.CQ_StrategyRandom = Math.random()
    } if (parseFloat(b) > 1) {
        b = 1 / b
    } if (parseFloat(b) == 1) {
        b = 0
    } var c = Math.floor(b * a.length);
    return a[c]
});
CQ_Analytics.StrategyMgr.register("first", function (a) {
    return a[0]
});
CQ_Analytics.StrategyMgr.register("random", function (c) {
    var a = null;
    if (window.CQ_Analytics && window.CQ_Analytics.PageDataMgr) {
        a = CQ_Analytics.PageDataMgr.getProperty("random")
    } if (!a) {
        a = window.CQ_StrategyRandom
    } if (!a) {
        a = window.CQ_StrategyRandom = Math.random()
    } if (parseFloat(a) > 1) {
        a = 1 / a
    } if (parseFloat(a) == 1) {
        a = 0
    } var b = Math.floor(a * c.length);
    return c[b]
});
if (!CQ_Analytics.PageDataMgr) {
    CQ_Analytics.PageDataMgr = function () { };
    CQ_Analytics.PageDataMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.PageDataMgr.prototype.STORENAME = "pagedata";
    CQ_Analytics.PageDataMgr.prototype.FORCE_EXPERIENCE_COOKIE = "cq-forceexperience";
    CQ_Analytics.PageDataMgr.prototype.init = function () {
        this.data = {};
        for (var a in this.initProperty) {
            this.data[a] = this.initProperty[a]
        } this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.PageDataMgr.prototype.getLabel = function (a) {
        return a
    };
    CQ_Analytics.PageDataMgr.prototype.getLink = function (a) {
        return ""
    };
    CQ_Analytics.PageDataMgr.prototype.setExperience = function (a) {
        CQ.shared.HTTP.setCookie(CQ_Analytics.PageDataMgr.FORCE_EXPERIENCE_COOKIE, a, "/")
    };
    CQ_Analytics.PageDataMgr.prototype.getExperience = function () {
        return CQ.shared.HTTP.getCookie(CQ_Analytics.PageDataMgr.FORCE_EXPERIENCE_COOKIE, "/")
    };
    CQ_Analytics.PageDataMgr.prototype.clearExperience = function () {
        CQ.shared.HTTP.clearCookie(CQ_Analytics.PageDataMgr.FORCE_EXPERIENCE_COOKIE, "/")
    };
    CQ_Analytics.PageDataMgr = new CQ_Analytics.PageDataMgr();
    CQ_Analytics.CCM.addListener("configloaded", function () {
        this.loadInitProperties(CQ_Analytics.CCM.getInitialData(this.getName()));
        this.init();
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.PageDataMgr)
} CQ_Analytics.BrowserInfo = function () {
    var g = navigator.userAgent.toLowerCase();
    var d = function (b) {
        return b.test(g)
    };
    var f = function () {
        if (d(/opera/)) {
            return { browserFamily: "Opera", browserVersion: "" }
        } if (d(/trident/)) {
            var b = { "7.0": "11", "6.0": "10", "5.0": "9", "4.0": "8" };
            var k = g.match(/trident\/([0-9\.]*)/);
            var j = "";
            if (k && k.length > 1) {
                j = b[k[1]]
            } return { browserFamily: "IE", browserVersion: j }
        } if (d(/edge/)) {
            var k = g.match(/edge\/([0-9]*)/);
            var j = "";
            if (k && k.length > 1) {
                j = k[1]
            } return { browserFamily: "Edge", browserVersion: j }
        } if (d(/chrome/)) {
            return { browserFamily: "Chrome", browserVersion: "" }
        } if (d(/safari/)) {
            if (d(/applewebkit\/4/)) {
                return { browserFamily: "Safari", browserVersion: "2" }
            } if (d(/version\/3/)) {
                return { browserFamily: "Safari", browserVersion: "3" }
            } if (d(/version\/4/)) {
                return { browserFamily: "Safari", browserVersion: "4" }
            } if (d(/version\/5/)) {
                return { browserFamily: "Safari", browserVersion: "5" }
            } if (d(/version\/6/)) {
                return { browserFamily: "Safari", browserVersion: "6" }
            } return { browserFamily: "Safari", browserVersion: "7 or higher" }
        } if (d(/webkit/)) {
            return { browserFamily: "WebKit", browserVersion: "" }
        } if (d(/msie/)) {
            if (d(/msie 6/)) {
                return { browserFamily: "IE", browserVersion: "6" }
            } if (d(/msie 7/)) {
                return { browserFamily: "IE", browserVersion: "7" }
            } if (d(/msie 8/)) {
                return { browserFamily: "IE", browserVersion: "8" }
            } if (d(/msie 9/)) {
                return { browserFamily: "IE", browserVersion: "9" }
            } if (d(/msie 10/)) {
                return { browserFamily: "IE", browserVersion: "10" }
            } return { browserFamily: "IE", browserVersion: "11 or higher" }
        } if (d(/gecko/)) {
            if (d(/rv:1\.8/)) {
                return { browserFamily: "Firefox", browserVersion: "2" }
            } if (d(/rv:1\.9/)) {
                return { browserFamily: "Firefox", browserVersion: "3" }
            } if (d(/rv:2.0/)) {
                return { browserFamily: "Firefox", browserVersion: "4" }
            } if (d(/rv:5./)) {
                return { browserFamily: "Firefox", browserVersion: "5" }
            } if (d(/rv:6./)) {
                return { browserFamily: "Firefox", browserVersion: "6" }
            } if (d(/rv:7./)) {
                return { browserFamily: "Firefox", browserVersion: "7" }
            } if (d(/rv:8./)) {
                return { browserFamily: "Firefox", browserVersion: "8" }
            } if (d(/rv:9./)) {
                return { browserFamily: "Firefox", browserVersion: "9" }
            } return { browserFamily: "Firefox", browserVersion: "10 or higher" }
        } var l = d(/adobeair/);
        if (l) {
            return { browserFamily: "Adobe AIR", browserVersion: "" }
        } return { browserFamily: "Unresolved", browserVersion: "Unresolved" }
    };
    var e = function () {
        if (d(/windows 98|win98/)) {
            return "Windows 98"
        } if (d(/windows nt 5.0|windows 2000/)) {
            return "Windows 2000"
        } if (d(/windows nt 5.1|windows xp/)) {
            return "Windows XP"
        } if (d(/windows nt 5.2/)) {
            return "Windows Server 2003"
        } if (d(/windows nt 6.0/)) {
            return "Windows Vista"
        } if (d(/windows nt 6.1/)) {
            return "Windows 7"
        } if (d(/windows nt 6.2/)) {
            return "Windows 8"
        } if (d(/windows nt 6.3/)) {
            return "Windows 8.1"
        } if (d(/windows nt 10.0/)) {
            return "Windows 10"
        } if (d(/windows nt 4.0|winnt4.0|winnt/)) {
            return "Windows NT 4.0"
        } if (d(/windows me/)) {
            return "Windows ME"
        } if (d(/mac os x/)) {
            if (d(/ipad/) || d(/iphone/)) {
                return "iOS"
            } return "Mac OS X"
        } if (d(/macintosh|mac os/)) {
            return "Mac OS"
        } if (d(/android/)) {
            return "Android"
        } if (d(/linux/)) {
            return "Linux"
        } return "Unresolved"
    };
    var c = function () {
        if (d(/ipad/)) {
            return "iPad"
        } if (d(/iphone/)) {
            return "iPhone"
        } if (d(/mobi/)) {
            return "Mobile"
        } return "Desktop"
    };
    var a = f.call();
    this.browserFamily = a.browserFamily;
    this.browserVersion = a.browserVersion;
    this.OSName = e.call();
    this.deviceType = c.call();
    this.ua = g;
    var h = /^https/i.test(window.location.protocol);
    this.screenResolution = screen.width + "x" + screen.height
};
CQ_Analytics.BrowserInfo.prototype = {
    getBrowserName: function () {
        return this.browserFamily + " " + this.browserVersion
    }, getBrowserFamily: function () {
        return this.browserFamily
    }, getBrowserVersion: function () {
        return this.browserVersion
    }, getOSName: function () {
        return this.OSName
    }, getScreenResolution: function () {
        return this.screenResolution
    }, getDeviceType: function () {
        return this.deviceType
    }, getUserAgent: function () {
        return this.ua
    }, isMobile: function (a) {
        if (!a) {
            a = this.getDeviceType()
        } a = a ? a.toLowerCase() : "desktop";
        return a != "desktop"
    }, isIE: function (a) {
        return this.getBrowserFamily() == "IE" && (a ? this.getBrowserVersion() == a : true)
    }, isIE6: function () {
        return this.isIE("6")
    }, isIE7: function () {
        return this.isIE("7")
    }, isIE8: function () {
        return this.isIE("8")
    }, isIE9: function () {
        return this.isIE("9")
    }
};
CQ_Analytics.BrowserInfoInstance = new CQ_Analytics.BrowserInfo();
if (!CQ_Analytics.MousePositionMgr) {
    CQ_Analytics.MousePositionMgr = function () {
        this.position = { x: 0, y: 0 };
        this.getPageX = function (c) {
            var b = c.pageX;
            if (!b && 0 !== b) {
                b = c.clientX || 0
            } return b
        };
        this.getPageY = function (b) {
            var c = b.pageY;
            if (!c && 0 !== c) {
                c = b.clientY || 0
            } return c
        };
        var a = this;
        this.timer = null;
        $CQ(document).bind("mousemove", function (h, g, f, l) {
            var j = h || window.event;
            if (j) {
                if (!a.timer) {
                    var d = a.getPageX(j);
                    var k = a.getPageY(j);
                    a.timer = setTimeout(function () {
                        a.setPosition(d, k);
                        a.timer = null
                    }, 500)
                }
            }
        });
        this.init()
    };
    CQ_Analytics.MousePositionMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.MousePositionMgr.prototype.STORENAME = "mouseposition";
    CQ_Analytics.MousePositionMgr.prototype.setPosition = function (a, b) {
        this.position.x = a;
        this.position.y = b;
        this.fireEvent("update")
    };
    CQ_Analytics.MousePositionMgr.prototype.getProperty = function (a) {
        return this.position[a]
    };
    CQ_Analytics.MousePositionMgr.prototype.getLabel = function (a) {
        return a
    };
    CQ_Analytics.MousePositionMgr.prototype.getLink = function (a) {
        return ""
    };
    CQ_Analytics.MousePositionMgr.prototype.getPropertyNames = function () {
        var a = new Array();
        for (var b in this.position) {
            a.push(b)
        } return a
    };
    CQ_Analytics.MousePositionMgr.prototype.getSessionStore = function () {
        return this
    };
    CQ_Analytics.MousePositionMgr.prototype.getData = function (a) {
        return this.position
    };
    CQ_Analytics.MousePositionMgr.prototype.clear = function () {
        this.position = {}
    };
    CQ_Analytics.MousePositionMgr = new CQ_Analytics.MousePositionMgr();
    CQ_Analytics.CCM.register(CQ_Analytics.MousePositionMgr)
} if (!CQ_Analytics.EventDataMgr) {
    CQ_Analytics.EventDataMgr = function () { };
    CQ_Analytics.EventDataMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.EventDataMgr.prototype.STORENAME = "eventdata";
    CQ_Analytics.EventDataMgr.prototype.init = function () {
        this.data = {};
        for (var a in this.initProperty) {
            this.data[a] = this.initProperty[a]
        } this.initialized = true;
        this.fireEvent("initialize", this);
        if (typeof (this.initProperty) != "undefined") {
            this.fireEvent("update")
        }
    };
    CQ_Analytics.EventDataMgr.prototype.getLabel = function (a) {
        return a
    };
    CQ_Analytics.EventDataMgr.prototype.getLink = function (a) {
        return ""
    };
    CQ_Analytics.EventDataMgr = new CQ_Analytics.EventDataMgr();
    CQ_Analytics.EventDataMgr.init();
    CQ_Analytics.CCM.register(CQ_Analytics.EventDataMgr)
} if (!window.CQ_Context) {
    window.CQ_Context = function () { };
    window.CQ_Context.prototype = new CQ_Analytics.Observable();
    window.CQ_Context.prototype.getProfile = function () {
        return (function () {
            return {
                getUserId: function () {
                    return this.getProperty("authorizableId")
                }, getDisplayName: function () {
                    var a = this.getProperty("formattedName");
                    if (a) {
                        return a
                    } a = this.getProperty("displayName");
                    if (a) {
                        return a
                    } return this.getUserId()
                }, getFirstname: function () {
                    return this.getProperty("givenName")
                }, getLastname: function () {
                    return this.getProperty("familyName")
                }, getEmail: function () {
                    return this.getProperty("email")
                }, getProperty: function (a) {
                    if (window.CQ_Analytics && window.CQ_Analytics.ProfileDataMgr) {
                        return CQ_Analytics.ProfileDataMgr.getProperty(a)
                    } return ""
                }, getProperties: function () {
                    if (window.CQ_Analytics && window.CQ_Analytics.ProfileDataMgr) {
                        return CQ_Analytics.ProfileDataMgr.getData()
                    } return {}
                }, getAvatar: function () {
                    return this.getProperty("avatar")
                }, onUpdate: function (a, b) {
                    if (a && CQ_Analytics && CQ_Analytics.ProfileDataMgr) {
                        CQ_Analytics.ProfileDataMgr.addListener("update", a, b || this)
                    }
                }
            }
        })()
    };
    window.CQ_Context = new window.CQ_Context()
} CQ_Analytics.Engine = function () {
    window.CQ_trackTeasersStats = true;
    function l() {
        return !!(window.CQ && CQ.WCM && CQ.WCM.isEditMode())
    } function a() {
        return !!(window.CQ && CQ.WCM && CQ.WCM.isPreviewMode())
    } function e(p) {
        var n = $CQ.Deferred();
        var o = CQ.WCM.getEditable(p);
        if (o) {
            n.resolve(o)
        } else {
            CQ.WCM.onEditableReady(p, function (q) {
                n.resolve(q)
            })
        } return n.promise()
    } function h(o, n) {
        if (!CQ_Analytics.loadedTeasersStack) {
            CQ_Analytics.loadedTeasersStack = [];
            $CQ(window).unload(function () {
                try {
                    var p = CQ_Analytics.loadedTeasersStack;
                    if (p) {
                        delete CQ_Analytics.loadedTeasersStack;
                        var r = n;
                        for (var s = 0;
                            s < p.length;
                            s++) {
                                r = CQ.shared.HTTP.addParameter(r, "path", p[s])
                        } CQ.shared.HTTP.get(r, function () { })
                    }
                } catch (q) { }
            })
        } CQ_Analytics.loadedTeasersStack.push(o.path)
    } function f(t, s, p) {
        var r = "", u;
        function n(z, y, A, x) {
            return '<a href="' + y + '" class="cq-teaser-segment-link"><img src="' + A + '" class="cq-teaser-decision-thumbnail ' + (x ? "cq-teaser-decision-match" : "cq-teaser-decision-nomatch") + '"></a>' + z + "<br>"
        } for (var q = 0;
            q < t.length;
            q++) {
                var o = t[q];
            var w = CQ.shared.HTTP.externalize(o.teaser.path + ".html");
            if (o.hasOwnProperty("boost")) {
                if (o.noSegment) {
                    u = CQ.I18n.getMessage("Experience: {0} - match (no segments, boost = {1})", [o.teaser.title, o.boost])
                } else {
                    u = CQ.I18n.getMessage("Experience: {0} - match (boost = {1})", [o.teaser.title, o.boost])
                } var v = n(u, w, o.teaser.thumbnail, true);
                if (s === o.teaser.path) {
                    r += "<b>" + v + "</b>"
                } else {
                    r += v
                }
            } else {
                if (o.unknownSegment) {
                    u = CQ.I18n.getMessage("Experience: {0} - no match (unknown segment)", [o.teaser.title])
                } else {
                    u = CQ.I18n.getMessage("Experience: {0} - no match", [o.teaser.title])
                } r += n(u, w, o.teaser.thumbnail, false)
            }
        } r += "<br>";
        if (p) {
            r += CQ.I18n.getMessage("Strategy <b>{0}</b> selected current teaser.", p)
        } else {
            r += CQ.I18n.getMessage("No strategy configured, used the first match.")
        } r += "<br>";
        return r
    } function m(p, o, n, q) {
        p.done(function (r) {
            if (r.teaserToolTip) {
                r.teaserToolTip.hide();
                r.teaserToolTip.remove()
            } r.teaserToolTip = new CQ.Ext.Tip({ html: f(o, n, q), title: CQ.I18n.getMessage("Selection decision"), width: 450, autoHide: false, closable: true, height: 300, floating: true, autoHeight: false, bodyStyle: "overflow-y: scroll;" });
            r.on(CQ.wcm.EditRollover.EVENT_SHOW_HIGHTLIGHT, function (s) {
                if (!this.teaserInfoButton) {
                    this.teaserInfoButton = CQ.Ext.DomHelper.append("CQ", { tag: "div", cls: "x-tool x-tool-help cq-teaser-tooltip-tool" }, true);
                    this.teaserInfoButton.position("absolute");
                    this.teaserInfoButton.on("click", function () {
                        var t = this.getXY();
                        r.teaserToolTip.setPosition(t[0] - 460, t[1] - 100);
                        r.teaserToolTip.show()
                    })
                } this.teaserInfoButton.anchorTo(s.frameBottom.getEl(), "tr", [-26, -15]);
                this.teaserInfoButton.show()
            });
            r.on(CQ.wcm.EditRollover.EVENT_HIDE_HIGHTLIGHT, function (s) {
                if (this.teaserInfoButton) {
                    this.teaserInfoButton.hide()
                }
            })
        })
    } function k(n) {
        n.done(function (o) {
            if (o.teaserToolTip) {
                o.teaserToolTip.hide();
                o.teaserToolTip.remove();
                o.teaserToolTip = null
            }
        })
    } function c(w, v) {
        var r = [];
        var t = 0;
        for (var p = 0;
            p < w.length;
            p++) {
                var o = w[p], s = o.segments;
            var n;
            if (v) {
                n = { teaser: o };
                v.push(n)
            } var q = !s || s.length === 0;
            if (q && n) {
                n.noSegment = true
            } if (!q && CQ_Analytics.SegmentMgr.resolve(s)) {
                q = true;
                if (s && s.length > 0) {
                    if (!CQ_Analytics.SegmentMgr.segments[s[0]]) {
                        q = false;
                        if (n) {
                            n.unknownSegment = true
                        }
                    }
                }
            } if (q) {
                var u = CQ_Analytics.SegmentMgr.getMaxBoost(s);
                if (n) {
                    n.boost = u
                } if (u === t) {
                    r.push(o)
                } else {
                    if (u > t) {
                        r = [];
                        r.push(o);
                        t = u
                    }
                }
            }
        } return r
    } var b = {};
    function g(n, o) {
        CQ_Analytics.Engine.stopTeaserLoader(n);
        b[n] = o
    } function d(p, o) {
        if (!p || !o) {
            return false
        } if (p.length !== o.length) {
            return false
        } p.sort();
        o.sort();
        for (var n = 0;
            n < p.length;
            n++) {
                if (p[n] !== o[n]) {
                    return false
                }
        } return true
    } var j = {};
    return {
        stopTeaserLoader: function (o) {
            var n = o.path || o;
            if (!n) {
                return
            } var p = b[n];
            if (p) {
                CQ_Analytics.SegmentMgr.removeListener("update", p);
                delete b[n]
            }
        }, resolveTeaser: function (q, p, n) {
            var o = c(q, n);
            if (o.length === 0) {
                return null
            } return CQ_Analytics.StrategyMgr.choose(p, o) || o[0]
        }, loadTeaser: function (n) {
            var q, p;
            if (l()) {
                p = CQ.WCM.getEditablePathFromDOM(document.getElementById(n.targetID));
                q = e(p)
            } var r = ClientContext.get("campaign");
            if (r && r.isCampaignSelected() && !a) {
                return
            } var o = function () {
                var u = CQ_Analytics.PageDataMgr.getExperience();
                if (u) {
                    CQ_Analytics.PageDataMgr.clearExperience();
                    var v = "/_jcr_content/par.html";
                    if (l()) {
                        v += "?wcmmode=disabled"
                    } CQ_Analytics.Utils.loadElement(u + v, n.targetID);
                    return
                } var t = null;
                var s = function () {
                    var J = null;
                    if (l()) {
                        J = []
                    } var F = ClientContext.get("campaign"), M;
                    if (F && F.isCampaignSelected()) {
                        var G = F.data.path, I = F.data["recipe/path"], x = F.data.campaigns || [], y = {}, L = n.teasers, H;
                        for (var D = 0;
                            D < L.length;
                            D++) {
                                if (L[D].name === "default") {
                                    H = L[D]
                                }
                        } if (j[n.targetID] && j[n.targetID][I]) {
                            M = j[n.targetID][I]
                        } else {
                            if (I === "DEFAULT") {
                                M = H
                            } else {
                                for (var D = 0;
                                    D < x.length;
                                    D++) {
                                        var A = x[D];
                                    if (x[D]["path"] === G) {
                                        var K = A.experiences;
                                        for (var C = 0;
                                            C < K.length;
                                            C++) {
                                                if (K[C]["path"] === I) {
                                                    if (K[C].hasOwnProperty("segments")) {
                                                        var E = K[C]["segments"];
                                                        for (var z = 0;
                                                            z < E.length;
                                                            z++) {
                                                                y[E[z]] = y
                                                        }
                                                    }
                                                }
                                        }
                                    }
                                } for (var D = 0;
                                    D < L.length;
                                    D++) {
                                        var B = L[D];
                                    if (B.hasOwnProperty("segments") && (B.segments.length === E.length)) {
                                        if (d(E, B.segments)) {
                                            M = L[D];
                                            break
                                        }
                                    }
                                }
                            } if (!M) {
                                M = H
                            } j[n.targetID] = { experience: M }
                        }
                    } else {
                        M = CQ_Analytics.Engine.resolveTeaser(n.teasers, n.strategy, J)
                    } if (M) {
                        if (!t || t.path !== M.path) {
                            t = M;
                            CQ_Analytics.SegmentMgr.fireEvent("teaser-loaded", { campaignPath: M.campaignPath || "", campaignName: M.campainName || "", experiencePath: M.path || "", segmentName: M.title || "", segments: M.segments || [], targetElement: n.targetID });
                            var w = M.url;
                            if (l()) {
                                w += "?wcmmode=disabled"
                            } CQ_Analytics.Utils.loadTeaserElement(w, n.targetID);
                            if (window.CQ_trackTeasersStats && n.trackingURL) {
                                h(M, n.trackingURL)
                            } if (q) {
                                m(q, J, t.path, n.strategy)
                            }
                        }
                    } else {
                        if (q) {
                            k(q)
                        } CQ_Analytics.Utils.clearElement(n.targetID);
                        t = null
                    }
                };
                s.call();
                if (CQ_Analytics.SegmentMgr) {
                    if (p) {
                        g(p, s)
                    } CQ_Analytics.SegmentMgr.addListener("update", s)
                } if (CQ_Analytics.CampaignMgr) {
                    if (CQ_Analytics.CampaignMgr) {
                        CQ_Analytics.CampaignMgr.addListener("update", s)
                    }
                }
            };
            if (CQ_Analytics.CCM.areStoresInitialized) {
                o.call(this)
            } else {
                CQ_Analytics.CCM.addListener("storesinitialize", o)
            }
        }
    }
}();
window.CQ_trackTeasersStats = true;
function initializeTeaserLoader(b, f, g, e, a, d) {
    e = !!(CQ.Ext && (e == "true" || e === true));
    if (window.CQ_Analytics) {
        var c = function () {
            var n = "/_jcr_content/par.html";
            if (e) {
                n += "?wcmmode=disabled"
            } var l = CQ_Analytics.PageDataMgr.getExperience();
            if (l) {
                CQ_Analytics.PageDataMgr.clearExperience();
                CQ_Analytics.Utils.loadElement(l + n, g);
                return
            } var m = function (q) {
                var s = "";
                var w = new Array();
                if (CQ_Analytics.SegmentMgr) {
                    var u = 0;
                    for (var r = 0;
                        r < b.length;
                        r++) {
                            var t = CQ.shared.HTTP.externalize(b[r].path + ".html");
                        if (!b[r]["segments"] || b[r]["segments"].length == 0 || CQ_Analytics.SegmentMgr.resolveArray(b[r]["segments"]) === true) {
                            var o = CQ_Analytics.SegmentMgr.getMaxBoost(b[r]["segments"]);
                            var v = [b[r]["title"], o, b[r].thumbnail, t];
                            if (q == b[r].path) {
                                s += CQ.I18n.getMessage('<b><a href="{3}" class="cq-teaser-segment-link"><img src="{2}" class="cq-teaser-decision-thumbnail cq-teaser-decision-match"></a>Experience: {0} - match ( boost = {1} )</b><br>', v)
                            } else {
                                s += CQ.I18n.getMessage('<a href="{3}" class="cq-teaser-segment-link"><img src="{2}" class="cq-teaser-decision-thumbnail cq-teaser-decision-match"></a>Experience: {0} - match ( boost = {1} )<br>', v)
                            } if (o == u) {
                                w.push(b[r])
                            } else {
                                if (o > u) {
                                    w = new Array();
                                    w.push(b[r]);
                                    u = o
                                }
                            }
                        } else {
                            var v = [b[r]["title"], b[r].thumbnail, t];
                            s += CQ.I18n.getMessage('<a href="{2}" class="cq-teaser-segment-link"><img src="{1}" class="cq-teaser-decision-thumbnail cq-teaser-decision-nomatch"></a>Experience: {0} - no match<br>', v)
                        }
                    }
                } s += CQ.I18n.getMessage("<br>Strategy <b>{0}</b> selected current teaser.<br>", f);
                return s
            };
            var k = null;
            var h = null;
            var j = function () {
                var v = new Array();
                if (CQ_Analytics.SegmentMgr) {
                    var t = 0;
                    for (var r = 0;
                        r < b.length;
                        r++) {
                            if (!b[r]["segments"] || b[r]["segments"].length == 0 || CQ_Analytics.SegmentMgr.resolveArray(b[r]["segments"]) === true) {
                                var o = CQ_Analytics.SegmentMgr.getMaxBoost(b[r]["segments"]);
                                if (o == t) {
                                    v.push(b[r])
                                } else {
                                    if (o > t) {
                                        v = new Array();
                                        v.push(b[r]);
                                        t = o
                                    }
                                }
                            }
                    }
                } if (v.length > 0) {
                    var u = v[0];
                    if (CQ_Analytics.StrategyMgr) {
                        var s = CQ_Analytics.StrategyMgr.choose(f, v);
                        if (s != null) {
                            u = s
                        }
                    } if (!k || k.path != u.path) {
                        k = u;
                        var p = u.path + n;
                        p = CQ.shared.HTTP.addSelectors(p, CQ.shared.HTTP.getSelectors(window.location.href));
                        CQ_Analytics.Utils.loadTeaserElement(p, g);
                        if (window.CQ_trackTeasersStats && a) {
                            if (!CQ_Analytics.loadedTeasersStack) {
                                CQ_Analytics.loadedTeasersStack = [];
                                $CQ(window).unload(function () {
                                    try {
                                        var w = CQ_Analytics.loadedTeasersStack;
                                        if (w) {
                                            delete CQ_Analytics.loadedTeasersStack;
                                            var y = a;
                                            for (var z = 0;
                                                z < w.length;
                                                z++) {
                                                    y = CQ.shared.HTTP.addParameter(y, "path", w[z])
                                            } CQ.shared.HTTP.get(y, function () { })
                                        }
                                    } catch (x) { }
                                })
                            } CQ_Analytics.loadedTeasersStack.push(u.path)
                        } if (e) {
                            if (d) {
                                var q = CQ.WCM.getEditable(d);
                                if (q) {
                                    if (q && q.teaserToolTip) {
                                        q.teaserToolTip.hide();
                                        q.teaserToolTip.remove();
                                        q.teaserToolTip = null
                                    } else {
                                        q.on(CQ.wcm.EditRollover.EVENT_SHOW_HIGHTLIGHT, function (w) {
                                            if (!this.teaserInfoButton) {
                                                this.teaserInfoButton = CQ.Ext.DomHelper.append("CQ", { tag: "div", cls: "x-tool x-tool-help cq-teaser-tooltip-tool" }, true);
                                                this.teaserInfoButton.position("absolute");
                                                this.teaserInfoButton.on("click", function () {
                                                    if (!q.teaserToolTip) {
                                                        q.teaserToolTip = new CQ.Ext.Tip({ html: m(k.path), title: CQ.I18n.getMessage("Selection decision"), width: 450, autoHide: false, closable: true, height: 300, floating: true, autoHeight: false, bodyStyle: "overflow-y: scroll;" })
                                                    } var x = this.getXY();
                                                    q.teaserToolTip.setPosition(x[0] - 460, x[1] - 100);
                                                    q.teaserToolTip.show()
                                                })
                                            } this.teaserInfoButton.anchorTo(w.frameBottom.getEl(), "tr", [-26, -15]);
                                            this.teaserInfoButton.show()
                                        });
                                        q.on(CQ.wcm.EditRollover.EVENT_HIDE_HIGHTLIGHT, function (w) {
                                            if (this.teaserInfoButton) {
                                                this.teaserInfoButton.hide()
                                            }
                                        })
                                    }
                                }
                            }
                        }
                    }
                } else {
                    if (e) {
                        var q = CQ.WCM.getEditable(d);
                        if (q && q.teaserToolTip) {
                            q.teaserToolTip.hide();
                            q.teaserToolTip.remove();
                            q.teaserToolTip = null
                        }
                    } CQ_Analytics.Utils.clearElement(g);
                    k = null
                }
            };
            j.call();
            if (CQ_Analytics.SegmentMgr) {
                CQ_Analytics.SegmentMgr.addListener("update", j)
            }
        };
        if (CQ_Analytics.CCM.areStoresInitialized) {
            c.call(this)
        } else {
            CQ_Analytics.CCM.addListener("storesinitialize", c)
        }
    }
} window.CQ_trackLandingPagesStats = true;
function initializeLandingPageLoader(f, d, e, c, a) {
    c = CQ.Ext && (c == "true" || c === true);
    if (window.CQ_Analytics) {
        var g = ".html";
        var b = function () {
            var j = null;
            var h = function () {
                var l = new Array();
                if (window.CQ_Analytics && window.CQ_Analytics.SegmentMgr) {
                    var s = 0;
                    for (var p = 0;
                        p < f.length;
                        p++) {
                            if (!f[p]["segments"] || f[p]["segments"].length == 0 || CQ_Analytics.SegmentMgr.resolveArray(f[p]["segments"]) === true) {
                                var v = CQ_Analytics.SegmentMgr.getMaxBoost(f[p]["segments"]);
                                if (v == s) {
                                    l.push(f[p])
                                } else {
                                    if (v > s) {
                                        l = new Array();
                                        l.push(f[p]);
                                        s = v
                                    }
                                }
                            }
                    }
                } if (l.length > 0) {
                    var o = l[0];
                    if (window.CQ_Analytics && window.CQ_Analytics.StrategyMgr) {
                        var t = CQ_Analytics.StrategyMgr.choose(d, l);
                        if (t != null) {
                            o = t
                        }
                    } if (!j || j.path != o.path) {
                        var x = j;
                        j = o;
                        var n = CQ.shared.HTTP.get(o.path + g);
                        var y = n.responseText;
                        var q = function (K, A) {
                            var H = "";
                            if (K && K.indexOf('id="' + A + '"') != -1) {
                                var G = K.indexOf('id="' + A + '"');
                                var B = K.substring(0, G).lastIndexOf("<div");
                                var F = K.substring(B);
                                var J = F.split(new RegExp("<div", "ig"));
                                var D = 0;
                                for (var E = 0;
                                    E < J.length;
                                    E++) {
                                        D++;
                                    var I = J[E].split(new RegExp("</div", "ig"));
                                    for (var C = 1;
                                        C < I.length;
                                        C++) {
                                            D--;
                                        if (D == 1) {
                                            var z = J[E].lastIndexOf("</div") + 6;
                                            z = F.indexOf(J[E]) + z;
                                            F = F.substring(0, z);
                                            F = F.substring(F.indexOf(">") + 1, F.lastIndexOf("</div"));
                                            return F
                                        }
                                    }
                                }
                            } return ""
                        };
                        y = q(y, e);
                        var u = $CQ("#" + e)[0];
                        var r = function (B, z) {
                            if (c) {
                                var C = CQ.WCM.getEditables();
                                for (var D in C) {
                                    var A = C[D];
                                    if (!B || A.path.indexOf(B) != -1) {
                                        A.hide();
                                        A.remove()
                                    }
                                }
                            }
                        };
                        var m = document.createElement("div");
                        m.innerHTML = y;
                        if (x) {
                            $CQ("object", u).parent().fadeOut("slow");
                            $CQ("img", u).fadeOut("slow");
                            $CQ(u).slideUp("slow", function () {
                                r(x.path, false);
                                $CQ(u).children().remove();
                                var z = u.insertBefore(m, u.firstChild);
                                $CQ(u).slideDown("slow", function () {
                                    if (c) {
                                        CQ.DOM.executeScripts(CQ.Ext.get(m))
                                    }
                                })
                            })
                        } else {
                            var k = u.insertBefore(m, u.firstChild);
                            $CQ(u).slideDown("slow", function () {
                                if (c) {
                                    CQ.DOM.executeScripts(CQ.Ext.get(m))
                                }
                            })
                        } try {
                            if (window.CQ_trackLandingPagesStats && a) {
                                if (!CQ_Analytics.loadedLandingPagesStack) {
                                    CQ_Analytics.loadedLandingPagesStack = [];
                                    $CQ(window).unload(function () {
                                        try {
                                            var C = CQ_Analytics.loadedLandingPagesStack;
                                            if (C) {
                                                delete CQ_Analytics.loadedLandingPagesStack;
                                                var A = a;
                                                for (var B = 0;
                                                    B < C.length;
                                                    B++) {
                                                        A = CQ.shared.HTTP.addParameter(A, "path", C[B])
                                                } CQ.shared.HTTP.get(A, function () { })
                                            }
                                        } catch (z) { }
                                    })
                                } CQ_Analytics.loadedLandingPagesStack.push(o.path)
                            }
                        } catch (w) { }
                    }
                } else {
                    CQ_Analytics.Utils.clearElement(e);
                    j = null
                }
            };
            h.call();
            if (window.CQ_Analytics && window.CQ_Analytics.SegmentMgr) {
                CQ_Analytics.SegmentMgr.addListener("update", h)
            }
        };
        if (window.CQ_Analytics && window.CQ_Analytics.ClickstreamcloudMgr) {
            if (CQ_Analytics.ClickstreamcloudMgr.areStoresLoaded) {
                b.call(this)
            } else {
                CQ_Analytics.ClickstreamcloudMgr.addListener("storesloaded", b)
            }
        }
    }
} CQ_Analytics.PersistedJSONStore = function () { };
CQ_Analytics.PersistedJSONStore.prototype = new CQ_Analytics.PersistedSessionStore();
CQ_Analytics.PersistedJSONStore.prototype.STOREKEY = "";
CQ_Analytics.PersistedJSONStore.prototype.STORENAME = "";
CQ_Analytics.PersistedJSONStore.prototype.init = function () {
    var a = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
    var b = a.get(this.getStoreKey());
    if (!b || b == "") {
        this.data = {};
        for (var c in this.initProperty) {
            this.data[c] = this.initProperty[c]
        }
    } else {
        this.data = this.parse(b)
    } this.persist();
    this.initialized = true;
    this.fireEvent("initialize", this);
    this.fireEvent("update")
};
CQ_Analytics.PersistedJSONStore.prototype.clear = function () {
    var a = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
    a.remove(this.getStoreKey());
    this.data = null;
    this.initProperty = {}
};
CQ_Analytics.PersistedJSONStore.prototype.initJSON = function (b, c) {
    if (!c) {
        this.initProperty = {}
    } var a = function (g, d, f) {
        for (var e in f) {
            if (typeof f[e] == "object") {
                a(g, d ? d + "/" + e : e, f[e])
            } else {
                g[d ? d + "/" + e : e] = f[e]
            }
        }
    };
    a(this.initProperty, null, b)
};
CQ_Analytics.PersistedJSONStore.prototype.getJSON = function () {
    var e = this.getData();
    var c = {};
    for (var g in e) {
        var d = g.split("/");
        var f = c;
        for (var b = 0;
            b < d.length;
            b++) {
                var a = d[b];
            if (b == d.length - 1) {
                f[a] = e[g]
            } else {
                f[a] = f[a] || {};
                f = f[a]
            }
        }
    } return c
};
CQ_Analytics.PersistedJSONStore.getInstance = function (a, c) {
    var b = new CQ_Analytics.PersistedJSONStore();
    b.STOREKEY = a.toUpperCase();
    b.STORENAME = a;
    b.initJSON(c);
    return b
};
CQ_Analytics.PersistedJSONStore.registerNewInstance = function (a, b) {
    var c = CQ_Analytics.PersistedJSONStore.getInstance(a, b);
    c.init();
    CQ_Analytics.CCM.register(c);
    return c
};
CQ_Analytics.JSONStore = function () { };
CQ_Analytics.JSONStore.prototype = new CQ_Analytics.SessionStore();
CQ_Analytics.JSONStore.prototype.STOREKEY = "";
CQ_Analytics.JSONStore.prototype.STORENAME = "";
CQ_Analytics.JSONStore.prototype.init = function () {
    this.data = {};
    for (var a in this.initProperty) {
        this.data[a] = this.initProperty[a]
    } this.initialized = true;
    this.fireEvent("initialize", this);
    this.fireEvent("update")
};
CQ_Analytics.JSONStore.prototype.clear = function () {
    this.data = null;
    this.initProperty = {}
};
CQ_Analytics.JSONStore.prototype.initJSON = function (b, c) {
    if (!c) {
        this.initProperty = {}
    } var a = function (g, d, f) {
        for (var e in f) {
            if (typeof f[e] == "object") {
                a(g, d ? d + "/" + e : e, f[e])
            } else {
                g[d ? d + "/" + e : e] = f[e]
            }
        }
    };
    a(this.initProperty, null, b)
};
CQ_Analytics.JSONStore.prototype.getJSON = function () {
    var e = this.getData();
    var c = {};
    for (var g in e) {
        var d = g.split("/");
        var f = c;
        for (var b = 0;
            b < d.length;
            b++) {
                var a = d[b];
            if (b == d.length - 1) {
                f[a] = e[g]
            } else {
                f[a] = f[a] || {};
                f = f[a]
            }
        }
    } return c
};
CQ_Analytics.JSONStore.getInstance = function (a, c) {
    var b = new CQ_Analytics.JSONStore();
    b.STOREKEY = a.toUpperCase();
    b.STORENAME = a;
    b.initJSON(c);
    return b
};
CQ_Analytics.JSONStore.registerNewInstance = function (a, b) {
    var c = CQ_Analytics.JSONStore.getInstance(a, b);
    c.init();
    CQ_Analytics.CCM.register(c);
    return c
};
CQ_Analytics.PersistedJSONPStore = function () { };
CQ_Analytics.PersistedJSONPStore.prototype = new CQ_Analytics.PersistedJSONStore();
CQ_Analytics.PersistedJSONPStore.prototype.setServiceURL = function (a) {
    this.serviceURL = a
};
CQ_Analytics.PersistedJSONPStore.prototype.getServiceURL = function () {
    return this.serviceURL
};
CQ_Analytics.PersistedJSONPStore.prototype.load = function (d, a, e) {
    var c = this.getName();
    if (!CQ_Analytics.PersistedJSONPStore.JSONPCallbacks[this.getName()]) {
        CQ_Analytics.PersistedJSONPStore.JSONPCallbacks[c] = function (g) {
            var f = CQ_Analytics.CCM.getRegisteredStore(c);
            if (f) {
                f.initJSON(g);
                if (a) {
                    f.initJSON(a, true)
                }
            } if (e) {
                e.call(f)
            }
        }
    } if (d) {
        this.setServiceURL(d)
    } var b = this.serviceURL;
    b = b.replace("${callback}", "CQ_Analytics.PersistedJSONPStore.JSONPCallbacks." + c);
    $CQ.getScript(b)
};
CQ_Analytics.PersistedJSONPStore.JSONPCallbacks = {};
CQ_Analytics.PersistedJSONPStore.getInstance = function (e, f, b, a, d) {
    if (e && f) {
        try {
            var g = new CQ_Analytics.PersistedJSONPStore();
            g.STOREKEY = e.toUpperCase();
            g.STORENAME = e;
            if (f) {
                g.setServiceURL(f)
            } if (!a) {
                g.load(f, b, d)
            } return g
        } catch (c) {
            console.log("Cannot create the JSONP store", e, f, c)
        }
    } return null
};
CQ_Analytics.PersistedJSONPStore.registerNewInstance = function (d, e, b, f) {
    if (!e) {
        return null
    } if (!d) {
        var a = CQ.shared.HTTP.getSchemeAndAuthority(e);
        if (a) {
            if (a.indexOf(".") != -1) {
                a = a.substring(0, a.lastIndexOf("."));
                d = a.substring(a.lastIndexOf(".") + 1)
            } else {
                d = a.substring(a.lastIndexOf("/") + 1)
            }
        } else {
            d = e
        }
    } var c = CQ_Analytics.PersistedJSONPStore.getInstance(d, e, b, false, function () {
        this.init();
        this.reset();
        if (f) {
            f.call(this)
        }
    });
    if (c != null) {
        CQ_Analytics.CCM.register(c);
        return c
    } return null
};
CQ_Analytics.JSONPStore = function () { };
CQ_Analytics.JSONPStore.prototype = new CQ_Analytics.JSONStore();
CQ_Analytics.JSONPStore.prototype.setServiceURL = function (a) {
    this.serviceURL = a
};
CQ_Analytics.JSONPStore.prototype.getServiceURL = function () {
    return this.serviceURL
};
CQ_Analytics.JSONPStore.prototype.load = function (d, a, e) {
    var c = this.getName();
    if (!CQ_Analytics.JSONPStore.JSONPCallbacks[this.getName()]) {
        CQ_Analytics.JSONPStore.JSONPCallbacks[c] = function (g) {
            var f = CQ_Analytics.CCM.getRegisteredStore(c);
            if (f) {
                f.initJSON(g);
                if (a) {
                    f.initJSON(a, true)
                }
            } if (e) {
                e.call(f)
            }
        }
    } if (d) {
        this.setServiceURL(d)
    } var b = this.serviceURL;
    b = b.replace("${callback}", "CQ_Analytics.JSONPStore.JSONPCallbacks." + c);
    $CQ.getScript(b)
};
CQ_Analytics.JSONPStore.JSONPCallbacks = {};
CQ_Analytics.JSONPStore.getInstance = function (e, f, b, a, d) {
    if (e) {
        try {
            var g = new CQ_Analytics.JSONPStore();
            g.STOREKEY = e.toUpperCase();
            g.STORENAME = e;
            if (f) {
                g.setServiceURL(f);
                if (!a) {
                    g.load(f, b, d)
                }
            } return g
        } catch (c) {
            console.log("Cannot create the JSONP store", e, f, c)
        }
    } return null
};
CQ_Analytics.JSONPStore.registerNewInstance = function (d, e, b, f) {
    if (!d && e) {
        var a = CQ.shared.HTTP.getSchemeAndAuthority(e);
        if (a) {
            if (a.indexOf(".") != -1) {
                a = a.substring(0, a.lastIndexOf("."));
                d = a.substring(a.lastIndexOf(".") + 1)
            } else {
                d = a.substring(a.lastIndexOf("/") + 1);
                d = d.replace(new RegExp(":", "ig"), "_")
            }
        } else {
            d = e
        }
    } var c = CQ_Analytics.JSONPStore.getInstance(d, e, b, false, function () {
        this.init();
        this.reset();
        if (f) {
            f.call(this)
        }
    });
    if (c != null) {
        CQ_Analytics.CCM.register(c);
        return c
    } return null
};
if (!CQ_Analytics.ClientContext) {
    CQ_Analytics.ClientContext = new function () {
        return {
            get: function (f, c) {
                if (f) {
                    if (f.indexOf("/") != 0) {
                        f = "/" + f
                    } var d = f.split("/")[1];
                    var b = f.substring(f.indexOf("/" + d) + d.length + 2, f.length);
                    var a = CQ_Analytics.CCM.getRegisteredStore(d);
                    if (a) {
                        if (b) {
                            var e = a.getProperty(b);
                            if (e && c) {
                                e = CQ_Analytics.Variables.replaceVariables(e)
                            } return e
                        } return a
                    }
                } return null
            }, set: function (e, d) {
                if (e) {
                    if (e.indexOf("/") != 0) {
                        e = "/" + e
                    } var c = e.split("/")[1];
                    var b = e.substring(e.indexOf("/" + c) + c.length + 2, e.length);
                    var a = CQ_Analytics.CCM.getRegisteredStore(c);
                    if (a) {
                        if (b) {
                            a.setProperty(b, d)
                        }
                    }
                }
            }, clear: function () {
                var a = CQ_Analytics.CCM.getStores();
                if (a) {
                    for (var b in a) {
                        if (a[b].clear) {
                            a[b].clear()
                        }
                    }
                }
            }, reset: function () {
                var a = CQ_Analytics.CCM.getStores();
                if (a) {
                    for (var b in a) {
                        if (a[b].reset) {
                            a[b].reset()
                        }
                    }
                }
            }, persist: function (a) {
                CQ_Analytics.ClientContextMgr.ServerStorage.post(a, true)
            }
        }
    }();
    window.ClientContext = CQ_Analytics.ClientContext;
    window.ContextCloud = CQ_Analytics.ClientContext
} if (!CQ_Analytics.CampaignMgr) {
    CQ_Analytics.CampaignMgr = function () { };
    CQ_Analytics.CampaignMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.CampaignMgr.prototype.STOREKEY = "CAMPAIGN";
    CQ_Analytics.CampaignMgr.prototype.STORENAME = "campaign";
    CQ_Analytics.CampaignMgr.prototype.DEFAULT_EXPERIENCE = "DEFAULT";
    CQ_Analytics.CampaignMgr.prototype.init = function () {
        var c;
        this.persistence = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
        var a = this.persistence.get(this.getStoreKey());
        if (!this.data) {
            this.data = {}
        } if (!a || a === "") {
            for (c in this.initProperty) {
                if (this.initProperty.hasOwnProperty(c)) {
                    this.data[c] = this.initProperty[c]
                }
            }
        } else {
            this.data = this.parse(a);
            var b = this.getInitProperty("campaigns");
            if (b) {
                this.data.campaigns = b
            }
        } this.validate();
        this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.CampaignMgr.prototype.validate = function () {
        if (this.data.campaigns) {
            if (!this.getCampaignBy("path", this.data.path) && !this.getCampaignBy("id", this.data.id)) {
                this.setCampaign(null)
            } if (this.data["recipe/path"] !== CQ_Analytics.CampaignMgr.DEFAULT_EXPERIENCE) {
                if (!this.getExperienceBy("path", this.data["recipe/path"]) && !this.getExperienceBy("id", this.data["recipe/id"])) {
                    this.setExperience(null)
                }
            }
        }
    };
    CQ_Analytics.CampaignMgr.prototype.getCampaignBy = function (e, b) {
        if (!this.data || !this.data.campaigns) {
            return null
        } var a, c = this.data.campaigns;
        for (a = 0;
            a < c.length;
            a++) {
                var d = c[a];
            if (d[e] === b) {
                return d
            }
        } return null
    };
    CQ_Analytics.CampaignMgr.prototype.getExperienceBy = function (g, d) {
        if (!this.data || !this.data.campaigns) {
            return null
        } var c, e = this.data.campaigns;
        for (c = 0;
            c < e.length;
            c++) {
                var f = e[c];
            for (var a = 0;
                a < f.experiences.length;
                a++) {
                    var b = f.experiences[a];
                if (b[g] === d) {
                    return b
                }
            }
        } return null
    };
    CQ_Analytics.CampaignMgr.prototype.setCampaign = function (a) {
        this.setProperties({ name: a ? a.title : "", path: a ? a.path : "", id: a ? a.id : "", "recipe/name": a ? CQ.I18n.getMessage("(default)") : "", "recipe/path": a ? this.DEFAULT_EXPERIENCE : "", "recipe/id": a ? this.DEFAULT_EXPERIENCE : "" })
    };
    CQ_Analytics.CampaignMgr.prototype.setExperience = function (a) {
        this.setProperties({ "recipe/name": a ? a.title : "", "recipe/path": a ? a.path : "", "recipe/id": a ? a.id : "" })
    };
    CQ_Analytics.CampaignMgr.prototype.setProperty = function (a, b) {
        if (a === "id" || a === "path") {
            this.setCampaign(this.getCampaignBy(a, b));
            return
        } else {
            if (a === "recipe/id" || a === "recipe/path") {
                if (b !== CQ_Analytics.CampaignMgr.DEFAULT_EXPERIENCE) {
                    this.setExperience(this.getExperienceBy(a.substring("recipe/".length), b));
                    return
                }
            }
        } CQ_Analytics.PersistedSessionStore.prototype.setProperty.call(this, a, b)
    };
    CQ_Analytics.CampaignMgr.prototype.isCampaignSelected = function () {
        return this.getProperty("path") !== ""
    };
    CQ_Analytics.CampaignMgr.prototype.clear = function () {
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.CampaignMgr.prototype.getLabel = function (a) {
        return a
    };
    CQ_Analytics.CampaignMgr.prototype.getLink = function (a) {
        return ""
    };
    CQ_Analytics.CampaignMgr = new CQ_Analytics.CampaignMgr();
    CQ_Analytics.CCM.register(CQ_Analytics.CampaignMgr)
} if (!CQ_Analytics.GeolocationUtils) {
    CQ_Analytics.GeolocationUtils = new function () {
        var a;
        var d;
        var c = [];
        var b = function () {
            d = true;
            for (var e = 0;
                e < c.length;
                e++) {
                    if (c[e]) {
                        c[e].call(this, CQ_Analytics.GeolocationUtils.getStore())
                    }
            }
        };
        return {
            init: function (k) {
                a = k;
                var h;
                try {
                    h = navigator.geolocation
                } catch (j) { } var f = function (e) {
                    var l = CQ_Analytics.PersistedJSONStore.registerNewInstance(a, e);
                    l.addListener("update", function (m, o) {
                        var p = CQ_Analytics.ClientContext.get(a + "/latitude");
                        var n = CQ_Analytics.ClientContext.get(a + "/longitude");
                        if (!p || !n) {
                            if (o != "generatedThumbnail") {
                                l.setProperty("generatedThumbnail", CQ_Analytics.GeolocationUtils.THUMBNAILS.fallback)
                            } else {
                                if (l.getProperty(o, true) != CQ_Analytics.GeolocationUtils.THUMBNAILS.fallback) {
                                    l.setProperty(o, CQ_Analytics.GeolocationUtils.THUMBNAILS.fallback)
                                }
                            }
                        } else {
                            if (l.getProperty("generatedThumbnail", true) == CQ_Analytics.GeolocationUtils.THUMBNAILS.fallback) {
                                l.setProperty("generatedThumbnail", l.getInitProperty("generatedThumbnail"))
                            }
                        }
                    });
                    b()
                };
                var g = function (o, m) {
                    var l = CQ_Analytics.StoreRegistry.getStore(a);
                    if (l) {
                        var q = true;
                        if (o) {
                            var p = parseInt(o.latitude * 1000000) / 1000000;
                            var n = parseInt(o.longitude * 1000000) / 1000000;
                            q = !(isFinite(p) && (typeof (p) === "number") && isFinite(n) && (typeof (n) === "number"))
                        } if (q) {
                            o = CQ_Analytics.GeolocationUtils.DEFAULTS
                        } var e = o.generatedThumbnail = l.getInitProperty("generatedThumbnail");
                        l.initJSON(o);
                        if (!m) {
                            l.init();
                            l.setProperty("generatedThumbnail", e)
                        }
                    } else {
                        f(o)
                    }
                };
                f();
                if (h) {
                    h.getCurrentPosition(function (e) {
                        var l = { longitude: parseInt(e.coords.longitude * 1000000) / 1000000, latitude: parseInt(e.coords.latitude * 1000000) / 1000000 };
                        if (e.address) {
                            l.address = e.address
                        } g(l, CQ_Analytics.CCM.areStoresInitialized)
                    }, function (e) {
                        if (!CQ_Analytics.CCM.areStoresInitialized) {
                            var m = "Error";
                            if (CQ_Analytics.isUIAvailable) {
                                m = CQ.I18n.getMessage("Connection timeout", null, "timeout while connecting geolocation service");
                                if (e.code == 1) {
                                    m = CQ.I18n.getMessage("Permission denied", null, "permission denied message from goelocation service")
                                } else {
                                    if (e.code == 2) {
                                        m = CQ.I18n.getMessage("Position unavailable", null, "geolocation service couldn't find location")
                                    }
                                }
                            } var l = { address: { country: m } };
                            g(l, CQ_Analytics.CCM.areStoresInitialized)
                        }
                    })
                } else {
                    g()
                }
            }, onReady: function (e) {
                if (d) {
                    e.call(this, CQ_Analytics.GeolocationUtils.getStore())
                } else {
                    c.push(e)
                }
            }, getStore: function () {
                return CQ_Analytics.StoreRegistry.getStore(a)
            }
        }
    }();
    CQ_Analytics.GeolocationUtils.DEFAULTS = { latitude: 37.331375, longitude: -121.893992 };
    CQ_Analytics.GeolocationUtils.THUMBNAILS = { fallback: document.location.protocol + "//maps.googleapis.com/maps/api/staticmap?center=37,-121&zoom=0&size=80x80&sensor=false&client=gme-adobesystemsincorporated&channel=clientcontext&signature=wqNolKQ144hypPUiTmIypxPc1s8=" }
} if (!CQ_Analytics.ProfileDataMgr) {
    CQ_Analytics.ProfileDataMgr = function () {
        this.addListener("beforepersist", function () {
            this.checkAuthorizableId()
        }, this)
    };
    CQ_Analytics.ProfileDataMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.ProfileDataMgr.prototype.STOREKEY = "PROFILEDATA";
    CQ_Analytics.ProfileDataMgr.prototype.STORENAME = "profile";
    CQ_Analytics.ProfileDataMgr.prototype.LOADER_PATH = CQ_Analytics.Utils.externalize("/libs/cq/personalization/components/profileloader/content/load.js", true);
    CQ_Analytics.ProfileDataMgr.prototype.PROFILE_LOADER = CQ_Analytics.Utils.externalize("/libs/cq/personalization/components/profileloader/content/load.json", true);
    CQ_Analytics.ProfileDataMgr.prototype.init = function () {
        this.persistence = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
        var a = this.persistence.get(this.getStoreKey());
        if (!a || a == "") {
            this.data = {};
            for (var b in this.initProperty) {
                this.data[b] = this.initProperty[b]
            }
        } else {
            this.data = this.parse(a)
        } this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.ProfileDataMgr.prototype.checkAuthorizableId = function () {
        if (!this.data) {
            this.init()
        } if (this.data.authorizableId) {
            CQ_Analytics.CCM.setVisitorId(this.data.authorizableId)
        } else {
            CQ_Analytics.CCM.setVisitorId("")
        }
    };
    CQ_Analytics.ProfileDataMgr.prototype.getLabel = function (a) {
        return a
    };
    CQ_Analytics.ProfileDataMgr.prototype.getLink = function (a) {
        return ""
    };
    CQ_Analytics.ProfileDataMgr.prototype.clear = function () {
        if (this.persistence) {
            this.persistence.remove(this.getStoreKey())
        } this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.ProfileDataMgr.prototype.getLoaderURL = function () {
        return CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/profiledata/loader.json")
    };
    CQ_Analytics.ProfileDataMgr.prototype.loadProfile = function (authorizableId) {
        var url = this.getLoaderURL();
        url = CQ_Analytics.Utils.addParameter(url, "authorizableId", authorizableId);
        try {
            var object = CQ.shared.HTTP.eval(url);
            if (object) {
                this.data = {};
                for (var p in object) {
                    this.data[p] = object[p]
                } this.persist();
                this.fireEvent("initialize", this);
                this.fireEvent("update");
                if (CQ_Analytics.ClickstreamcloudEditor) {
                    CQ_Analytics.ClickstreamcloudEditor.reload()
                } return true
            }
        } catch (error) {
            if (console && console.log) {
                console.log("Error during profile loading", error)
            }
        } return false
    };
    CQ_Analytics.ProfileDataMgr = new CQ_Analytics.ProfileDataMgr();
    CQ_Analytics.CCM.addListener("configloaded", function () {
        this.checkAuthorizableId();
        this.addListener("update", function (a, j) {
            if (j == "birthday" || !j) {
                var k = this.getProperty("birthday");
                var l = this.getProperty("age");
                var g = "";
                if (k) {
                    try {
                        var c = function (o, n) {
                            var m = new Date(n.getTime());
                            m.setUTCHours(o.getUTCHours(), o.getUTCMinutes(), o.getUTCSeconds(), o.getUTCMilliseconds());
                            var p = m.getTime() - o.getTime();
                            return p / (1000 * 60 * 60 * 24)
                        };
                        var d = function (m) {
                            var n = new Date(m.getFullYear(), 0, 0);
                            return c(m, n) * -1
                        };
                        var h = new Date(Date.parse(k));
                        if (!isNaN(h.getTime())) {
                            var f = new Date();
                            if (d(h) == d(f) && h.getMonth() == f.getMonth()) {
                                g = CQ.shared.HTTP.externalize(CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/profiledata/resources/birthday_cake.png"))
                            } else {
                                var b = f.getFullYear() - h.getFullYear();
                                if (d(h) > d(f)) {
                                    g = b
                                } else {
                                    g = Math.max(0, b - 1)
                                }
                            }
                        } else {
                            g = ""
                        }
                    } catch (e) {
                        g = ""
                    }
                } if (l != g) {
                    this.setProperty("age", g)
                }
            }
        });
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.ProfileDataMgr)
} if (!CQ_Analytics.SurferInfoMgr) {
    CQ_Analytics.SurferInfoMgr = function () { };
    CQ_Analytics.SurferInfoMgr.prototype = new CQ_Analytics.SessionStore();
    CQ_Analytics.SurferInfoMgr.prototype.STOREKEY = "SURFERINFO";
    CQ_Analytics.SurferInfoMgr.prototype.STORENAME = "surferinfo";
    CQ_Analytics.SurferInfoMgr.prototype.init = function () {
        this.data = {};
        for (var a in this.initProperty) {
            this.data[a] = this.initProperty[a]
        } this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.SurferInfoMgr.prototype.clear = function () {
        this.data = null;
        this.initProperty = {}
    };
    CQ_Analytics.SurferInfoMgr.prototype.getLabel = function (a) {
        return a
    };
    CQ_Analytics.SurferInfoMgr.prototype.getLink = function (a) {
        return ""
    };
    CQ_Analytics.SurferInfoMgr = new CQ_Analytics.SurferInfoMgr();
    CQ_Analytics.CCM.addListener("configloaded", function () {
        var b = CQ_Analytics.BrowserInfoInstance;
        this.addInitProperty("browserFamily", b.getBrowserFamily());
        this.addInitProperty("browserVersion", b.getBrowserVersion());
        this.addInitProperty("browser", "${/surferinfo/browserFamily} ${/surferinfo/browserVersion}");
        this.addInitProperty("OS", b.getOSName());
        this.addInitProperty("resolution", b.getScreenResolution());
        this.addInitProperty("device", b.getDeviceType());
        this.addInitProperty("isMobile", b.isMobile());
        this.addInitProperty("userAgent", b.getUserAgent());
        var a = new Date();
        this.addInitProperty("day", a.getDate());
        this.addInitProperty("month", a.getMonth() + 1);
        this.addInitProperty("year", a.getFullYear());
        this.addInitProperty("hours", a.getHours());
        this.addInitProperty("minutes", a.getMinutes());
        var c = "${/surferinfo/browserFamily}";
        if (b.isMobile()) {
            c = "${/surferinfo/device}"
        } this.addInitProperty("image", c);
        var d = CQ_Analytics.ClientContextMgr.getClientContextURL("/contextstores/surferinfo/resources/${/surferinfo/image}.png");
        this.addInitProperty("thumbnail", d);
        if (window.CQ_Analytics && window.CQ_Analytics.MousePositionMgr) {
            CQ_Analytics.MousePositionMgr.addListener("update", function () {
                this.setProperty("mouse X", CQ_Analytics.MousePositionMgr.getProperty("x"));
                this.setProperty("mouse Y", CQ_Analytics.MousePositionMgr.getProperty("y"))
            }, this)
        } this.addListener("update", function () {
            var f = this.getProperty("device");
            var g = "${/surferinfo/browserFamily}";
            if (b.isMobile(f)) {
                g = "${/surferinfo/device}"
            } var e = this.getProperty("image");
            if (e != g) {
                this.setProperty("image", g)
            }
        }, this);
        this.init();
        CQ_Analytics.CCM.register(this)
    }, CQ_Analytics.SurferInfoMgr)
} if (!CQ_Analytics.TagCloudMgr) {
    CQ_Analytics.TagCloudMgr = function () {
        this.data = null;
        this.addedTags = {};
        this.frequencies = null;
        this.initialTags = null;
        this.initialAddedTags = {};
        this.copyObject = function (c) {
            var b = {};
            for (var a in c) {
                b[a] = c[a]
            } return b
        }
    };
    CQ_Analytics.TagCloudMgr.prototype = new CQ_Analytics.PersistedSessionStore();
    CQ_Analytics.TagCloudMgr.prototype.STOREKEY = "TAGCLOUD";
    CQ_Analytics.TagCloudMgr.prototype.STORENAME = "tagcloud";
    CQ_Analytics.TagCloudMgr.prototype.parseTagList = function (a) {
        var c = {};
        var b = a.split(",");
        for (var d in b) {
            if (b.hasOwnProperty(d)) {
                var e = b[d].split("=");
                if (e.length == 2) {
                    c[e[0]] = parseInt(e[1])
                }
            }
        } return c
    };
    CQ_Analytics.TagCloudMgr.prototype.parseString = function (a) {
        this.data = this.parseTagList(a);
        return this
    };
    CQ_Analytics.TagCloudMgr.prototype.add = function (a) {
        this.addedTags[a] = true;
        this.data[a] = (this.data[a] || 0) + 1
    };
    CQ_Analytics.TagCloudMgr.prototype.each = function (b) {
        for (var a in this.data) {
            if (this.data.hasOwnProperty(a)) {
                b(a, this.data[a])
            }
        }
    };
    CQ_Analytics.TagCloudMgr.prototype.calculateFrequencies = function () {
        var c = {};
        var a = [];
        this.each(function (d, e) {
            if (!c[e]) {
                a.push(e)
            } c[e] = true
        });
        a.sort(function b(e, d) {
            if (e > d) {
                return 1
            } if (e < d) {
                return -1
            } return 0
        });
        return a
    };
    CQ_Analytics.TagCloudMgr.prototype.calculateNtile = function (b, c) {
        if (this.frequencies === null) {
            this.frequencies = this.calculateFrequencies()
        } var a = 0;
        while (true) {
            if ((a >= (this.frequencies.length - 1)) || (this.frequencies[a] >= b)) {
                return Math.ceil((a + 1) / this.frequencies.length * c)
            } a++
        }
    };
    CQ_Analytics.TagCloudMgr.prototype.getTags = function () {
        return this.data
    };
    CQ_Analytics.TagCloudMgr.prototype.getData = function (a) {
        return this.getTags()
    };
    CQ_Analytics.TagCloudMgr.prototype.getTag = function (a) {
        return this.data[a] > 0 ? this.data[a] : 0
    };
    CQ_Analytics.TagCloudMgr.prototype.init = function (a) {
        var b = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
        var d = b.get(this.getStoreKey());
        d = d === null ? "" : new String(d);
        this.data = this.parseTagList(d);
        if (a) {
            for (var c in a) {
                if (a.hasOwnProperty(c)) {
                    this.add(a[c])
                }
            }
        } this.initialTags = this.copyObject(this.data);
        this.initialAddedTags = this.copyObject(this.addedTags);
        this.persist();
        this.initialized = true;
        this.fireEvent("initialize", this);
        this.fireEvent("update")
    };
    CQ_Analytics.TagCloudMgr.prototype.setProperty = function (a, b) {
        if (this.data == null) {
            this.init()
        } if (b > 0) {
            this.addedTags[a] = true;
            this.data[a] = b > 0 ? b : 0
        } else {
            delete this.addedTags[a];
            delete this.data[a]
        } this.persist();
        this.fireEvent("update")
    };
    CQ_Analytics.TagCloudMgr.prototype.reset = function () {
        this.clear();
        this.fireEvent("update")
    };
    CQ_Analytics.TagCloudMgr.prototype.getProperty = function (a) {
        if (this.data == null) {
            this.init()
        } return this.data[a] > 0 ? this.data[a] : 0
    };
    CQ_Analytics.TagCloudMgr.prototype.removeProperty = function (a) {
        if (this.data == null) {
            this.init()
        } this.setProperty(a, 0)
    };
    CQ_Analytics.TagCloudMgr.prototype.clear = function () {
        var a = new CQ_Analytics.SessionPersistence({ container: "ClientContext" });
        a.remove(this.getStoreKey());
        this.addedTags = {};
        this.data = {}
    };
    CQ_Analytics.TagCloudMgr.prototype.getLink = function (a) {
        return ""
    };
    CQ_Analytics.TagCloudMgr.prototype.getLabel = function (b) {
        if (b) {
            var c = b.split(":");
            var a = c[c.length - 1].split("/");
            b = a[a.length - 1]
        } return b
    };
    CQ_Analytics.TagCloudMgr = new CQ_Analytics.TagCloudMgr();
    CQ_Analytics.CCM.register(CQ_Analytics.TagCloudMgr)
} if (window.CQ_Analytics && window.CQ_Analytics.SegmentMgr && !window.CQ_Analytics.SegmentMgr.isResolvedRegistered) {
    CQ_Analytics.SegmentMgr.isResolvedRegistered = true;
    CQ_Analytics.CCM.addListener("configloaded", function () {
        CQ_Analytics.StoreRegistry.register(CQ_Analytics.SegmentMgr);
        CQ_Analytics.CCM.fireEvent("storeregister", CQ_Analytics.SegmentMgr)
    }, CQ_Analytics.SegmentMgr)
} (function (h, f, b, g) {
    var d = { VERSION: "0.0.1", Views: {}, Models: {}, Collections: {}, config: { urlRoot: "" }, constants: { SOCIAL_SELECTOR: ".social", JSON_EXT: ".json", URL_EXT: ".social.json", TRANSLATE_URL_EXT: ".social.translate.json", ANALYTICS_BASE_RESOURCE_TYPE: "social/commons/components/analyticsbase" }, Components: {}, loadedComponents: {}, templates: {}, fieldManagers: {}, DEBUG: 1, INFO: 2, WARN: 3, ERROR: 4 };
    d.LOG_LEVEL = d.INFO;
    var e = {
        debug: function () {
            if (d.LOG_LEVEL <= d.DEBUG) {
                window.console.debug.apply(window.console, arguments)
            }
        }, info: function () {
            if (d.LOG_LEVEL <= d.INFO) {
                window.console.info.apply(window.console, arguments)
            }
        }, warn: function () {
            if (d.LOG_LEVEL <= d.WARN) {
                window.console.warn.apply(window.console, arguments)
            }
        }, error: function () {
            if (d.LOG_LEVEL <= d.ERROR) {
                window.console.error.apply(window.console, arguments)
            }
        }
    };
    var c = function (l, k) {
        var m = l.firstChild;
        var j = null;
        while (m) {
            switch (m.nodeType) {
                case 1: j = c(m, k);
                    break;
                case 8: if (m.nodeValue.match(k)) {
                    return m
                } break
            }if (j !== null) {
                break
            } m = m.nextSibling
        } return j
    };
    d.Router = new h.Router();
    if (!h.History.started) {
        h.history.start({ pushState: true, hashChange: false })
    } d.View = h.View.extend({
        initialize: function () {
            this._rendered = false;
            this._childViews = {};
            this._parentView = undefined;
            this._modelReady = false;
            this._sessionReady = false;
            this._renderedChildren = [];
            this._replacementTarget = null;
            this._destroyed = false;
            if (this.$el.html() !== "") {
                this.bindView();
                this._rendered = true
            } this.listenTo(this.model, "model:loaded", function () {
                this._modelReady = true;
                this.render()
            });
            this.listenTo(this.model, "model:cacheFixed", function () {
                this.render()
            });
            if (this.requiresSession && !d.Session.isReady()) {
                this.listenTo(d.Session, "model:loaded", function (j) {
                    if (!this._sessionReady) {
                        this._sessionReady = true;
                        this.render()
                    }
                })
            } this._sessionReady = d.Session.isReady();
            if (b.isFunction(this.init)) {
                this.init.apply(this, arguments)
            } if (d.Session.isReady()) {
                this.initContext()
            } else {
                d.Session.on("model:loaded", b.bind(this.initContext, this))
            }
        }, initContext: function () {
            if (b.isUndefined(d.Context)) {
                d.Context = {};
                var j = ".scf-js-group-navbar";
                var k = $(".scf-js-site-title").attr("href");
                k = b.isUndefined(k) ? "" : k.substring(0, k.lastIndexOf(".html"));
                this.sitePath = k;
                d.Context.siteTitle = $(".scf-js-site-title").length !== 0 ? $(".scf-js-site-title").text() : "";
                d.Context.sitePath = this.sitePath;
                d.Context.groupTitle = $(j).length !== 0 && !b.isUndefined($(j).attr("data-group-title")) ? $(j).data("group-title") : "";
                d.Context.groupPath = $(j).length !== 0 && !b.isUndefined($(j).attr("data-group-path")) ? $(j).data("group-path") : "";
                d.Context.user = d.Session.get("authorizableId")
            } if (b.isFunction(this.initAnalytics)) {
                this.initAnalytics.apply(this, arguments)
            }
        }, getContextForTemplate: function () {
            var j = (this.model !== undefined) ? this.model.toJSON() : this.context;
            return this.getMergedContexts(j)
        }, getMergedContexts: function (j) {
            if (!b.isObject(j)) {
                j = {}
            } j.loggedInUser = d.Session.toJSON();
            j.environment = {};
            j.environment.client = true;
            return j
        }, appendTo: function (j) {
            if (!this._rendered) {
                this.render()
            } f(j).append(this.el);
            this.trigger("view:ready", { view: this })
        }, replaceElement: function (j) {
            if (!this._rendered) {
                this.render()
            } if (this._rendered) {
                f(j).replaceWith(this.$el);
                this._replacementTarget = null;
                this.trigger("view:ready", { view: this })
            } else {
                this._replacementTarget = j
            }
        }, render: function () {
            if (this._destroyed) {
                return
            } var l = this;
            if (!(this._modelReady || this.model._isReady) || (this.requiresSession && !this._sessionReady)) {
                return this
            } this.unbindDataFields();
            for (var m in this._childViews) {
                this._childViews[m].destroy();
                delete this._childViews[m]
            } this._renderedChildren = [];
            var j = f(this.template(this.getContextForTemplate(), { data: { parentView: this } }));
            if (this._rendered || this.$el.parent().length > 0) {
                this.$el.html(j.html())
            } else {
                this.setElement(j)
            } b.each(this._childViews, function (n) {
                l.renderChildView(n)
            });
            var k = b.bind(function () {
                this.bindView();
                this._rendered = true;
                if (this.afterRender) {
                    this.afterRender()
                } this.trigger("view:rendered", { view: this })
            }, this);
            f.when(this._renderedChildren).done(k);
            if (this._replacementTarget !== null) {
                this.replaceElement(this._replacementTarget)
            } return this
        }, bindView: function () {
            var j = this;
            this.unbindDataFields();
            this.$("[evt]").not(this.$("[data-scf-component] [evt]")).each(function (k, l) {
                d.View.bindEvents(j, f(l))
            });
            this.$("[data-attrib]").not(this.$("[data-scf-component] [data-attrib]")).each(function (k, l) {
                d.View.bindDataFields(j, f(l))
            });
            this.$("[data-form]").not(this.$("[data-scf-component] [data-form]")).each(function (k, l) {
                d.View.bindDataForms(j, f(l))
            })
        }, addChildView: function (k) {
            this._childViews[k.cid] = k;
            var j = f.Deferred();
            this._renderedChildren[k.cid] = j.promise();
            this.listenTo(k, "view:rendered", function () {
                j.resolve()
            });
            this.listenTo(k, "view:destroyed", function (l) {
                this.removeChildView(l.view.cid)
            });
            return this
        }, getChildView: function (j) {
            return this._childViews[j]
        }, removeChildView: function (k) {
            if (this._renderedChildren.hasOwnProperty(k)) {
                this._renderedChildren[k].fail()
            } if (this._childViews.hasOwnProperty(k)) {
                var j = this._childViews[k];
                j.stopListening();
                this.stopListening(j, "view:rendered");
                this._childViews[k] = undefined;
                delete this._childViews[k]
            } return this
        }, getChildViews: function () {
            return this._childViews
        }, setParent: function (j) {
            this._parentView = j;
            j.addChildView(this);
            return this
        }, renderChildView: function (k) {
            k.render();
            var o = this;
            if (o.el === null) {
                return
            } var n = null;
            var m = null;
            var l = new RegExp("s*?data-view='" + k.cid + "'");
            if (document.createNodeIterator && NodeFilter && NodeFilter.SHOW_COMMENT) {
                var j = document.createNodeIterator(o.el, NodeFilter.SHOW_COMMENT, function (p) {
                    if (p.data.match(l)) {
                        return NodeFilter.FILTER_ACCEPT
                    }
                }, false);
                m = j.nextNode();
                while (m !== null) {
                    n = m;
                    m = j.nextNode();
                    break
                } k.replaceElement(n)
            } else {
                n = c(o.el, l);
                k.replaceElement(n)
            }
        }, getField: function (k) {
            var j = this._fields[k];
            if (j) {
                return j.val()
            } return ""
        }, setField: function (l, k) {
            var j = this._fields[l];
            if (!j) {
                return
            } j.val(k)
        }, focus: function (k) {
            var j = this._fields[k];
            if (!j) {
                return
            } j.focus()
        }, getForm: function (j) {
            if (typeof this._forms === "undefined") {
                return null
            } else {
                return this._forms[j]
            }
        }, destroy: function () {
            this.undelegateEvents();
            this.unbindDataFields();
            this.stopListening();
            this.trigger("view:destroyed", { view: this });
            this._destroyed = true
        }, unbindDataFields: function () {
            for (var j in this._fields) {
                if (this._fields.hasOwnProperty(j)) {
                    if (b.isFunction(this._fields[j].destroy)) {
                        this._fields[j].destroy()
                    }
                }
            } this._fields = {}
        }, log: e
    });
    d.View.extend = function () {
        var k = h.View.extend.apply(this, arguments);
        var j = arguments[0].viewName;
        d.Views[j] = k;
        return k
    };
    d.Model = h.Model.extend({
        _cachedModels: {}, _hasLoadedChildren: false, parse: function (j) {
            this._parseRelations(j);
            return j
        }, addEncoding: function (j) {
            if ((window.FormData) && (j instanceof window.FormData)) {
                j.append("_charset_", "UTF-8")
            } if (!j.hasOwnProperty("_charset_")) {
                j._charset_ = "UTF-8"
            } return j
        }, reload: function (m) {
            this._isReady = false;
            var k = "";
            var j;
            if (b.isFunction(this.url)) {
                k = this.url();
                j = this.url
            } else {
                k = this.url
            } this.clear();
            if (!b.isEmpty(k)) {
                this.url = k
            } var l = this;
            this.fetch({
                dataType: "json", cache: false, xhrFields: { withCredentials: true }, error: function (o, n) {
                    d.log.error("Error fetching model");
                    d.log.error(n);
                    o.clear();
                    o._isReady = true;
                    o.trigger("model:loaded", o);
                    if (m && typeof (m.error) === "function") {
                        m.error()
                    }
                }, success: function (n) {
                    if (j !== undefined) {
                        n.url = j
                    } n._isReady = true;
                    n.trigger("model:loaded", n);
                    if (m && typeof (m.success) === "function") {
                        m.success()
                    }
                }
            })
        }, reset: function (k, l) {
            this.clear().set(b.clone(this.defaults));
            var j = this._parseRelations(k);
            this.set(j, l);
            return this
        }, initialize: function (j) {
            this.listenTo(d.Session, "logout:success", function () {
                this.reload()
            });
            this.listenTo(d.Session, "login:success", function () {
                this.reload()
            })
        }, constructor: function (k, l) {
            if (typeof (k) !== "object") {
                k = JSON.parse(k)
            } var j = this._parseRelations(k);
            h.Model.apply(this, [j, l])
        }, url: function () {
            var j;
            if (this.urlRoot) {
                j = this.urlRoot + this.id + d.constants.URL_EXT
            } else {
                if (d.config.urlRoot) {
                    j = d.config.urlRoot + this.id + d.constants.URL_EXT
                } else {
                    j = this.id + d.constants.URL_EXT
                }
            } return j
        }, _parseRelations: function (j) {
            if (typeof (j) !== "object") {
                j = JSON.parse(j)
            } var k = b.bind(function (o, s) {
                if (!j[s] && !o.path) {
                    j[s] = []
                } if (j[s] || o.path) {
                    var n = j[s];
                    var t, q;
                    if (b.isArray(n)) {
                        var l = [], u = [];
                        b.each(n, function (v) {
                            if (b.isObject(v)) {
                                t = !b.isUndefined(d.Models[o.model]) ? d.Models[o.model] : d.Components[v.resourceType].Model;
                                q = t.findLocal(v.id);
                                if (!q) {
                                    q = t.createLocally(v)
                                } else {
                                    q.reset(v)
                                } l.push(q)
                            } else {
                                if (!b.isEmpty(v)) {
                                    var w = v.substr(d.config.urlRoot.length);
                                    w = w.substr(0, w.lastIndexOf(d.constants.URL_EXT));
                                    t = d.Models[o.model];
                                    q = t.findLocal("idFromUrl");
                                    if (!q) {
                                        q = o.autofetch ? t.find(w) : new t({ url: v })
                                    } t.prototype._cachedModels[w] = q;
                                    l.push(q)
                                }
                            }
                        });
                        var p = d.Collections[o.collection] || h.Collection;
                        var r = new p();
                        r.model = t;
                        r.parent = this;
                        r.set(l, { silent: true });
                        j[s] = r
                    } else {
                        if (b.isObject(n)) {
                            if (b.isUndefined(d.Models[o.model]) && b.isUndefined(d.Components[n.resourceType])) {
                                this.log.error("A relation key %s requested model %s but it is not available nor is the component type: %s", s, o.model, n.resourceType);
                                return
                            } t = d.Models[o.model] || d.Components[n.resourceType].Model;
                            q = t.findLocal(n.id) || t.createLocally(n);
                            j[s] = q
                        } else {
                            var m = n;
                            if (!m) {
                                if (o.path) {
                                    if (o.path.substr(0, 1) === "/") {
                                        m = o.path
                                    } else {
                                        m = d.config.urlRoot + j.id + "/" + o.path + d.constants.URL_EXT
                                    }
                                } else {
                                    return
                                }
                            } t = d.Models[o.model];
                            if (o.autofetch) {
                                q = t.find(m, undefined, true)
                            } else {
                                q = t.findLocal(m, true) || new t({ url: m })
                            } j[s] = q
                        }
                    }
                }
            }, this);
            b.each(this.relationships, k);
            return j
        }, toJSON: function () {
            var j = h.Model.prototype.toJSON.apply(this);
            b.each(this.relationships, function (k, l) {
                var n = j[l];
                if (n.length <= 0) {
                    delete j[l];
                    return
                } if (b.isArray(n)) {
                    var m = [];
                    b.each(n, function (o) {
                        if (o instanceof h.Model) {
                            m.push(o.toJSON())
                        } else {
                            m.push(o)
                        }
                    });
                    j[l] = m
                } else {
                    if (n instanceof h.Collection) {
                        j[l] = n.toJSON()
                    } else {
                        if (n instanceof h.Model) {
                            j[l] = n.toJSON()
                        }
                    }
                }
            });
            return j
        }, log: e
    });
    d.Model.extend = function () {
        var k = h.Model.extend.apply(this, arguments);
        var j = arguments[0].modelName;
        d.Models[j] = k;
        return k
    };
    d.View.bindEvents = function (j, k) {
        var l = k.attr("evt");
        b.each(l.split(","), function (p) {
            var q = p.split("=");
            var m = f.trim(q[0]);
            var o = f.trim(q[1]);
            if (j[o]) {
                var n = b.bind(j[o], j);
                k.off(m);
                k.on(m, n)
            }
        })
    };
    d.View.bindDataFields = function (l, n) {
        var o = n.attr("data-attrib");
        if (!l._fields) {
            l._fields = {}
        } if (!b.isUndefined(l._fields[o])) {
            return
        } var k = n.attr("data-field-type");
        var j = (b.isUndefined(d.fieldManagers[k])) ? a : d.fieldManagers[k];
        var m = new j(n, {}, l.model);
        l._fields[o] = (function () {
            return {
                val: function () {
                    if (arguments.length === 0) {
                        return m.getValue()
                    } else {
                        return m.setValue(arguments[0])
                    }
                }, focus: function () {
                    return m.focus()
                }, destroy: function () {
                    if (b.isFunction(m.destroy)) {
                        m.destroy()
                    }
                }
            }
        })()
    };
    d.View.bindDataForms = function (j, k) {
        var l = k.attr("data-form");
        if (!j._forms) {
            j._forms = {}
        } j._forms[l] = new SCFValidator($(k), false)
    };
    d.Model.findLocal = function (j, k) {
        var l = k ? j.substr(d.config.urlRoot.length) : j;
        if (this.prototype._cachedModels && this.prototype._cachedModels[l]) {
            return this.prototype._cachedModels[l]
        }
    };
    d.Model.createLocally = function (j) {
        var k = new this.prototype.constructor(j);
        k._isReady = true;
        this.prototype._cachedModels[k.get("id")] = k;
        return k
    };
    d.Model.prototype.load = function (j) {
        if (j) {
            this.set({ id: j }, { silent: true })
        } this.fetch({
            success: function (k) {
                k._isReady = true;
                k.trigger("model:loaded", k)
            }, xhrFields: { withCredentials: true }
        })
    };
    d.Model.prototype.getConfigValue = function (k) {
        var j = this.get("configuration");
        if (!b.isEmpty(j)) {
            return j[k]
        } return null
    };
    d.Model.prototype.destroy = function (k) {
        var j = this;
        this.constructor.prototype._cachedModels[j.get("id")] = undefined;
        j.trigger("destroy", j, j.collection, k)
    };
    d.Model.prototype.parseServerError = function (m, l, k) {
        var j = f.parseJSON(m.responseText);
        if (j.hasOwnProperty("status.code")) {
            j.status = j.status || {};
            j.status.code = j["status.code"];
            delete j["status.code"]
        } if (j.hasOwnProperty("status.message")) {
            j.status = j.status || {};
            j.status.message = j["status.message"];
            delete j["status.message"]
        } return { error: k, details: j }
    };
    d.Model.find = function (k, o, n) {
        var m = this;
        if (this.prototype._cachedModels && this.prototype._cachedModels[k]) {
            var j = this.prototype._cachedModels[k];
            if (b.isFunction(o)) {
                o(j)
            } return j
        } else {
            var l = new this.prototype.constructor({ id: k });
            if (n) {
                l.url = k
            } this.prototype._cachedModels[k] = l;
            l.fetch({
                dataType: "json", xhrFields: { withCredentials: true }, error: function (q, p) {
                    if (p.status === 204 || p.status === 404) {
                        d.log.debug("non existing resource");
                        q._isReady = true;
                        q.trigger("model:loaded", q);
                        if (b.isFunction(o)) {
                            o(q)
                        }
                    } else {
                        d.log.error("Error fetching model");
                        d.log.error(p);
                        m.prototype._cachedModels[k] = undefined
                    }
                }, success: function (p) {
                    p._isReady = true;
                    p.trigger("model:loaded", p);
                    if (b.isFunction(o)) {
                        o(p)
                    }
                }
            });
            return l
        }
    };
    d.Collection = h.Collection.extend({});
    d.Collection.extend = function () {
        var k = h.Collection.extend.apply(this, arguments);
        var j = arguments[0].collectioName;
        d.Collections[j] = k;
        return k
    };
    d.registerComponent = function (k, l, j) {
        d.Components[k] = { Model: l, View: j, name: k }
    };
    d.addLoadedComponent = function (l, k, j) {
        if (!d.Components[l]) {
            return
        } if (!d.loadedComponents[l]) {
            d.loadedComponents[l] = {}
        } d.loadedComponents[l][k.id] = { model: k, view: j };
        return d.loadedComponents[l][k.id]
    };
    d.findTemplate = function (n, j, l) {
        if (arguments.length == 2) {
            l = j;
            j = ""
        } var m = l + "/" + j;
        if (d.templates[m]) {
            return d.templates[m]
        } var k;
        f.ajax({ async: false, url: d.config.urlRoot + "/services/social/templates?resourceType=" + l + "&ext=hbs&selector=" + j }).done(function (p, o) {
            if (o == "success") {
                k = g.compile(p);
                d.templates[m] = k
            }
        });
        return k
    };
    d.log = e;
    d.registerFieldType = function (j, k) {
        if (!(b.isFunction(k.prototype.setValue))) {
            this.log.error('%s does not implement required method, "setValue"', j);
            return
        } if (!(b.isFunction(k.prototype.getValue))) {
            this.log.error('%s does not implement required method, "getValue"', j);
            return
        } if (!(b.isFunction(k.prototype.focus))) {
            this.log.error('%s does not implement required method, "focus"', j);
            return
        } if (!(b.isFunction(k.prototype.destroy))) {
            this.log.error('%s does not implement required method, "destroy"', j);
            return
        } this.fieldManagers[j] = k
    };
    var a = function (l, k, j) {
        this.$el = l
    };
    a.prototype.setValue = function (j) {
        return this.$el.val(j)
    };
    a.prototype.getValue = function () {
        return this.$el.val()
    };
    a.prototype.focus = function () {
        this.$el.focus()
    };
    a.prototype.destroy = function () { };
    d.View.prototype.launchModal = function (n, o, m) {
        var p = f('<div class="scf scf-modal-screen"></div>');
        var l = f('<div class="scf scf-modal-dialog" style="display:none;"><h2 class="scf-modal-header">' + o + '</h2><div class="scf-modal-close">X</div></div>');
        var k = n;
        var q = k.parent();
        l.append(k);
        k.show();
        var s = function (t) {
            if (d.Util.mayCall(t, "preventDefault")) {
                t.preventDefault()
            } k.hide();
            q.append(k);
            p.remove();
            l.remove();
            if (b.isFunction(m)) {
                m()
            }
        };
        l.find(".scf-modal-close").click(s);
        l.find(".scf-js-modal-close").click(s);
        f("body").append(p);
        f("body").append(l);
        var j = (window.innerWidth - l.innerWidth()) / 2;
        var r = (window.innerHeight - l.innerHeight()) / 2;
        l.css({ top: r, left: j });
        l.show();
        return s
    };
    d.View.prototype.overlayTemplate = '<div class="scf-overlay"><div class="scf-overlay-header btn-toolbar"><button class="btn btn-primary scf-ovelay-back-button" title="{{i18n "Back"}}"><span class="scf-icon-left"></span></button><h3>{{header}}</h3></div></div>';
    d.View.prototype.loadOverlay = function (k, m, p, o) {
        var l = g.compile(this.overlayTemplate);
        var j = f(l({ header: p }));
        var n = function () {
            j.remove();
            m.find(".scf-is-overlay-hidden").each(function () {
                f(this).removeClass("scf-is-overlay-hidden")
            });
            if (o && b.isFunction(closeCallBack)) {
                closeCallBack()
            }
        };
        m.children().each(function () {
            f(this).addClass("scf-is-overlay-hidden")
        });
        j.append(k);
        m.append(j);
        j.find(".scf-ovelay-back-button").click(n);
        return n
    };
    d.View.prototype.errorTemplate = "<h3>{{details.status.message}}</h3>";
    d.View.prototype.addErrorMessage = function (m, k) {
        var n = g.compile(this.errorTemplate);
        var l = f(m);
        var j = f(n(k));
        j.addClass("scf-js-error-message");
        l.before(j)
    };
    d.View.prototype.compileTemplate = function (j) {
        return g.compile(j)
    };
    d.View.prototype.clearErrorMessages = function (k, j) {
        this.$el.find(".scf-js-error-message").remove();
        this.$el.find(".scf-error").removeClass("scf-error")
    };
    d.ChildView = d.View.extend({ bindView: function () { }, bindDataForms: function () { }, bindDataFields: function () { }, bindEvents: function () { }, viewName: "ChildView" });
    d.Util = {
        mayCall: function (k, j) {
            if (b.isUndefined(k) || b.isNull(k)) {
                return false
            } return (k.hasOwnProperty(j) || k[j] !== null) && b.isFunction(k[j])
        }, announce: function (j, k) {
            f(document).trigger(j, k)
        }, listenTo: function (j, k) {
            f(document).on(j, function (m, l) {
                k(l);
                m.stopImmediatePropagation()
            })
        }, startsWith: function (k, j) {
            return k.substr(0, j.length) === j
        }, getContextPath: function () {
            var j = CQ.shared.HTTP.getPath();
            var k = CQ.shared.HTTP.getExtension();
            var l = j.split(k);
            if (l && l !== undefined) {
                if (l.length > 1) {
                    return l[1]
                } else {
                    return l[0]
                }
            } return ""
        }
    };
    window.SCF = d
})(Backbone, $CQ, _, Handlebars);
(function (g, f, c, d, b, e) {
    var a = function (m, h, l) {
        var j = "";
        var n = { resourcePath: m };
        if (l) {
            c.log.warn("Forcing resource type is not supported when sling including on the client side")
        } if (h) {
            n.selector = h
        } var k = c.config.urlRoot + m;
        k += h ? "." + h + ".html" : ".html";
        d.ajax({ async: false, url: k }).done(function (p, o) {
            if (o == "success") {
                j = p
            }
        });
        return new g.SafeString(j)
    };
    g.registerHelper("include", function (h, j) {
        if (arguments.length === 1) {
            j = h;
            h = undefined
        } var k = j.data.parentView;
        var E = function (G) {
            if (!G) {
                return undefined
            } var F = G.lastIndexOf("View");
            if (F !== -1) {
                return G.substr(0, F) + "Model"
            } else {
                return G + "Model"
            }
        };
        var B = b.isUndefined(j.hash.bind) ? true : j.hash.bind;
        var A = j.hash.view;
        var n = j.hash.template;
        var o = j.hash.resourceType;
        var w = j.hash.path;
        var v = j.hash.model || E(A);
        var t, l, x, D, y, q;
        if (b.isObject(h)) {
            o = o || h.resourceType;
            q = c.Components[o];
            if ((b.isUndefined(q)) && (o.match(/^(\/apps)|(\/libs)/))) {
                var r = o.substring(6);
                q = c.Components[r]
            } var s;
            y = h.id;
            if (!y) {
                var m = h.url;
                if (!m) {
                    c.log.warn("No resource id found for context: ");
                    c.log.warn(h)
                } var z = m.substr(c.config.urlRoot.length);
                z = z.substr(0, z.lastIndexOf(c.constants.URL_EXT));
                y = z
            } if (n) {
                s = c.findTemplate(y, n, o)
            } else {
                s = c.findTemplate(y, o)
            } var C = function () {
                if (k.model.get("resourceType") === o && k.model.id === y) {
                    return c.ChildView
                } return q ? q.View : undefined
            };
            x = A ? c.Views[A] : C();
            x = B ? x : undefined;
            D = v ? c.Models[v] : q ? q.Model : undefined;
            D = B ? D : undefined;
            if (!x && !s) {
                if (y) {
                    return a(y, n, o)
                } c.log.error("No view or template found for " + o + " and template " + n);
                return ""
            } if (!x && s) {
                return new g.SafeString(s(c.View.prototype.getMergedContexts(h)))
            } if (x && !s) {
                c.log.error("No template found for " + o + " and template " + n);
                return ""
            } if (!D || !y) {
                t = new x({ context: h })
            } else {
                l = D.findLocal(y);
                if (!l) {
                    l = D.createLocally(h)
                } if (l.isNew()) {
                    l.load(y)
                } t = new x({ model: l })
            } if (n && s) {
                t.template = s
            } else {
                if (s) {
                    x.prototype.template = s
                }
            }
        } else {
            var u = w ? w.slice(0, 1) === "/" : false;
            if (!h && !u) {
                c.log.error("Must provide context path when including " + o);
                return ""
            } y = u ? w : h + "/" + w;
            if (o) {
                q = c.Components[o]
            } if (B && (q || (A && v))) {
                x = !q ? c.Views[A] : q.View;
                D = !q ? c.Models[v] : q.Model
            } if (x && D) {
                var p = y.indexOf("http://") === 0;
                l = D.find(y, undefined, p);
                t = new x({ model: l });
                if (n) {
                    t.template = c.findTemplate(y, n, o)
                } else {
                    if (typeof t.template === "undefined") {
                        c.log.info("Getting default template for " + o);
                        t.template = c.findTemplate(y, o, o)
                    }
                }
            } else {
                return a(y, n, o)
            }
        } t.setParent(k);
        if (!x.prototype.template && t.template && x != c.ChildView) {
            x.prototype.template = c.findTemplate(l.get("id"), o)
        } t.templateName = n || "default";
        t.resource = y;
        return new g.SafeString("<!-- data-view='" + t.cid + "'-->")
    });
    g.registerHelper("equals", function (h, k, j) {
        if (arguments.length < 3) {
            throw new Error("Handlebars Helper equal needs 2 parameters")
        } if (h != k) {
            return j.inverse(this)
        } else {
            return j.fn(this)
        }
    });
    g.registerHelper("lt", function (j, h) {
        var k = arguments[arguments.length - 1];
        return (j < h) ? k.fn(this) : k.inverse(this)
    });
    g.registerHelper("lastPath", function (k, j) {
        var h = k.lastIndexOf("/");
        return k.slice(h + 1)
    });
    g.registerHelper("getComponentName", function (j, h) {
        return j.split("/")[1]
    });
    g.registerHelper("pretty-time", function (j, r) {
        if (!j) {
            return ""
        } var m = new Date(j);
        var k = new Date();
        var q = k.getTime() - m.getTime();
        var l = 1000;
        var n = l * 60;
        var o = n * 60;
        var p = o * 24;
        f.locale(e.shared.I18n.getLocale());
        var h = r.hash.daysCutoff ? r.hash.daysCutoff : 60;
        if (q < n) {
            m = Math.round(q / l) + "";
            if (m == 1) {
                return new g.SafeString(e.I18n.get("{0} second ago", m))
            } return new g.SafeString(e.I18n.get("{0} seconds ago", m))
        } else {
            if (q < o) {
                m = Math.round(q / n);
                if (m == 1) {
                    return new g.SafeString(e.I18n.get("{0} minute ago", m))
                } return new g.SafeString(e.I18n.get("{0} minutes ago", m))
            } else {
                if (q < p) {
                    m = Math.round(q / o);
                    if (m == 1) {
                        return new g.SafeString(e.I18n.get("{0} hour ago", m))
                    } return new g.SafeString(e.I18n.get("{0} hours ago", m))
                } else {
                    if (q < p * h) {
                        m = Math.round(q / p);
                        if (m == 1) {
                            return new g.SafeString(e.I18n.get("{0} day ago", m))
                        } return new g.SafeString(e.I18n.get("{0} days ago", m))
                    } else {
                        return new g.SafeString(f(m).format(e.I18n.get("MMM DD YYYY, h:mm A", null, "moment.js, communities moderation")))
                    }
                }
            }
        }
    });
    g.registerHelper("pages", function (h, r) {
        var p = h;
        if (p.hasOwnProperty("selectedPage") && p.hasOwnProperty("totalPages") && p.hasOwnProperty("pageSize") && p.hasOwnProperty("basePageURL")) {
            var j = "";
            if (p.totalPages <= 1) {
                return j
            } var n = Math.abs(p.pageSize);
            var o = (p.orderReversed) ? "-" : "";
            var l = p.selectedPage;
            var m = l;
            if ((m - 2) > 0 && p.totalPages > 5) {
                m = m - 2
            } if (p.totalPages <= 5) {
                m = 1
            } else {
                if (p.totalPages - l < 2) {
                    m = p.totalPages - 4
                }
            } var q = m + 5;
            if (q > p.totalPages) {
                q = p.totalPages + 1
            } for (var k = m;
                k < q;
                k++) {
                    p.pageNumber = k;
                p.currentPageUrl = p.basePageURL + "." + ((k - 1) * n) + "." + o + n + ".html";
                p.currentPage = k == p.selectedPage;
                p.suffix = ((k - 1) * n) + "." + o + n;
                j += r.fn(p)
            } return j
        } else {
            return ""
        }
    });
    g.registerHelper("loadmore", function (l, k) {
        var n = l.pageInfo;
        var h = l.items;
        if (!l.totalSize || !n) {
            return ""
        } if (!(!b.isUndefined(n.selectedPage) && l.totalSize && n.pageSize)) {
            return ""
        } if (l.totalSize <= 0) {
            return ""
        } var o = {};
        o.suffix = n.nextSuffix;
        var m = this.totalSize;
        if (!b.isUndefined(h)) {
            m = m - h.length
        } if (m === 0) {
            return ""
        } var j = n.nextPageURL;
        if (!b.isUndefined(j) && j.indexOf(".json", j.length - 5) !== -1) {
            j = j.substr(0, j.length - 5);
            j += ".html"
        } o.remaining = m;
        o.moreURL = j;
        return k.fn(o)
    });
    g.registerHelper("dateUtil", function (k, j) {
        var h = k;
        var m = j.hash.format;
        var l = j.hash.timezone;
        if (!h || typeof h != "number") {
            h = new Date().getTime()
        } else {
            h = new Date(h)
        } m = m.replace(/y/g, "Y");
        m = m.replace(/\bdd\b/gi, "DD");
        m = m.replace(/\bd\b/gi, "D");
        m = m.replace(/\bEEEE\b/gi, "dddd");
        f.locale(e.shared.I18n.getLocale());
        if (l && f.tz) {
            return new g.SafeString(f.tz(h, l).format(m))
        } return new g.SafeString(f(h).format(m))
    });
    g.registerHelper("i18n", function (k, j) {
        if (arguments.length > 1) {
            var h = b.rest(arguments);
            return e.I18n.get(k, h)
        } else {
            return e.I18n.get(k)
        }
    });
    g.registerHelper("xss-htmlAttr", function (k, j) {
        var h = d("div");
        h.attr("data-xss", k);
        var l = h.attr("data-xss");
        return e.shared.XSS.getXSSValue(l)
    });
    g.registerHelper("xss-jsString", function (j, h) {
        return e.shared.XSS.getXSSValue(j)
    });
    g.registerHelper("xss-html", function (j, h) {
        return d("<div/>").text(j).html()
    });
    g.registerHelper("xss-validHref", function (j, h) {
        return encodeURI(j)
    });
    g.registerHelper("dom-id", function (j, h) {
        if (!j) {
            return ""
        } var k = d.trim(j);
        k = k.replace(/\./g, "-");
        k = k.replace(/\//g, "-");
        k = k.replace(/:/g, "-");
        return k
    });
    g.registerHelper("abbreviate", function (h, r) {
        if (!h) {
            return ""
        } var l = r.hash.maxWords;
        var j = r.hash.maxLength;
        var k = r.hash.safeString;
        var q = d.trim(h);
        var o = q.length;
        var m = q.substring(0, j).split(" ");
        var n = m.slice(0, m.length > l ? l : m.length).join(" ");
        var p = o != n.length && r.fn ? r.fn(this) : "";
        if (k) {
            return new g.SafeString(n) + p
        } return n + p
    });
    g.registerHelper("includeClientLib", function (j, h) {
        return ""
    });
    g.registerHelper("if-wcm-mode", function (j, h) {
        return ""
    });
    g.registerHelper("getContextPath", function (k, j) {
        var h = "";
        if (Granite && Granite.HTTP.getContextPath()) {
            h = Granite.HTTP.getContextPath()
        } return h
    })
})(Handlebars, moment, SCF, $CQ, _, CQ);
(function (f, e, b, g, d) {
    var c = e.View.extend({
        viewName: "Login", tagName: "div", className: "scf-login", init: function () {
            this._isReady = false;
            this.listenTo(this.model, this.model.events.LOGGED_IN_SUCCESS, this.render);
            this.listenTo(this.model, this.model.events.LOGGED_OUT, this.render)
        }, loginAction: function () {
            if (this.model.get("loggedIn")) {
                this.$el.children(".login-dialog").hide();
                this.logout()
            } else {
                var h = this.$el.children(".login-dialog").toggle();
                h.find("input:first").focus()
            }
        }, logout: function () {
            this.model.logout()
        }, login: function () {
            var j = this.getField("username");
            var h = this.getField("password");
            if (j === "" || h === "") {
                return
            } this.model.login(j, h)
        }
    });
    var a = e.Model.extend({
        moderatorCheckAttribute: "moderatorCheck", events: { LOGGED_IN_SUCCESS: "login:success", LOGGED_IN_FAIL: "login:failed", LOGGED_OUT: "logout:success" }, initialize: function (h, j) {
            this._isReady = false;
            if (g.shared.User.data === undefined || g.shared.User.data === null) {
                this.initUser(j)
            } else {
                this.getLoggedInUser(j)
            }
        }, defaults: { loggedIn: false }, isReady: function () {
            return this._isReady
        }, checkIfModeratorFor: function (j) {
            var h = this.attributes.hasOwnProperty(this.moderatorCheckAttribute) ? this.attributes[this.moderatorCheckAttribute] : [];
            return this.attributes.loggedIn && b.contains(h, j)
        }, checkIfUserCanPost: function (j) {
            var h = this.attributes.hasOwnProperty("mayPost") ? this.attributes.mayPost : [];
            return this.attributes.loggedIn && b.contains(h, j)
        }, setLanguage: function (h) {
            var j = h.preferences && h.preferences.language ? h.preferences.language : "en";
            var k = document.documentElement.lang || j;
            g.shared.I18n.setLocale(k)
        }, initUser: function (h) {
            var k = g.shared.HTTP.externalize("/libs/granite/security/currentuser" + g.shared.HTTP.EXTENSION_JSON + "?props=preferences/language");
            k = g.shared.HTTP.noCaching(k);
            var j = this;
            f.ajax({
                url: k, type: "GET", success: function (l) {
                    j.getLoggedInUser(h, l.home);
                    j.setLanguage(l)
                }, async: false
            })
        }, getLoggedInUser: function (j, h) {
            var k = this;
            var m;
            if (j.hasOwnProperty(a.moderatorCheckAttribute)) {
                m = "?" + a.moderatorCheckAttribute + "=";
                b.each(j[a.moderatorCheckAttribute], function (o) {
                    m += o + ","
                });
                m = m.substring(0, m.length - 1)
            } var n = "";
            if (h !== undefined) {
                n = h
            } else {
                if (g.shared.User.initialized) {
                    n = g.shared.User.data.home
                } else {
                    var l = g.shared.User.init();
                    n = g.shared.User.data.home
                }
            } f.ajax({ url: e.config.urlRoot + "/services/social/getLoggedInUser" + m + "&h=" + n, xhrFields: { withCredentials: true }, type: "GET" }).done(function (o) {
                if (o.name) {
                    k.set({ loggedIn: true });
                    k.set(o)
                } k._isReady = true;
                if (typeof j !== "undefined" && j.silent) {
                    k.trigger("model:loaded", { model: k, silent: true })
                } else {
                    k.trigger("model:loaded", { model: k, silent: false })
                }
            })
        }, logout: function () {
            var h = this;
            f.ajax({ url: e.config.urlRoot + "/services/social/logout", xhrFields: { withCredentials: true }, type: "GET" }).always(function () {
                h.clear();
                h.trigger(h.events.LOGGED_OUT)
            })
        }, login: function (k, h) {
            var j = this;
            f.ajax({ url: e.config.urlRoot + "/libs/login.html/j_security_check", xhrFields: { withCredentials: true }, data: { j_username: k, j_password: h, j_validate: "true" }, type: "POST" }).success(function (l, p, n, o) {
                var m = n.getResponseHeader("Set-Cookie") === null || n.getResponseHeader("Set-Cookie") !== "";
                if (!m) {
                    this.trigger(this.events.LOGGED_IN_FAIL, { user: k })
                } else {
                    j.getLoggedInUser();
                    j.trigger(j.events.LOGGED_IN_SUCCESS, { user: k })
                }
            })
        }
    });
    a.moderatorCheckAttribute = "moderatorCheck";
    e.LoginView = c;
    e.LoginModel = a;
    e.registerComponent("login", e.LoginModel, e.LoginView)
})($CQ, SCF, _, CQ, Granite);
(function (k, l, j, d, f) {
    var e = CQ.shared.HTTP.getContextPath();
    f.events = f.events || {};
    f.events.BOOTSTRAP_REQUEST = "scf-bootstrap-request";
    f.config.urlRoot = window.location.protocol + "//" + window.location.host;
    if (e !== null && e.length > 0) {
        f.config.urlRoot += e
    } var g = function (p) {
        var o = p.model;
        if (f.Components[p.type]) {
            var n = p.template ? f.findTemplate(p.id, p.template, p.type) : f.findTemplate(p.id, p.type);
            var m = new f.Components[p.type].View({ model: o, el: p.el });
            if (p.template) {
                m.template = n
            } else {
                f.Components[p.type].View.prototype.template = n
            } m.templateName = p.template || "default";
            m.resource = p.id;
            k.each(f.loadedComponents, function (q) {
                k.each(q, function (t, x) {
                    if (o.attributes.hasOwnProperty("parentId")) {
                        if (x === o.attributes.parentId) {
                            m.setParent(t.view)
                        }
                    } else {
                        if (m._parentView === undefined || m._parentView === null) {
                            var s = m.$el.parents("[data-component-id][data-scf-component]");
                            if (s && s.length === 1) {
                                var w = s.attr("data-component-id");
                                var u = s.attr("data-scf-component");
                                var v = f.loadedComponents[u];
                                if (v !== undefined) {
                                    var r = v[w];
                                    if (r !== undefined && r.hasOwnProperty("view")) {
                                        m.setParent(r.view)
                                    }
                                }
                            }
                        }
                    }
                })
            });
            if (o.cacheFixed) {
                m.render()
            } p.view = m
        }
    };
    var h = function (o) {
        if (f.Components[o.type]) {
            var n;
            var p = o.modelHolder;
            var m = f.Components[o.type].Model;
            if (p.length > 0) {
                var q = l(p[0]).text();
                if (q === "") {
                    q = p[0].text
                } var r = l.parseJSON(q);
                o.id = r.id;
                n = m.findLocal(o.id);
                if (!n) {
                    n = f.Components[o.type].Model.createLocally(r)
                }
            } else {
                n = m.findLocal(o.id);
                if (!n) {
                    n = f.Components[o.type].Model.find(o.id)
                }
            } o.model = n
        }
    };
    var c = function (t, r, q, p) {
        var s = l("script[type='application/json'][id='" + t + "']");
        var o = { id: t, type: r, template: q, modelHolder: s, el: p };
        var n = h(o);
        var m = g(o);
        return f.addLoadedComponent(r, n, m)
    };
    var b = function (n) {
        var m = { id: n.attr("data-component-id"), type: n.data("scf-component"), template: n.data("scf-template"), modelHolder: l("script[type='application/json'][id='" + n.attr("data-component-id") + "']"), el: n };
        return m
    };
    var a = function () {
        var n = l("[data-scf-component]");
        var p = [], q = [];
        n.each(function (r, t) {
            var s = b($(t));
            if (!f.loadedComponents[s.type] || !f.loadedComponents[s.type][s.id]) {
                q.push(s)
            } p.push(s)
        });
        if (q.length > 0) {
            var m = {};
            m.silent = true;
            m[f.LoginModel.moderatorCheckAttribute] = k.map(p, function (s) {
                var r;
                if (s.id.indexOf("/content/usergenerated") === -1) {
                    return s.id
                } try {
                    r = JSON.parse(s.modelHolder.text())
                } catch (t) {
                    return false
                } if (!(r.hasOwnProperty("sourceComponentId"))) {
                    return false
                } if (r.sourceComponentId.indexOf("/content/usergenerated") !== -1) {
                    return false
                } return r.sourceComponentId
            });
            m[f.LoginModel.moderatorCheckAttribute] = k.compact(m[f.LoginModel.moderatorCheckAttribute]);
            if (f.Session) {
                f.Session.getLoggedInUser(m, undefined)
            } else {
                var o = new f.LoginModel({}, m);
                f.Session = o
            }
        } k.each(q, function (r) {
            h(r)
        });
        k.each(q, function (r) {
            g(r);
            f.addLoadedComponent(r.type, r.model, r.view)
        })
    };
    l(document).ready(a);
    if (!j.History.started) {
        j.history.start({ pushState: true, hasChange: false })
    } $(document).on(f.events.BOOTSTRAP_REQUEST, a);
    f.addComponent = function (o) {
        var n = $(o);
        if (n.length === 0) {
            throw "Could not find requested element on page."
        } var m = b(n);
        if (m === null) {
            throw "Component is already loaded."
        } if (!m.id) {
            throw "Component does not have a data-component-id attribute, which is required"
        } if (!m.type) {
            throw "Component does not have a data-scf-component attribute, which is required."
        } return c(m.id, m.type, m.template, m.el)
    };
    f.unloadComponent = function (p, n) {
        var o = f.loadedComponents[n];
        if (o === null) {
            throw "Type " + n + " is not registered with SCF."
        } var m = f.loadedComponents[n][p];
        if (m === null || m === undefined) {
            throw "Could not find component with ID: " + p
        } m.view.destroy();
        m.model = null;
        delete f.loadedComponents[n][p]
    }
})(_, $CQ, Backbone, Handlebars, SCF);
(function (e, c, b, d) {
    var a = function (j, y, l, p) {
        var s = {};
        s = b.extend(y, s);
        s = b.extend(this.config, s);
        var h = j.get()[0];
        if (b.isUndefined(window.CKEDITOR)) {
            SCF.log.error('Rich text editor requested but unable to find CKEDITOR please include client library category: "%s" or disable RTE', "ckeditor");
            return
        } this.$el = j;
        var r = this.$el.data("editorheight");
        var k = SCF.config.urlRoot + l.get("id") + SCF.constants.URL_EXT;
        var x = l.get("configuration");
        x = x && x.isAttachmentAllowed;
        if (s.extraPlugins === undefined) {
            s.extraPlugins = (window.CKEDITOR.config.extraPlugins) ? window.CKEDITOR.config.extraPlugins + "," : undefined
        } if (l.attributes && l.attributes.configuration && l.attributes.configuration.enableMentions) {
            s.extraAllowedContent = "a[*]";
            var m = '<li data-id="{id}"><img src="{avatarUrl}" alt="{name}">{name}</li>';
            var v = '<a href = "{friendlyUrl}" class = "social-mention" data-social-mention-authorizableid = "{authorizableId}">{name}</a>';
            var z = 4;
            var g = 20;
            s.mentions = [{
                feed: function (C, E) {
                    var A = C.query;
                    var B = l.attributes.sourceComponentId ? l.attributes.sourceComponentId : l.attributes.id;
                    var D = window.location.origin + B + '/userlist.social.0.20.json?type=users&filter=[{"operation":"CONTAINS","./@rep:principalName":"' + A + '"},{"operation":"like","./@rep:principalName":"' + A + '"},{"operation":"like","profile/@givenName":"' + A + '"},{"operation":"like","profile/@familyName":"' + A + '"}]&fromPublisher=true&_charset_=utf-8';
                    $.ajax({
                        async: false, url: Granite.HTTP.externalize(D), type: "GET", success: function (F) {
                            if (F.items != undefined) {
                                E(JSON.parse(JSON.stringify(F.items)))
                            }
                        }
                    })
                }, minChars: z, itemsLimit: g, itemTemplate: m, outputTemplate: v
            }]
        } var w = s.toolbar[0].items;
        var o;
        if (l.get("resourceType") === "social/journal/components/hbs/journal" || l.get("resourceType") === "social/calendar/components/hbs/calendar" || l.get("resourceType") === "social/ideation/components/hbs/ideation" || l.get("resourceType") === "social/ideation/components/hbs/idea" || (l.get("resourceType") === "social/calendar/components/hbs/event" || l.get("resourceType") === "social/journal/components/hbs/entry_topic") && j[0].dataset.rteType !== "comment") {
            o = w.indexOf("oembed");
            if (o === -1) {
                s.toolbar[0].items.push("oembed")
            } if (s.extraPlugins === undefined) {
                s.extraPlugins = "oembed"
            } else {
                if (s.extraPlugins.length > 0 && s.extraPlugins.indexOf("oembed") === -1) {
                    s.extraPlugins = s.extraPlugins.concat(",oembed")
                }
            }
        } else {
            o = w.indexOf("oembed");
            if (o > 0) {
                w.splice(o, 1)
            }
        } if (x) {
            s.filebrowserUploadUrl = k;
            s.uploadUrl = k;
            o = w.indexOf("Image");
            if (o === -1) {
                s.toolbar[0].items.push("Image")
            } if (s.extraPlugins === undefined) {
                s.extraPlugins = "image2,uploadimage"
            } else {
                if (s.extraPlugins.length > 0 && s.extraPlugins.indexOf("image2,uploadimage") === -1) {
                    s.extraPlugins = s.extraPlugins.concat(",image2,uploadimage")
                }
            }
        } else {
            o = w.indexOf("Image");
            if (o === -1) {
                s.toolbar[0].items.push("Image")
            } if (s.extraPlugins === undefined) {
                s.extraPlugins = "image2"
            } else {
                if (s.extraPlugins.length > 0 && s.extraPlugins.indexOf("image2") === -1) {
                    s.extraPlugins = s.extraPlugins.concat(",image2")
                }
            }
        } var u = c(h).attr("name");
        if (b.isEmpty(u)) {
            var n = l.get("id");
            var q = n.lastIndexOf("/");
            n = n.slice(q + 1);
            var f = c(h).data("attrib");
            n = f + "-" + n;
            c(h).attr("name", n);
            u = n
        } var t = this.$el.data("editorresize");
        if (t) {
            s.resize_enabled = true
        } if (b.isNumber(r)) {
            s.height = r
        } if (!window.CKEDITOR.instances[u]) {
            this.editor = window.CKEDITOR.replace(h, s)
        } else {
            if (this.editor === undefined) {
                this.editor = window.CKEDITOR.instances[u]
            }
        } this.model = l;
        if (x) {
            this.editor.on("fileUploadRequest", this.attachFileFromDragAndDrop);
            this.editor.on("fileUploadResponse", this.handleFileUploadResponse);
            this.changeImagePluginDialog()
        }
    };
    a.prototype.destroy = function () {
        if (this.editor) {
            try {
                if (this.editor.filter && this.editor.window && this.editor.window.getFrame()) {
                    this.editor.destroy(true);
                    this.editor.removeAllListeners()
                } else {
                    this.editor.removeAllListeners();
                    window.CKEDITOR.remove(this.editor);
                    window.CKEDITOR.fire("instanceDestroyed", null, this.editor)
                }
            } catch (f) {
                SCF.log.error("Couldn't destroy editor: %o", f)
            }
        } delete this.editor;
        return
    };
    a.prototype.getFileIFrameFromDialog = function (h) {
        var q = h;
        var l = q.contents;
        for (var p = 0;
            p < l.length;
            p++) {
                var k = l[p];
            var g = k.id;
            if (g == "Upload") {
                var f = k.elements;
                for (var m = 0;
                    m < f.length;
                    m++) {
                        var o = f[m];
                    var n = o.id;
                    if (n == "uploadButton") {
                        o.onClick = this.setCustomFileButtonClick;
                        o["for"] = ["Upload", "file"]
                    } if (n == "upload") {
                        o.id = "file"
                    }
                }
            }
        }
    };
    a.prototype.setCustomFileButtonClick = function (r) {
        var n = r.sender["for"];
        var o = r.data.dialog;
        var k = o.getContentElement(n[0], n[1]);
        var l = c("#" + k.domId + " iframe");
        var p = l.contents().find("form");
        var s = b.bind(function (v) {
            var u;
            if (typeof (v.response) !== "object") {
                u = JSON.parse(v.response)
            } else {
                u = v.response
            } var t = u.url;
            t = CQ.shared.HTTP.encodePath(t);
            o.getContentElement("info", "src").setValue(t);
            o.selectPage("info");
            if (c(".cke_dialog_ui_input_text").length !== 0) {
                c(".cke_dialog_ui_input_text").focus()
            }
        }, this);
        var q = b.bind(function (t) {
            SCF.log.error("Failed to upload file" + t);
            alert("Failed to upload file " + t.responseJSON.error.message)
        }, this);
        var j;
        var m = p.find("input:file");
        var h = m[0].files;
        var f = (typeof h != "undefined");
        if (f) {
            var g = p.attr("action");
            a.prototype.attachFile.call(this, h, g, s, q)
        } r.stop();
        return false
    };
    a.prototype.handleFileUploadResponse = function (f) {
        f.stop();
        var h = f.data;
        var j = h.fileLoader.xhr;
        var g = j.responseText;
        g = JSON.parse(g);
        if (typeof (g.response) !== "object") {
            g.response = JSON.parse(g.response)
        } if (j.status == 200) {
            h.uploaded = 1;
            h.url = CQ.shared.HTTP.encodePath(g.response.url);
            h.name = g.response.properties.name
        }
    };
    a.prototype.attachFileFromDragAndDrop = function (h) {
        var g = h.data.fileLoader;
        var j = g.xhr;
        var f;
        if (window.FormData) {
            f = new FormData()
        } if (f) {
            f.append("file", g.file);
            f.append("id", "nobot");
            f.append(":operation", "social:uploadImage");
            f.append("_charset_", "UTF-8");
            j.open("POST", g.uploadUrl, true);
            j.setRequestHeader("Accept", "application/json");
            j.withCredentials = true;
            j.send(f)
        } h.stop()
    };
    a.prototype.attachFile = function (j, h, k, g) {
        var f;
        if (window.FormData) {
            f = new FormData()
        } if (f) {
            c.each(j, function (l, m) {
                f.append("file", m)
            });
            f.append("id", "nobot");
            f.append(":operation", "social:uploadImage");
            f.append("_charset_", "UTF-8");
            c.ajax(h, { dataType: "json", type: "POST", processData: false, contentType: false, xhrFields: { withCredentials: true }, data: f, success: k, error: g })
        }
    };
    a.prototype.changeImagePluginDialog = function () {
        if (!a.isImageDialogDefinitionChanged) {
            a.isImageDialogDefinitionChanged = true;
            var f = this;
            window.CKEDITOR.on("dialogDefinition", function (g) {
                var h = g.data.name;
                if (h == "image2") {
                    f.getFileIFrameFromDialog(g.data.definition)
                }
            })
        }
    };
    a.prototype.config = { toolbar: [{ name: "basicstyles", items: ["Bold", "Italic", "Underline", "NumberedList", "BulletedList", "Outdent", "Indent", "JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock", "TextColor"] }], autoParagraph: false, autoUpdateElement: false, removePlugins: "elementspath", resize_enabled: false };
    a.prototype.setValue = function (f) {
        this.editor.setData(f)
    };
    a.prototype.getValue = function () {
        return this.editor.getData()
    };
    a.prototype.focus = function () {
        return this.editor.focus()
    };
    a.isImageDialogDefinitionChanged = false;
    SCF.registerFieldType("ckeditor", a);
    SCF.registerFieldType("rte", a)
})(Backbone, $CQ, _, Handlebars);
(function (b, d, g, f, c) {
    var a = function (h, k, j) {
        this.containerEl = h;
        var m = d(h).data("tag-filter");
        var l = d(h).data("tag-limit");
        d(h).tagit({
            fieldName: name, allowSpaces: false, placeholderText: CQ.I18n.getMessage("Add a tag"), animate: false, minLength: 2, removeConfirmation: true, showAutocompleteOnFocus: false, tagSource: function (o, n) {
                d.ajax({
                    url: c.config.urlRoot + "/services/tagfilter", data: { term: o.term, tagfilter: m, tagFilterLimit: l, pagePath: CQ.shared.HTTP.getPath(), _charset_: "UTF-8" }, dataType: "json", success: function (p) {
                        n(d.map(p, function (q) {
                            return { label: q.label, value: q.value, id: q.tagid }
                        }))
                    }
                })
            }
        });
        if (!b.isEmpty(j.get("tags"))) {
            d.each(j.get("tags"), function (n, o) {
                d(h).tagit("createTag", o.title, o.tagId, o.value)
            })
        }
    };
    a.prototype.getValue = function () {
        var h = [];
        d(this.containerEl).find("li").each(function () {
            var k = $(this);
            var j = k.find("input").attr("value");
            if (!b.isEmpty(j)) {
                h.push(j)
            }
        });
        return h
    };
    a.prototype.setValue = function () { };
    a.prototype.focus = function () {
        d(this.el).focus()
    };
    a.prototype.destroy = function () { };
    var e = function (p, l, m) {
        var o = function (t) {
            var r = {};
            for (var s in t) {
                r[s] = f.compile(t[s])
            } return r
        };
        this.modelTags = m.get("tags");
        this.templatesSource = this.defaultTemplates;
        if (l && l.hasOwnProperty("templates")) {
            this.templatesSource = b.extend(this.defaultTemplates, l.templates)
        } this.compiledTemplates = o(this.templatesSource);
        var j = p.get()[0];
        var h = d(j).data("tag-filter");
        var k = d(j).data("tag-limit");
        var q = e.tagsByFilterVal[h];
        if (!q) {
            var n = this;
            d.ajax({
                url: c.config.urlRoot + "/services/tagfilter", data: { tagfilter: h, tagFilterLimit: k }, dataType: "json", async: false, success: function (r) {
                    q = r;
                    e.tagsByFilterVal[h] = q;
                    n.initTagFields(q, j)
                }
            })
        } else {
            this.initTagFields(q, j)
        }
    };
    e.prototype.initTagFields = function (j, o) {
        var p = d(this.compiledTemplates.inputField(j));
        this.selectedTags = {};
        var n = this;
        var m = d(o);
        m.after(p);
        var h = m.prop("attributes");
        d.each(h, function () {
            p.attr(this.name, this.value)
        });
        p.removeAttr("data-attrib");
        var l = d(this.compiledTemplates.tagsContainer(this.modelTags));
        if (!b.isUndefined(this.modelTags) && this.modelTags !== null && this.modelTags.hasOwnProperty("length")) {
            for (var k = 0;
                k < this.modelTags.length;
                k++) {
                    this.selectedTags[this.modelTags[k].tagId] = this.modelTags[k]
            }
        } p.after(l);
        l.find(".scf-js-remove-tag").click(function (r) {
            var q = d(r.target).closest("[data-attrib]");
            delete n.selectedTags[q.attr("data-attrib")];
            q.remove()
        });
        m.remove();
        p.change(function () {
            d(p).find("option:selected").each(function () {
                var q = d(this).text();
                var r = d(this).val();
                d(this).removeAttr("selected");
                if (r in n.selectedTags) {
                    return
                } var s = d(n.compiledTemplates.tag({ tagid: r, label: q }));
                l.append(s);
                n.selectedTags[r] = q;
                s.find(".scf-js-remove-tag").click(function () {
                    s.remove();
                    delete n.selectedTags[r]
                })
            });
            d(d(this).find("option[disabled]")[0]).removeAttr("disabled").attr("selected", "selected").attr("disabled", "disabled")
        })
    };
    e.prototype.getValue = function () {
        var h = [];
        for (var j in this.selectedTags) {
            h.push(j)
        } return h
    };
    e.prototype.setValue = function () {
        if (tags instanceof Array) {
            for (var j;
                j < tags.length;
                j++) {
                    var h = tags[j];
                this.selectedTags[h.tagId] = h.title
            }
        }
    };
    e.prototype.focus = function () {
        d(this.el).focus()
    };
    e.prototype.destroy = function () { };
    e.prototype.defaultTemplates = { inputField: '<select size="1"><option disabled selected>add a tag</option>{{#each this}}<option value="{{tagid}}">{{label}}</option>{{/each}}</select>', tagsContainer: '<ul class="scf-horizontal-tag-list">{{#each this}}<li class="scf-selected-tag " data-attrib="{{tagId}}"><span class="scf-js-remove-tag scf-remove-tag"></span> {{title}}</li>{{/each}}</div>', tag: '<li class="scf-selected-tag "><span class="scf-js-remove-tag scf-remove-tag"></span> {{label}}</li>' };
    e.tagsByFilterVal = {};
    c.registerFieldType("tags", e);
    c.registerFieldType("smarttags", a);
    c.TagManager = e;
    c.SmartTagManager = a
})(_, $CQ, Backbone, Handlebars, SCF);
(function (a, d, h, f, c) {
    var b = function (m, l, k) {
        var j = d(m);
        var n = l;
        j.autocomplete({
            source: function (s, o) {
                var q = d(m).val();
                var t = { operation: "CONTAINS", "./@rep:principalName": q };
                t = [t];
                var u = { operation: "like", "profile/@givenName": q };
                t.push(u);
                var r = { operation: "like", "profile/@familyName": q };
                t.push(r);
                t = JSON.stringify(t);
                var p = c.Context.sitePath + "/configuration.social.0.20.json";
                d.ajax({
                    url: p, type: "GET", success: function (w) {
                        var v = n + ".social.0.20.json";
                        v = CQ.shared.HTTP.addParameter(v, "filter", t);
                        v = CQ.shared.HTTP.addParameter(v, "type", "users");
                        v = CQ.shared.HTTP.addParameter(v, "fromPublisher", "true");
                        v = CQ.shared.HTTP.addParameter(v, "_charset_", "utf-8");
                        v = CQ.shared.HTTP.addParameter(v, "groupId", "community-" + w.siteId + "-members");
                        $.get(v, function (x) {
                            var y = x.items;
                            j.data("lastQueryResult", y);
                            o(y)
                        })
                    }
                })
            }, minLength: 3, change: function (o, p) {
                k.model.set("composedForValid", k.validateUser(j.val()))
            }, select: function (o, p) {
                k.model.set("composedForValid", true);
                d(this).val(p.item.authorizableId);
                return false
            }, setvalue: function (o) {
                this.element.val(o);
                this.input.val(o);
                d(this).val(o)
            }
        }).data("uiAutocomplete")._renderItem = function (o, p) {
            if (p.avatarUrl) {
                return d("<li></li>").append("<a><img src='" + p.avatarUrl + "' width='30' height='30'/>&nbsp;" + p.name + "</a>").data("item.autocomplete", p).appendTo(o)
            } else {
                return d("<li></li>").append("<a>" + p.name + "</a>").data("item.autocomplete", p).appendTo(o)
            }
        }
    };
    var e = function (l, k, j) {
        this.$el = d(l);
        this.model = j;
        this.config = k;
        this.modelId = this.model.get("forumId");
        if (a.isEmpty(this.modelId)) {
            this.modelId = this.model.get("id")
        } b(d(l), this.modelId + "/userlist", this)
    };
    var g = function (j, l) {
        for (var k in j) {
            if (j[k].authorizableId === l) {
                return true
            }
        } return false
    };
    e.prototype.validateUser = function (j) {
        var k = false;
        if (j.trim().length === 0) {
            return true
        } if (this.$el.data("lastQueryResult")) {
            if (g(this.$el.data("lastQueryResult"), j)) {
                k = true
            }
        } if (!k) {
            var l = this.searchUsers(j);
            k = g(l, j)
        } return k
    };
    e.prototype.searchUsers = function (k) {
        var l = this.modelId + "/userlist";
        var j = l + ".social.0.20.json?search=" + k + "&showUsers=true";
        var m;
        $.get(j, function (n) {
            m = n.items
        });
        m = m || [];
        return m
    };
    e.prototype.getValue = function () {
        return this.$el.val()
    };
    e.prototype.setValue = function () {
        this.$el.autocomplete().setValue(this.model.get("author").id)
    };
    e.prototype.focus = function () {
        d(this.el).focus()
    };
    e.prototype.destroy = function () {
        if (this.$el.data("autocomplete") || this.$el.data("lastQueryResult")) {
            this.$el.autocomplete("destroy")
        }
    };
    c.registerFieldType("userdropdown", e);
    c.UserDropDown = e
})(_, $CQ, Backbone, Handlebars, SCF);